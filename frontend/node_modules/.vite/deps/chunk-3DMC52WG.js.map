{
  "version": 3,
  "sources": ["../../refractor/lang/objectivec.js"],
  "sourcesContent": ["'use strict'\r\nvar refractorC = require('./c.js')\r\nmodule.exports = objectivec\r\nobjectivec.displayName = 'objectivec'\r\nobjectivec.aliases = ['objc']\r\nfunction objectivec(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.objectivec = Prism.languages.extend('c', {\r\n    string: {\r\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\r\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\r\n  })\r\n  delete Prism.languages.objectivec['class-name']\r\n  Prism.languages.objc = Prism.languages.objectivec\r\n}\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,aAAa;AACjB,WAAO,UAAU;AACjB,eAAW,cAAc;AACzB,eAAW,UAAU,CAAC,MAAM;AAC5B,aAAS,WAAW,OAAO;AACzB,YAAM,SAAS,UAAU;AACzB,YAAM,UAAU,aAAa,MAAM,UAAU,OAAO,KAAK;AAAA,QACvD,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,SACE;AAAA,QACF,UAAU;AAAA,MACZ,CAAC;AACD,aAAO,MAAM,UAAU,WAAW,YAAY;AAC9C,YAAM,UAAU,OAAO,MAAM,UAAU;AAAA,IACzC;AAAA;AAAA;",
  "names": []
}
