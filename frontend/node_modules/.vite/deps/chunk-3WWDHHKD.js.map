{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/applescript.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/**\r\n * Any of the passed expresssions may match\r\n *\r\n * Creates a huge this | this | that | that match\r\n * @param {(RegExp | string)[] } args\r\n * @returns {string}\r\n */\r\nfunction either(...args) {\r\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: AppleScript\r\nAuthors: Nathan Grigg <nathan@nathanamy.org>, Dr. Drang <drdrang@gmail.com>\r\nCategory: scripting\r\nWebsite: https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction applescript(hljs) {\r\n  const STRING = hljs.inherit(\r\n    hljs.QUOTE_STRING_MODE, {\r\n      illegal: null\r\n    });\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    contains: [\r\n      'self',\r\n      hljs.C_NUMBER_MODE,\r\n      STRING\r\n    ]\r\n  };\r\n  const COMMENT_MODE_1 = hljs.COMMENT(/--/, /$/);\r\n  const COMMENT_MODE_2 = hljs.COMMENT(\r\n    /\\(\\*/,\r\n    /\\*\\)/,\r\n    {\r\n      contains: [\r\n        'self', // allow nesting\r\n        COMMENT_MODE_1\r\n      ]\r\n    }\r\n  );\r\n  const COMMENTS = [\r\n    COMMENT_MODE_1,\r\n    COMMENT_MODE_2,\r\n    hljs.HASH_COMMENT_MODE\r\n  ];\r\n\r\n  const KEYWORD_PATTERNS = [\r\n    /apart from/,\r\n    /aside from/,\r\n    /instead of/,\r\n    /out of/,\r\n    /greater than/,\r\n    /isn't|(doesn't|does not) (equal|come before|come after|contain)/,\r\n    /(greater|less) than( or equal)?/,\r\n    /(starts?|ends|begins?) with/,\r\n    /contained by/,\r\n    /comes (before|after)/,\r\n    /a (ref|reference)/,\r\n    /POSIX (file|path)/,\r\n    /(date|time) string/,\r\n    /quoted form/\r\n  ];\r\n\r\n  const BUILT_IN_PATTERNS = [\r\n    /clipboard info/,\r\n    /the clipboard/,\r\n    /info for/,\r\n    /list (disks|folder)/,\r\n    /mount volume/,\r\n    /path to/,\r\n    /(close|open for) access/,\r\n    /(get|set) eof/,\r\n    /current date/,\r\n    /do shell script/,\r\n    /get volume settings/,\r\n    /random number/,\r\n    /set volume/,\r\n    /system attribute/,\r\n    /system info/,\r\n    /time to GMT/,\r\n    /(load|run|store) script/,\r\n    /scripting components/,\r\n    /ASCII (character|number)/,\r\n    /localized string/,\r\n    /choose (application|color|file|file name|folder|from list|remote application|URL)/,\r\n    /display (alert|dialog)/\r\n  ];\r\n\r\n  return {\r\n    name: 'AppleScript',\r\n    aliases: [ 'osascript' ],\r\n    keywords: {\r\n      keyword:\r\n        'about above after against and around as at back before beginning ' +\r\n        'behind below beneath beside between but by considering ' +\r\n        'contain contains continue copy div does eighth else end equal ' +\r\n        'equals error every exit fifth first for fourth from front ' +\r\n        'get given global if ignoring in into is it its last local me ' +\r\n        'middle mod my ninth not of on onto or over prop property put ref ' +\r\n        'reference repeat returning script second set seventh since ' +\r\n        'sixth some tell tenth that the|0 then third through thru ' +\r\n        'timeout times to transaction try until where while whose with ' +\r\n        'without',\r\n      literal:\r\n        'AppleScript false linefeed return pi quote result space tab true',\r\n      built_in:\r\n        'alias application boolean class constant date file integer list ' +\r\n        'number real record string text ' +\r\n        'activate beep count delay launch log offset read round ' +\r\n        'run say summarize write ' +\r\n        'character characters contents day frontmost id item length ' +\r\n        'month name paragraph paragraphs rest reverse running time version ' +\r\n        'weekday word words year'\r\n    },\r\n    contains: [\r\n      STRING,\r\n      hljs.C_NUMBER_MODE,\r\n      {\r\n        className: 'built_in',\r\n        begin: concat(\r\n          /\\b/,\r\n          either(...BUILT_IN_PATTERNS),\r\n          /\\b/\r\n        )\r\n      },\r\n      {\r\n        className: 'built_in',\r\n        begin: /^\\s*return\\b/\r\n      },\r\n      {\r\n        className: 'literal',\r\n        begin:\r\n          /\\b(text item delimiters|current application|missing value)\\b/\r\n      },\r\n      {\r\n        className: 'keyword',\r\n        begin: concat(\r\n          /\\b/,\r\n          either(...KEYWORD_PATTERNS),\r\n          /\\b/\r\n        )\r\n      },\r\n      {\r\n        beginKeywords: 'on',\r\n        illegal: /[${=;\\n]/,\r\n        contains: [\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          PARAMS\r\n        ]\r\n      },\r\n      ...COMMENTS\r\n    ],\r\n    illegal: /\\/\\/|->|=>|\\[\\[/\r\n  };\r\n}\r\n\r\nmodule.exports = applescript;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AASA,aAAS,OAAO,IAAI;AAClB,UAAI,CAAC;AAAI,eAAO;AAChB,UAAI,OAAO,OAAO;AAAU,eAAO;AAEnC,aAAO,GAAG;AAAA,IACZ;AAMA,aAAS,UAAU,MAAM;AACvB,YAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE;AACjD,aAAO;AAAA,IACT;AASA,aAAS,UAAU,MAAM;AACvB,YAAM,SAAS,MAAM,KAAK,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI;AAC5D,aAAO;AAAA,IACT;AAWA,aAAS,YAAY,MAAM;AACzB,YAAM,SAAS,KAAK;AAAA,QAClB,KAAK;AAAA,QAAmB;AAAA,UACtB,SAAS;AAAA,QACX;AAAA,MAAC;AACH,YAAM,SAAS;AAAA,QACb,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,UACA,KAAK;AAAA,UACL;AAAA,QACF;AAAA,MACF;AACA,YAAM,iBAAiB,KAAK,QAAQ,MAAM,GAAG;AAC7C,YAAM,iBAAiB,KAAK;AAAA,QAC1B;AAAA,QACA;AAAA,QACA;AAAA,UACE,UAAU;AAAA,YACR;AAAA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,YAAM,WAAW;AAAA,QACf;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACP;AAEA,YAAM,mBAAmB;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAM,oBAAoB;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAE,WAAY;AAAA,QACvB,UAAU;AAAA,UACR,SACE;AAAA,UAUF,SACE;AAAA,UACF,UACE;AAAA,QAOJ;AAAA,QACA,UAAU;AAAA,UACR;AAAA,UACA,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,cACL;AAAA,cACA,OAAO,GAAG,iBAAiB;AAAA,cAC3B;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OACE;AAAA,UACJ;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,cACL;AAAA,cACA,OAAO,GAAG,gBAAgB;AAAA,cAC1B;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,eAAe;AAAA,YACf,SAAS;AAAA,YACT,UAAU;AAAA,cACR,KAAK;AAAA,cACL;AAAA,YACF;AAAA,UACF;AAAA,UACA,GAAG;AAAA,QACL;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
