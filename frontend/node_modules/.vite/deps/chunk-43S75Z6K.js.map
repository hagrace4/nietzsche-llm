{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/markdown.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Markdown\r\nRequires: xml.js\r\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\r\nWebsite: https://daringfireball.net/projects/markdown/\r\nCategory: common, markup\r\n*/\r\n\r\nfunction markdown(hljs) {\r\n  const INLINE_HTML = {\r\n    begin: /<\\/?[A-Za-z_]/,\r\n    end: '>',\r\n    subLanguage: 'xml',\r\n    relevance: 0\r\n  };\r\n  const HORIZONTAL_RULE = {\r\n    begin: '^[-\\\\*]{3,}',\r\n    end: '$'\r\n  };\r\n  const CODE = {\r\n    className: 'code',\r\n    variants: [\r\n      // TODO: fix to allow these to work with sublanguage also\r\n      {\r\n        begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*'\r\n      },\r\n      {\r\n        begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*'\r\n      },\r\n      // needed to allow markdown as a sublanguage to work\r\n      {\r\n        begin: '```',\r\n        end: '```+[ ]*$'\r\n      },\r\n      {\r\n        begin: '~~~',\r\n        end: '~~~+[ ]*$'\r\n      },\r\n      {\r\n        begin: '`.+?`'\r\n      },\r\n      {\r\n        begin: '(?=^( {4}|\\\\t))',\r\n        // use contains to gobble up multiple lines to allow the block to be whatever size\r\n        // but only have a single open/close tag vs one per line\r\n        contains: [\r\n          {\r\n            begin: '^( {4}|\\\\t)',\r\n            end: '(\\\\n)$'\r\n          }\r\n        ],\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n  const LIST = {\r\n    className: 'bullet',\r\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\r\n    end: '\\\\s+',\r\n    excludeEnd: true\r\n  };\r\n  const LINK_REFERENCE = {\r\n    begin: /^\\[[^\\n]+\\]:/,\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        className: 'symbol',\r\n        begin: /\\[/,\r\n        end: /\\]/,\r\n        excludeBegin: true,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        className: 'link',\r\n        begin: /:\\s*/,\r\n        end: /$/,\r\n        excludeBegin: true\r\n      }\r\n    ]\r\n  };\r\n  const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\r\n  const LINK = {\r\n    variants: [\r\n      // too much like nested array access in so many languages\r\n      // to have any real relevance\r\n      {\r\n        begin: /\\[.+?\\]\\[.*?\\]/,\r\n        relevance: 0\r\n      },\r\n      // popular internet URLs\r\n      {\r\n        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\r\n        relevance: 2\r\n      },\r\n      {\r\n        begin: concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\r\n        relevance: 2\r\n      },\r\n      // relative urls\r\n      {\r\n        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\r\n        relevance: 1\r\n      },\r\n      // whatever else, lower relevance (might not be a link at all)\r\n      {\r\n        begin: /\\[.+?\\]\\(.*?\\)/,\r\n        relevance: 0\r\n      }\r\n    ],\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        className: 'string',\r\n        relevance: 0,\r\n        begin: '\\\\[',\r\n        end: '\\\\]',\r\n        excludeBegin: true,\r\n        returnEnd: true\r\n      },\r\n      {\r\n        className: 'link',\r\n        relevance: 0,\r\n        begin: '\\\\]\\\\(',\r\n        end: '\\\\)',\r\n        excludeBegin: true,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        relevance: 0,\r\n        begin: '\\\\]\\\\[',\r\n        end: '\\\\]',\r\n        excludeBegin: true,\r\n        excludeEnd: true\r\n      }\r\n    ]\r\n  };\r\n  const BOLD = {\r\n    className: 'strong',\r\n    contains: [], // defined later\r\n    variants: [\r\n      {\r\n        begin: /_{2}/,\r\n        end: /_{2}/\r\n      },\r\n      {\r\n        begin: /\\*{2}/,\r\n        end: /\\*{2}/\r\n      }\r\n    ]\r\n  };\r\n  const ITALIC = {\r\n    className: 'emphasis',\r\n    contains: [], // defined later\r\n    variants: [\r\n      {\r\n        begin: /\\*(?!\\*)/,\r\n        end: /\\*/\r\n      },\r\n      {\r\n        begin: /_(?!_)/,\r\n        end: /_/,\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n  BOLD.contains.push(ITALIC);\r\n  ITALIC.contains.push(BOLD);\r\n\r\n  let CONTAINABLE = [\r\n    INLINE_HTML,\r\n    LINK\r\n  ];\r\n\r\n  BOLD.contains = BOLD.contains.concat(CONTAINABLE);\r\n  ITALIC.contains = ITALIC.contains.concat(CONTAINABLE);\r\n\r\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\r\n\r\n  const HEADER = {\r\n    className: 'section',\r\n    variants: [\r\n      {\r\n        begin: '^#{1,6}',\r\n        end: '$',\r\n        contains: CONTAINABLE\r\n      },\r\n      {\r\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\r\n        contains: [\r\n          {\r\n            begin: '^[=-]*$'\r\n          },\r\n          {\r\n            begin: '^',\r\n            end: \"\\\\n\",\r\n            contains: CONTAINABLE\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const BLOCKQUOTE = {\r\n    className: 'quote',\r\n    begin: '^>\\\\s+',\r\n    contains: CONTAINABLE,\r\n    end: '$'\r\n  };\r\n\r\n  return {\r\n    name: 'Markdown',\r\n    aliases: [\r\n      'md',\r\n      'mkdown',\r\n      'mkd'\r\n    ],\r\n    contains: [\r\n      HEADER,\r\n      INLINE_HTML,\r\n      LIST,\r\n      BOLD,\r\n      ITALIC,\r\n      BLOCKQUOTE,\r\n      CODE,\r\n      HORIZONTAL_RULE,\r\n      LINK,\r\n      LINK_REFERENCE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = markdown;\r\n"],
  "mappings": "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",
  "names": []
}
