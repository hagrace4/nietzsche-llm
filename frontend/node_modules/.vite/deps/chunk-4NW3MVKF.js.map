{
  "version": 3,
  "sources": ["../../refractor/lang/liquid.js"],
  "sourcesContent": ["'use strict'\r\nvar refractorMarkupTemplating = require('./markup-templating.js')\r\nmodule.exports = liquid\r\nliquid.displayName = 'liquid'\r\nliquid.aliases = []\r\nfunction liquid(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  Prism.languages.liquid = {\r\n    comment: {\r\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\r\n      lookbehind: true\r\n    },\r\n    delimiter: {\r\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\r\n      alias: 'punctuation'\r\n    },\r\n    string: {\r\n      pattern: /\"[^\"]*\"|'[^']*'/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\r\n    object:\r\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\r\n    function: [\r\n      {\r\n        pattern: /(\\|\\s*)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'filter'\r\n      },\r\n      {\r\n        // array functions\r\n        pattern: /(\\.\\s*)(?:first|last|size)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    boolean: /\\b(?:false|nil|true)\\b/,\r\n    range: {\r\n      pattern: /\\.\\./,\r\n      alias: 'operator'\r\n    },\r\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\r\n    punctuation: /[.,\\[\\]()]/,\r\n    empty: {\r\n      pattern: /\\bempty\\b/,\r\n      alias: 'keyword'\r\n    }\r\n  }\r\n  Prism.hooks.add('before-tokenize', function (env) {\r\n    var liquidPattern =\r\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\r\n    var insideRaw = false\r\n    Prism.languages['markup-templating'].buildPlaceholders(\r\n      env,\r\n      'liquid',\r\n      liquidPattern,\r\n      function (match) {\r\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\r\n        if (tagMatch) {\r\n          var tag = tagMatch[1]\r\n          if (tag === 'raw' && !insideRaw) {\r\n            insideRaw = true\r\n            return true\r\n          } else if (tag === 'endraw') {\r\n            insideRaw = false\r\n            return true\r\n          }\r\n        }\r\n        return !insideRaw\r\n      }\r\n    )\r\n  })\r\n  Prism.hooks.add('after-tokenize', function (env) {\r\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\r\n  })\r\n}\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,4BAA4B;AAChC,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC;AAClB,aAAS,OAAO,OAAO;AACrB,YAAM,SAAS,yBAAyB;AACxC,YAAM,UAAU,SAAS;AAAA,QACvB,SAAS;AAAA,UACP,SAAS;AAAA,UACT,YAAY;AAAA,QACd;AAAA,QACA,WAAW;AAAA,UACT,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,SACE;AAAA,QACF,QACE;AAAA,QACF,UAAU;AAAA,UACR;AAAA,YACE,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YAEE,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,SAAS;AAAA,QACT,OAAO;AAAA,UACL,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA;AAAA,QAEA,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,aAAa;AAAA,QACb,OAAO;AAAA,UACL,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,MACF;AACA,YAAM,MAAM,IAAI,mBAAmB,SAAU,KAAK;AAChD,YAAI,gBACF;AACF,YAAI,YAAY;AAChB,cAAM,UAAU,mBAAmB,EAAE;AAAA,UACnC;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAU,OAAO;AACf,gBAAI,WAAW,iBAAiB,KAAK,KAAK;AAC1C,gBAAI,UAAU;AACZ,kBAAI,MAAM,SAAS,CAAC;AACpB,kBAAI,QAAQ,SAAS,CAAC,WAAW;AAC/B,4BAAY;AACZ,uBAAO;AAAA,cACT,WAAW,QAAQ,UAAU;AAC3B,4BAAY;AACZ,uBAAO;AAAA,cACT;AAAA,YACF;AACA,mBAAO,CAAC;AAAA,UACV;AAAA,QACF;AAAA,MACF,CAAC;AACD,YAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,cAAM,UAAU,mBAAmB,EAAE,qBAAqB,KAAK,QAAQ;AAAA,MACzE,CAAC;AAAA,IACH;AAAA;AAAA;",
  "names": []
}
