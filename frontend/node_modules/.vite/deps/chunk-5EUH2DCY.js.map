{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/r.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction lookahead(re) {\r\n  return concat('(?=', re, ')');\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: R\r\nDescription: R is a free software environment for statistical computing and graphics.\r\nAuthor: Joe Cheng <joe@rstudio.org>\r\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\r\nWebsite: https://www.r-project.org\r\nCategory: common,scientific\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction r(hljs) {\r\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\r\n  // is not immediately followed by a digit.\r\n  // R also supports quoted identifiers, which are near-arbitrary sequences\r\n  // delimited by backticks (`…`), which may contain escape sequences. These are\r\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\r\n  // FIXME: Support Unicode identifiers.\r\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\r\n  const SIMPLE_IDENT = /[a-zA-Z][a-zA-Z_0-9]*/;\r\n\r\n  return {\r\n    name: 'R',\r\n\r\n    // only in Haskell, not R\r\n    illegal: /->/,\r\n    keywords: {\r\n      $pattern: IDENT_RE,\r\n      keyword:\r\n        'function if in break next repeat else for while',\r\n      literal:\r\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 ' +\r\n        'NA_character_|10 NA_complex_|10',\r\n      built_in:\r\n        // Builtin constants\r\n        'LETTERS letters month.abb month.name pi T F ' +\r\n        // Primitive functions\r\n        // These are all the functions in `base` that are implemented as a\r\n        // `.Primitive`, minus those functions that are also keywords.\r\n        'abs acos acosh all any anyNA Arg as.call as.character ' +\r\n        'as.complex as.double as.environment as.integer as.logical ' +\r\n        'as.null.default as.numeric as.raw asin asinh atan atanh attr ' +\r\n        'attributes baseenv browser c call ceiling class Conj cos cosh ' +\r\n        'cospi cummax cummin cumprod cumsum digamma dim dimnames ' +\r\n        'emptyenv exp expression floor forceAndCall gamma gc.time ' +\r\n        'globalenv Im interactive invisible is.array is.atomic is.call ' +\r\n        'is.character is.complex is.double is.environment is.expression ' +\r\n        'is.finite is.function is.infinite is.integer is.language ' +\r\n        'is.list is.logical is.matrix is.na is.name is.nan is.null ' +\r\n        'is.numeric is.object is.pairlist is.raw is.recursive is.single ' +\r\n        'is.symbol lazyLoadDBfetch length lgamma list log max min ' +\r\n        'missing Mod names nargs nzchar oldClass on.exit pos.to.env ' +\r\n        'proc.time prod quote range Re rep retracemem return round ' +\r\n        'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt ' +\r\n        'standardGeneric substitute sum switch tan tanh tanpi tracemem ' +\r\n        'trigamma trunc unclass untracemem UseMethod xtfrm',\r\n    },\r\n    compilerExtensions: [\r\n      // allow beforeMatch to act as a \"qualifier\" for the match\r\n      // the full match begin must be [beforeMatch][begin]\r\n      (mode, parent) => {\r\n        if (!mode.beforeMatch) return;\r\n        // starts conflicts with endsParent which we need to make sure the child\r\n        // rule is not matched multiple times\r\n        if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\r\n\r\n        const originalMode = Object.assign({}, mode);\r\n        Object.keys(mode).forEach((key) => { delete mode[key]; });\r\n\r\n        mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\r\n        mode.starts = {\r\n          relevance: 0,\r\n          contains: [\r\n            Object.assign(originalMode, { endsParent: true })\r\n          ]\r\n        };\r\n        mode.relevance = 0;\r\n\r\n        delete originalMode.beforeMatch;\r\n      }\r\n    ],\r\n    contains: [\r\n      // Roxygen comments\r\n      hljs.COMMENT(\r\n        /#'/,\r\n        /$/,\r\n        {\r\n          contains: [\r\n            {\r\n              // Handle `@examples` separately to cause all subsequent code\r\n              // until the next `@`-tag on its own line to be kept as-is,\r\n              // preventing highlighting. This code is example R code, so nested\r\n              // doctags shouldn’t be treated as such. See\r\n              // `test/markup/r/roxygen.txt` for an example.\r\n              className: 'doctag',\r\n              begin: '@examples',\r\n              starts: {\r\n                contains: [\r\n                  { begin: /\\n/ },\r\n                  {\r\n                    begin: /#'\\s*(?=@[a-zA-Z]+)/,\r\n                    endsParent: true,\r\n                  },\r\n                  {\r\n                    begin: /#'/,\r\n                    end: /$/,\r\n                    excludeBegin: true,\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              // Handle `@param` to highlight the parameter name following\r\n              // after.\r\n              className: 'doctag',\r\n              begin: '@param',\r\n              end: /$/,\r\n              contains: [\r\n                {\r\n                  className: 'variable',\r\n                  variants: [\r\n                    { begin: IDENT_RE },\r\n                    { begin: /`(?:\\\\.|[^`\\\\])+`/ }\r\n                  ],\r\n                  endsParent: true\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              className: 'doctag',\r\n              begin: /@[a-zA-Z]+/\r\n            },\r\n            {\r\n              className: 'meta-keyword',\r\n              begin: /\\\\[a-zA-Z]+/,\r\n            }\r\n          ]\r\n        }\r\n      ),\r\n\r\n      hljs.HASH_COMMENT_MODE,\r\n\r\n      {\r\n        className: 'string',\r\n        contains: [hljs.BACKSLASH_ESCAPE],\r\n        variants: [\r\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\(/, end: /\\)(-*)\"/ }),\r\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\{/, end: /\\}(-*)\"/ }),\r\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\[/, end: /\\](-*)\"/ }),\r\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\(/, end: /\\)(-*)'/ }),\r\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\{/, end: /\\}(-*)'/ }),\r\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\[/, end: /\\](-*)'/ }),\r\n          {begin: '\"', end: '\"', relevance: 0},\r\n          {begin: \"'\", end: \"'\", relevance: 0}\r\n        ],\r\n      },\r\n      {\r\n        className: 'number',\r\n        relevance: 0,\r\n        beforeMatch: /([^a-zA-Z0-9._])/, // not part of an identifier\r\n        variants: [\r\n          // TODO: replace with negative look-behind when available\r\n          // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\r\n          // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\r\n          // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\r\n          {\r\n            // Special case: only hexadecimal binary powers can contain fractions.\r\n            match: /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\r\n          },\r\n          {\r\n            match: /0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/\r\n          },\r\n          {\r\n            match: /(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/,\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        // infix operator\r\n        begin: '%',\r\n        end: '%'\r\n      },\r\n      // relevance boost for assignment\r\n      {\r\n        begin: concat(SIMPLE_IDENT, \"\\\\s+<-\\\\s+\")\r\n      },\r\n      {\r\n        // escaped identifier\r\n        begin: '`',\r\n        end: '`',\r\n        contains: [\r\n          { begin: /\\\\./ }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = r;\r\n"],
  "mappings": "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",
  "names": []
}
