{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/perl.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/**\r\n * Any of the passed expresssions may match\r\n *\r\n * Creates a huge this | this | that | that match\r\n * @param {(RegExp | string)[] } args\r\n * @returns {string}\r\n */\r\nfunction either(...args) {\r\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Perl\r\nAuthor: Peter Leonov <gojpeg@yandex.ru>\r\nWebsite: https://www.perl.org\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction perl(hljs) {\r\n  const KEYWORDS = [\r\n    'abs',\r\n    'accept',\r\n    'alarm',\r\n    'and',\r\n    'atan2',\r\n    'bind',\r\n    'binmode',\r\n    'bless',\r\n    'break',\r\n    'caller',\r\n    'chdir',\r\n    'chmod',\r\n    'chomp',\r\n    'chop',\r\n    'chown',\r\n    'chr',\r\n    'chroot',\r\n    'close',\r\n    'closedir',\r\n    'connect',\r\n    'continue',\r\n    'cos',\r\n    'crypt',\r\n    'dbmclose',\r\n    'dbmopen',\r\n    'defined',\r\n    'delete',\r\n    'die',\r\n    'do',\r\n    'dump',\r\n    'each',\r\n    'else',\r\n    'elsif',\r\n    'endgrent',\r\n    'endhostent',\r\n    'endnetent',\r\n    'endprotoent',\r\n    'endpwent',\r\n    'endservent',\r\n    'eof',\r\n    'eval',\r\n    'exec',\r\n    'exists',\r\n    'exit',\r\n    'exp',\r\n    'fcntl',\r\n    'fileno',\r\n    'flock',\r\n    'for',\r\n    'foreach',\r\n    'fork',\r\n    'format',\r\n    'formline',\r\n    'getc',\r\n    'getgrent',\r\n    'getgrgid',\r\n    'getgrnam',\r\n    'gethostbyaddr',\r\n    'gethostbyname',\r\n    'gethostent',\r\n    'getlogin',\r\n    'getnetbyaddr',\r\n    'getnetbyname',\r\n    'getnetent',\r\n    'getpeername',\r\n    'getpgrp',\r\n    'getpriority',\r\n    'getprotobyname',\r\n    'getprotobynumber',\r\n    'getprotoent',\r\n    'getpwent',\r\n    'getpwnam',\r\n    'getpwuid',\r\n    'getservbyname',\r\n    'getservbyport',\r\n    'getservent',\r\n    'getsockname',\r\n    'getsockopt',\r\n    'given',\r\n    'glob',\r\n    'gmtime',\r\n    'goto',\r\n    'grep',\r\n    'gt',\r\n    'hex',\r\n    'if',\r\n    'index',\r\n    'int',\r\n    'ioctl',\r\n    'join',\r\n    'keys',\r\n    'kill',\r\n    'last',\r\n    'lc',\r\n    'lcfirst',\r\n    'length',\r\n    'link',\r\n    'listen',\r\n    'local',\r\n    'localtime',\r\n    'log',\r\n    'lstat',\r\n    'lt',\r\n    'ma',\r\n    'map',\r\n    'mkdir',\r\n    'msgctl',\r\n    'msgget',\r\n    'msgrcv',\r\n    'msgsnd',\r\n    'my',\r\n    'ne',\r\n    'next',\r\n    'no',\r\n    'not',\r\n    'oct',\r\n    'open',\r\n    'opendir',\r\n    'or',\r\n    'ord',\r\n    'our',\r\n    'pack',\r\n    'package',\r\n    'pipe',\r\n    'pop',\r\n    'pos',\r\n    'print',\r\n    'printf',\r\n    'prototype',\r\n    'push',\r\n    'q|0',\r\n    'qq',\r\n    'quotemeta',\r\n    'qw',\r\n    'qx',\r\n    'rand',\r\n    'read',\r\n    'readdir',\r\n    'readline',\r\n    'readlink',\r\n    'readpipe',\r\n    'recv',\r\n    'redo',\r\n    'ref',\r\n    'rename',\r\n    'require',\r\n    'reset',\r\n    'return',\r\n    'reverse',\r\n    'rewinddir',\r\n    'rindex',\r\n    'rmdir',\r\n    'say',\r\n    'scalar',\r\n    'seek',\r\n    'seekdir',\r\n    'select',\r\n    'semctl',\r\n    'semget',\r\n    'semop',\r\n    'send',\r\n    'setgrent',\r\n    'sethostent',\r\n    'setnetent',\r\n    'setpgrp',\r\n    'setpriority',\r\n    'setprotoent',\r\n    'setpwent',\r\n    'setservent',\r\n    'setsockopt',\r\n    'shift',\r\n    'shmctl',\r\n    'shmget',\r\n    'shmread',\r\n    'shmwrite',\r\n    'shutdown',\r\n    'sin',\r\n    'sleep',\r\n    'socket',\r\n    'socketpair',\r\n    'sort',\r\n    'splice',\r\n    'split',\r\n    'sprintf',\r\n    'sqrt',\r\n    'srand',\r\n    'stat',\r\n    'state',\r\n    'study',\r\n    'sub',\r\n    'substr',\r\n    'symlink',\r\n    'syscall',\r\n    'sysopen',\r\n    'sysread',\r\n    'sysseek',\r\n    'system',\r\n    'syswrite',\r\n    'tell',\r\n    'telldir',\r\n    'tie',\r\n    'tied',\r\n    'time',\r\n    'times',\r\n    'tr',\r\n    'truncate',\r\n    'uc',\r\n    'ucfirst',\r\n    'umask',\r\n    'undef',\r\n    'unless',\r\n    'unlink',\r\n    'unpack',\r\n    'unshift',\r\n    'untie',\r\n    'until',\r\n    'use',\r\n    'utime',\r\n    'values',\r\n    'vec',\r\n    'wait',\r\n    'waitpid',\r\n    'wantarray',\r\n    'warn',\r\n    'when',\r\n    'while',\r\n    'write',\r\n    'x|0',\r\n    'xor',\r\n    'y|0'\r\n  ];\r\n\r\n  // https://perldoc.perl.org/perlre#Modifiers\r\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\r\n  const PERL_KEYWORDS = {\r\n    $pattern: /[\\w.]+/,\r\n    keyword: KEYWORDS.join(\" \")\r\n  };\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: '[$@]\\\\{',\r\n    end: '\\\\}',\r\n    keywords: PERL_KEYWORDS\r\n  };\r\n  const METHOD = {\r\n    begin: /->\\{/,\r\n    end: /\\}/\r\n    // contains defined later\r\n  };\r\n  const VAR = {\r\n    variants: [\r\n      {\r\n        begin: /\\$\\d/\r\n      },\r\n      {\r\n        begin: concat(\r\n          /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\r\n          // negative look-ahead tries to avoid matching patterns that are not\r\n          // Perl at all like $ident$, @ident@, etc.\r\n          `(?![A-Za-z])(?![@$%])`\r\n        )\r\n      },\r\n      {\r\n        begin: /[$%@][^\\s\\w{]/,\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n  const STRING_CONTAINS = [\r\n    hljs.BACKSLASH_ESCAPE,\r\n    SUBST,\r\n    VAR\r\n  ];\r\n  const REGEX_DELIMS = [\r\n    /!/,\r\n    /\\//,\r\n    /\\|/,\r\n    /\\?/,\r\n    /'/,\r\n    /\"/, // valid but infrequent and weird\r\n    /#/ // valid but infrequent and weird\r\n  ];\r\n  /**\r\n   * @param {string|RegExp} prefix\r\n   * @param {string|RegExp} open\r\n   * @param {string|RegExp} close\r\n   */\r\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\r\n    const middle = (close === '\\\\1')\r\n      ? close\r\n      : concat(close, open);\r\n    return concat(\r\n      concat(\"(?:\", prefix, \")\"),\r\n      open,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      middle,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      close,\r\n      REGEX_MODIFIERS\r\n    );\r\n  };\r\n  /**\r\n   * @param {string|RegExp} prefix\r\n   * @param {string|RegExp} open\r\n   * @param {string|RegExp} close\r\n   */\r\n  const PAIRED_RE = (prefix, open, close) => {\r\n    return concat(\r\n      concat(\"(?:\", prefix, \")\"),\r\n      open,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      close,\r\n      REGEX_MODIFIERS\r\n    );\r\n  };\r\n  const PERL_DEFAULT_CONTAINS = [\r\n    VAR,\r\n    hljs.HASH_COMMENT_MODE,\r\n    hljs.COMMENT(\r\n      /^=\\w/,\r\n      /=cut/,\r\n      {\r\n        endsWithParent: true\r\n      }\r\n    ),\r\n    METHOD,\r\n    {\r\n      className: 'string',\r\n      contains: STRING_CONTAINS,\r\n      variants: [\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\(',\r\n          end: '\\\\)',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\[',\r\n          end: '\\\\]',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\{',\r\n          end: '\\\\}',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\|',\r\n          end: '\\\\|',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*<',\r\n          end: '>',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'qw\\\\s+q',\r\n          end: 'q',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: '\\'',\r\n          end: '\\'',\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: '\"',\r\n          end: '\"'\r\n        },\r\n        {\r\n          begin: '`',\r\n          end: '`',\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: /\\{\\w+\\}/,\r\n          relevance: 0\r\n        },\r\n        {\r\n          begin: '-?\\\\w+\\\\s*=>',\r\n          relevance: 0\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'number',\r\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\r\n      relevance: 0\r\n    },\r\n    { // regexp container\r\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\r\n      keywords: 'split return print reverse grep',\r\n      relevance: 0,\r\n      contains: [\r\n        hljs.HASH_COMMENT_MODE,\r\n        {\r\n          className: 'regexp',\r\n          variants: [\r\n            // allow matching common delimiters\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", either(...REGEX_DELIMS)) },\r\n            // and then paired delmis\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\r\n          ],\r\n          relevance: 2\r\n        },\r\n        {\r\n          className: 'regexp',\r\n          variants: [\r\n            {\r\n              // could be a comment in many languages so do not count\r\n              // as relevant\r\n              begin: /(m|qr)\\/\\//,\r\n              relevance: 0\r\n            },\r\n            // prefix is optional with /regex/\r\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//)},\r\n            // allow matching common delimiters\r\n            { begin: PAIRED_RE(\"m|qr\", either(...REGEX_DELIMS), /\\1/)},\r\n            // allow common paired delmins\r\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/)},\r\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/)},\r\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/)}\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'function',\r\n      beginKeywords: 'sub',\r\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\r\n      excludeEnd: true,\r\n      relevance: 5,\r\n      contains: [ hljs.TITLE_MODE ]\r\n    },\r\n    {\r\n      begin: '-\\\\w\\\\b',\r\n      relevance: 0\r\n    },\r\n    {\r\n      begin: \"^__DATA__$\",\r\n      end: \"^__END__$\",\r\n      subLanguage: 'mojolicious',\r\n      contains: [\r\n        {\r\n          begin: \"^@@.*\",\r\n          end: \"$\",\r\n          className: \"comment\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\r\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\r\n\r\n  return {\r\n    name: 'Perl',\r\n    aliases: [\r\n      'pl',\r\n      'pm'\r\n    ],\r\n    keywords: PERL_KEYWORDS,\r\n    contains: PERL_DEFAULT_CONTAINS\r\n  };\r\n}\r\n\r\nmodule.exports = perl;\r\n"],
  "mappings": "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",
  "names": []
}
