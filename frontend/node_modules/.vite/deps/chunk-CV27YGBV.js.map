{
  "version": 3,
  "sources": ["../../refractor/lang/javastacktrace.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = javastacktrace\r\njavastacktrace.displayName = 'javastacktrace'\r\njavastacktrace.aliases = []\r\nfunction javastacktrace(Prism) {\r\n  // Specification:\r\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\r\n  Prism.languages.javastacktrace = {\r\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\r\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\r\n    // Caused by: com.example.myproject.MyProjectServletException\r\n    // Caused by: MidLevelException: LowLevelException\r\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\r\n    summary: {\r\n      pattern:\r\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: {\r\n          pattern:\r\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\r\n          lookbehind: true\r\n        },\r\n        // the current thread if the summary starts with 'Exception in thread'\r\n        string: {\r\n          pattern: /^(\\s*)\"[^\"]*\"/,\r\n          lookbehind: true\r\n        },\r\n        exceptions: {\r\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'class-name': /[\\w$]+$/,\r\n            namespace: /\\b[a-z]\\w*\\b/,\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        message: {\r\n          pattern: /(:\\s*)\\S.*/,\r\n          lookbehind: true,\r\n          alias: 'string'\r\n        },\r\n        punctuation: /:/\r\n      }\r\n    },\r\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\r\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\r\n    // at java.base/java.lang.Class.forName0(Native Method)\r\n    // at Util.<init>(Unknown Source)\r\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\r\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\r\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\r\n    // at MyClass.mash(MyClass.java:9)\r\n    //\r\n    // More information:\r\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\r\n    //\r\n    // A valid Java module name is defined as:\r\n    //   \"A module name consists of one or more Java identifiers (ยง3.8) separated by \".\" tokens.\"\r\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\r\n    //\r\n    // A Java module version is defined by this class:\r\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\r\n    // This is the implementation of the `parse` method in JDK13:\r\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\r\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\r\n    'stack-frame': {\r\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: {\r\n          pattern: /^(\\s*)at(?= )/,\r\n          lookbehind: true\r\n        },\r\n        source: [\r\n          // (Main.java:15)\r\n          // (Main.scala:15)\r\n          {\r\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\r\n            lookbehind: true,\r\n            inside: {\r\n              file: /^\\w+\\.\\w+/,\r\n              punctuation: /:/,\r\n              'line-number': {\r\n                pattern: /\\b\\d+\\b/,\r\n                alias: 'number'\r\n              }\r\n            }\r\n          }, // (Unknown Source)\r\n          // (Native Method)\r\n          // (...something...)\r\n          {\r\n            pattern: /(\\()[^()]*(?=\\))/,\r\n            lookbehind: true,\r\n            inside: {\r\n              keyword: /^(?:Native Method|Unknown Source)$/\r\n            }\r\n          }\r\n        ],\r\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\r\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\r\n        'class-loader': {\r\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\r\n          lookbehind: true,\r\n          alias: 'namespace',\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        module: {\r\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\r\n          lookbehind: true,\r\n          inside: {\r\n            version: {\r\n              pattern: /(@)[\\s\\S]+/,\r\n              lookbehind: true,\r\n              alias: 'number'\r\n            },\r\n            punctuation: /[@.]/\r\n          }\r\n        },\r\n        namespace: {\r\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        punctuation: /[()/.]/\r\n      }\r\n    },\r\n    // ... 32 more\r\n    // ... 32 common frames omitted\r\n    more: {\r\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /\\.{3}/,\r\n        number: /\\d+/,\r\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\r\n      }\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,mBAAe,cAAc;AAC7B,mBAAe,UAAU,CAAC;AAC1B,aAAS,eAAe,OAAO;AAG7B,YAAM,UAAU,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAM/B,SAAS;AAAA,UACP,SACE;AAAA,UACF,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,SAAS;AAAA,cACP,SACE;AAAA,cACF,YAAY;AAAA,YACd;AAAA;AAAA,YAEA,QAAQ;AAAA,cACN,SAAS;AAAA,cACT,YAAY;AAAA,YACd;AAAA,YACA,YAAY;AAAA,cACV,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,cAAc;AAAA,gBACd,WAAW;AAAA,gBACX,aAAa;AAAA,cACf;AAAA,YACF;AAAA,YACA,SAAS;AAAA,cACP,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA,YACA,aAAa;AAAA,UACf;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAsBA,eAAe;AAAA,UACb,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,SAAS;AAAA,cACP,SAAS;AAAA,cACT,YAAY;AAAA,YACd;AAAA,YACA,QAAQ;AAAA;AAAA;AAAA,cAGN;AAAA,gBACE,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,QAAQ;AAAA,kBACN,MAAM;AAAA,kBACN,aAAa;AAAA,kBACb,eAAe;AAAA,oBACb,SAAS;AAAA,oBACT,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA;AAAA;AAAA;AAAA,cAGA;AAAA,gBACE,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,QAAQ;AAAA,kBACN,SAAS;AAAA,gBACX;AAAA,cACF;AAAA,YACF;AAAA,YACA,cAAc;AAAA,YACd,UAAU;AAAA,YACV,gBAAgB;AAAA,cACd,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,cACP,QAAQ;AAAA,gBACN,aAAa;AAAA,cACf;AAAA,YACF;AAAA,YACA,QAAQ;AAAA,cACN,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,SAAS;AAAA,kBACP,SAAS;AAAA,kBACT,YAAY;AAAA,kBACZ,OAAO;AAAA,gBACT;AAAA,gBACA,aAAa;AAAA,cACf;AAAA,YACF;AAAA,YACA,WAAW;AAAA,cACT,SAAS;AAAA,cACT,QAAQ;AAAA,gBACN,aAAa;AAAA,cACf;AAAA,YACF;AAAA,YACA,aAAa;AAAA,UACf;AAAA,QACF;AAAA;AAAA;AAAA,QAGA,MAAM;AAAA,UACJ,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,aAAa;AAAA,YACb,QAAQ;AAAA,YACR,SAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
