{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/python.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction lookahead(re) {\r\n  return concat('(?=', re, ')');\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Python\r\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\r\nWebsite: https://www.python.org\r\nCategory: common\r\n*/\r\n\r\nfunction python(hljs) {\r\n  const RESERVED_WORDS = [\r\n    'and',\r\n    'as',\r\n    'assert',\r\n    'async',\r\n    'await',\r\n    'break',\r\n    'class',\r\n    'continue',\r\n    'def',\r\n    'del',\r\n    'elif',\r\n    'else',\r\n    'except',\r\n    'finally',\r\n    'for',\r\n    'from',\r\n    'global',\r\n    'if',\r\n    'import',\r\n    'in',\r\n    'is',\r\n    'lambda',\r\n    'nonlocal|10',\r\n    'not',\r\n    'or',\r\n    'pass',\r\n    'raise',\r\n    'return',\r\n    'try',\r\n    'while',\r\n    'with',\r\n    'yield'\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    '__import__',\r\n    'abs',\r\n    'all',\r\n    'any',\r\n    'ascii',\r\n    'bin',\r\n    'bool',\r\n    'breakpoint',\r\n    'bytearray',\r\n    'bytes',\r\n    'callable',\r\n    'chr',\r\n    'classmethod',\r\n    'compile',\r\n    'complex',\r\n    'delattr',\r\n    'dict',\r\n    'dir',\r\n    'divmod',\r\n    'enumerate',\r\n    'eval',\r\n    'exec',\r\n    'filter',\r\n    'float',\r\n    'format',\r\n    'frozenset',\r\n    'getattr',\r\n    'globals',\r\n    'hasattr',\r\n    'hash',\r\n    'help',\r\n    'hex',\r\n    'id',\r\n    'input',\r\n    'int',\r\n    'isinstance',\r\n    'issubclass',\r\n    'iter',\r\n    'len',\r\n    'list',\r\n    'locals',\r\n    'map',\r\n    'max',\r\n    'memoryview',\r\n    'min',\r\n    'next',\r\n    'object',\r\n    'oct',\r\n    'open',\r\n    'ord',\r\n    'pow',\r\n    'print',\r\n    'property',\r\n    'range',\r\n    'repr',\r\n    'reversed',\r\n    'round',\r\n    'set',\r\n    'setattr',\r\n    'slice',\r\n    'sorted',\r\n    'staticmethod',\r\n    'str',\r\n    'sum',\r\n    'super',\r\n    'tuple',\r\n    'type',\r\n    'vars',\r\n    'zip'\r\n  ];\r\n\r\n  const LITERALS = [\r\n    '__debug__',\r\n    'Ellipsis',\r\n    'False',\r\n    'None',\r\n    'NotImplemented',\r\n    'True'\r\n  ];\r\n\r\n  // https://docs.python.org/3/library/typing.html\r\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\r\n  // contexts, leaving these remaining only for relevance hinting?\r\n  const TYPES = [\r\n    \"Any\",\r\n    \"Callable\",\r\n    \"Coroutine\",\r\n    \"Dict\",\r\n    \"List\",\r\n    \"Literal\",\r\n    \"Generic\",\r\n    \"Optional\",\r\n    \"Sequence\",\r\n    \"Set\",\r\n    \"Tuple\",\r\n    \"Type\",\r\n    \"Union\"\r\n  ];\r\n\r\n  const KEYWORDS = {\r\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\r\n    keyword: RESERVED_WORDS,\r\n    built_in: BUILT_INS,\r\n    literal: LITERALS,\r\n    type: TYPES\r\n  };\r\n\r\n  const PROMPT = {\r\n    className: 'meta',\r\n    begin: /^(>>>|\\.\\.\\.) /\r\n  };\r\n\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    keywords: KEYWORDS,\r\n    illegal: /#/\r\n  };\r\n\r\n  const LITERAL_BRACKET = {\r\n    begin: /\\{\\{/,\r\n    relevance: 0\r\n  };\r\n\r\n  const STRING = {\r\n    className: 'string',\r\n    contains: [ hljs.BACKSLASH_ESCAPE ],\r\n    variants: [\r\n      {\r\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\r\n        end: /'''/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT\r\n        ],\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\r\n        end: /\"\"\"/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT\r\n        ],\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\r\n        end: /'''/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\r\n        end: /\"\"\"/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          PROMPT,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      {\r\n        begin: /([uU]|[rR])'/,\r\n        end: /'/,\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([uU]|[rR])\"/,\r\n        end: /\"/,\r\n        relevance: 10\r\n      },\r\n      {\r\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\r\n        end: /'/\r\n      },\r\n      {\r\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\r\n        end: /\"/\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\r\n        end: /'/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      {\r\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\r\n        end: /\"/,\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          LITERAL_BRACKET,\r\n          SUBST\r\n        ]\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE\r\n    ]\r\n  };\r\n\r\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\r\n  const digitpart = '[0-9](_?[0-9])*';\r\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      // exponentfloat, pointfloat\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\r\n      // optionally imaginary\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\r\n      // Note: no leading \\b because floats can start with a decimal point\r\n      // and we don't want to mishandle e.g. `fn(.5)`,\r\n      // no trailing \\b for pointfloat because it can end with a decimal point\r\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\r\n      // because both MUST contain a decimal point and so cannot be confused with\r\n      // the interior part of an identifier\r\n      {\r\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?\\\\b`\r\n      },\r\n      {\r\n        begin: `(${pointfloat})[jJ]?`\r\n      },\r\n\r\n      // decinteger, bininteger, octinteger, hexinteger\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\r\n      // optionally \"long\" in Python 2\r\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\r\n      // decinteger is optionally imaginary\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\r\n      {\r\n        begin: '\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?\\\\b'\r\n      },\r\n      {\r\n        begin: '\\\\b0[bB](_?[01])+[lL]?\\\\b'\r\n      },\r\n      {\r\n        begin: '\\\\b0[oO](_?[0-7])+[lL]?\\\\b'\r\n      },\r\n      {\r\n        begin: '\\\\b0[xX](_?[0-9a-fA-F])+[lL]?\\\\b'\r\n      },\r\n\r\n      // imagnumber (digitpart-based)\r\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\r\n      {\r\n        begin: `\\\\b(${digitpart})[jJ]\\\\b`\r\n      }\r\n    ]\r\n  };\r\n  const COMMENT_TYPE = {\r\n    className: \"comment\",\r\n    begin: lookahead(/# type:/),\r\n    end: /$/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      { // prevent keywords from coloring `type`\r\n        begin: /# type:/\r\n      },\r\n      // comment within a datatype comment includes no keywords\r\n      {\r\n        begin: /#/,\r\n        end: /\\b\\B/,\r\n        endsWithParent: true\r\n      }\r\n    ]\r\n  };\r\n  const PARAMS = {\r\n    className: 'params',\r\n    variants: [\r\n      // Exclude params in functions without params\r\n      {\r\n        className: \"\",\r\n        begin: /\\(\\s*\\)/,\r\n        skip: true\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        excludeBegin: true,\r\n        excludeEnd: true,\r\n        keywords: KEYWORDS,\r\n        contains: [\r\n          'self',\r\n          PROMPT,\r\n          NUMBER,\r\n          STRING,\r\n          hljs.HASH_COMMENT_MODE\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  SUBST.contains = [\r\n    STRING,\r\n    NUMBER,\r\n    PROMPT\r\n  ];\r\n\r\n  return {\r\n    name: 'Python',\r\n    aliases: [\r\n      'py',\r\n      'gyp',\r\n      'ipython'\r\n    ],\r\n    keywords: KEYWORDS,\r\n    illegal: /(<\\/|->|\\?)|=>/,\r\n    contains: [\r\n      PROMPT,\r\n      NUMBER,\r\n      {\r\n        // very common convention\r\n        begin: /\\bself\\b/\r\n      },\r\n      {\r\n        // eat \"if\" prior to string so that it won't accidentally be\r\n        // labeled as an f-string\r\n        beginKeywords: \"if\",\r\n        relevance: 0\r\n      },\r\n      STRING,\r\n      COMMENT_TYPE,\r\n      hljs.HASH_COMMENT_MODE,\r\n      {\r\n        variants: [\r\n          {\r\n            className: 'function',\r\n            beginKeywords: 'def'\r\n          },\r\n          {\r\n            className: 'class',\r\n            beginKeywords: 'class'\r\n          }\r\n        ],\r\n        end: /:/,\r\n        illegal: /[${=;\\n,]/,\r\n        contains: [\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          PARAMS,\r\n          {\r\n            begin: /->/,\r\n            endsWithParent: true,\r\n            keywords: KEYWORDS\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: /^[\\t ]*@/,\r\n        end: /(?=#)|$/,\r\n        contains: [\r\n          NUMBER,\r\n          PARAMS,\r\n          STRING\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = python;\r\n"],
  "mappings": "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",
  "names": []
}
