{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/powershell.js"],
  "sourcesContent": ["/*\r\nLanguage: PowerShell\r\nDescription: PowerShell is a task-based command-line shell and scripting language built on .NET.\r\nAuthor: David Mohundro <david@mohundro.com>\r\nContributors: Nicholas Blumhardt <nblumhardt@nblumhardt.com>, Victor Zhou <OiCMudkips@users.noreply.github.com>, Nicolas Le Gall <contact@nlegall.fr>\r\nWebsite: https://docs.microsoft.com/en-us/powershell/\r\n*/\r\n\r\nfunction powershell(hljs) {\r\n  const TYPES = [\r\n    \"string\",\r\n    \"char\",\r\n    \"byte\",\r\n    \"int\",\r\n    \"long\",\r\n    \"bool\",\r\n    \"decimal\",\r\n    \"single\",\r\n    \"double\",\r\n    \"DateTime\",\r\n    \"xml\",\r\n    \"array\",\r\n    \"hashtable\",\r\n    \"void\"\r\n  ];\r\n\r\n  // https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands\r\n  const VALID_VERBS =\r\n    'Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|' +\r\n    'Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|' +\r\n    'Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|' +\r\n    'Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|' +\r\n    'ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|' +\r\n    'Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|' +\r\n    'Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|' +\r\n    'Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|' +\r\n    'Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|' +\r\n    'Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|' +\r\n    'Unprotect|Use|ForEach|Sort|Tee|Where';\r\n\r\n  const COMPARISON_OPERATORS =\r\n    '-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|' +\r\n    '-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|' +\r\n    '-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|' +\r\n    '-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|' +\r\n    '-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|' +\r\n    '-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|' +\r\n    '-split|-wildcard|-xor';\r\n\r\n  const KEYWORDS = {\r\n    $pattern: /-?[A-z\\.\\-]+\\b/,\r\n    keyword:\r\n      'if else foreach return do while until elseif begin for trap data dynamicparam ' +\r\n      'end break throw param continue finally in switch exit filter try process catch ' +\r\n      'hidden static parameter',\r\n    // \"echo\" relevance has been set to 0 to avoid auto-detect conflicts with shell transcripts\r\n    built_in:\r\n      'ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp ' +\r\n      'cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx ' +\r\n      'fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group ' +\r\n      'gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi ' +\r\n      'iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh ' +\r\n      'popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp ' +\r\n      'rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp ' +\r\n      'spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write'\r\n    // TODO: 'validate[A-Z]+' can't work in keywords\r\n  };\r\n\r\n  const TITLE_NAME_RE = /\\w[\\w\\d]*((-)[\\w\\d]+)*/;\r\n\r\n  const BACKTICK_ESCAPE = {\r\n    begin: '`[\\\\s\\\\S]',\r\n    relevance: 0\r\n  };\r\n\r\n  const VAR = {\r\n    className: 'variable',\r\n    variants: [\r\n      {\r\n        begin: /\\$\\B/\r\n      },\r\n      {\r\n        className: 'keyword',\r\n        begin: /\\$this/\r\n      },\r\n      {\r\n        begin: /\\$[\\w\\d][\\w\\d_:]*/\r\n      }\r\n    ]\r\n  };\r\n\r\n  const LITERAL = {\r\n    className: 'literal',\r\n    begin: /\\$(null|true|false)\\b/\r\n  };\r\n\r\n  const QUOTE_STRING = {\r\n    className: \"string\",\r\n    variants: [\r\n      {\r\n        begin: /\"/,\r\n        end: /\"/\r\n      },\r\n      {\r\n        begin: /@\"/,\r\n        end: /^\"@/\r\n      }\r\n    ],\r\n    contains: [\r\n      BACKTICK_ESCAPE,\r\n      VAR,\r\n      {\r\n        className: 'variable',\r\n        begin: /\\$[A-z]/,\r\n        end: /[^A-z]/\r\n      }\r\n    ]\r\n  };\r\n\r\n  const APOS_STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: /'/,\r\n        end: /'/\r\n      },\r\n      {\r\n        begin: /@'/,\r\n        end: /^'@/\r\n      }\r\n    ]\r\n  };\r\n\r\n  const PS_HELPTAGS = {\r\n    className: \"doctag\",\r\n    variants: [\r\n      /* no paramater help tags */\r\n      {\r\n        begin: /\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/\r\n      },\r\n      /* one parameter help tags */\r\n      {\r\n        begin: /\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\s+\\S+/\r\n      }\r\n    ]\r\n  };\r\n\r\n  const PS_COMMENT = hljs.inherit(\r\n    hljs.COMMENT(null, null),\r\n    {\r\n      variants: [\r\n        /* single-line comment */\r\n        {\r\n          begin: /#/,\r\n          end: /$/\r\n        },\r\n        /* multi-line comment */\r\n        {\r\n          begin: /<#/,\r\n          end: /#>/\r\n        }\r\n      ],\r\n      contains: [ PS_HELPTAGS ]\r\n    }\r\n  );\r\n\r\n  const CMDLETS = {\r\n    className: 'built_in',\r\n    variants: [\r\n      {\r\n        begin: '('.concat(VALID_VERBS, ')+(-)[\\\\w\\\\d]+')\r\n      }\r\n    ]\r\n  };\r\n\r\n  const PS_CLASS = {\r\n    className: 'class',\r\n    beginKeywords: 'class enum',\r\n    end: /\\s*[{]/,\r\n    excludeEnd: true,\r\n    relevance: 0,\r\n    contains: [ hljs.TITLE_MODE ]\r\n  };\r\n\r\n  const PS_FUNCTION = {\r\n    className: 'function',\r\n    begin: /function\\s+/,\r\n    end: /\\s*\\{|$/,\r\n    excludeEnd: true,\r\n    returnBegin: true,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        begin: \"function\",\r\n        relevance: 0,\r\n        className: \"keyword\"\r\n      },\r\n      {\r\n        className: \"title\",\r\n        begin: TITLE_NAME_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        className: \"params\",\r\n        relevance: 0,\r\n        contains: [ VAR ]\r\n      }\r\n      // CMDLETS\r\n    ]\r\n  };\r\n\r\n  // Using statment, plus type, plus assembly name.\r\n  const PS_USING = {\r\n    begin: /using\\s/,\r\n    end: /$/,\r\n    returnBegin: true,\r\n    contains: [\r\n      QUOTE_STRING,\r\n      APOS_STRING,\r\n      {\r\n        className: 'keyword',\r\n        begin: /(using|assembly|command|module|namespace|type)/\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Comperison operators & function named parameters.\r\n  const PS_ARGUMENTS = {\r\n    variants: [\r\n      // PS literals are pretty verbose so it's a good idea to accent them a bit.\r\n      {\r\n        className: 'operator',\r\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')\r\n      },\r\n      {\r\n        className: 'literal',\r\n        begin: /(-)[\\w\\d]+/,\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n\r\n  const HASH_SIGNS = {\r\n    className: 'selector-tag',\r\n    begin: /@\\B/,\r\n    relevance: 0\r\n  };\r\n\r\n  // It's a very general rule so I'll narrow it a bit with some strict boundaries\r\n  // to avoid any possible false-positive collisions!\r\n  const PS_METHODS = {\r\n    className: 'function',\r\n    begin: /\\[.*\\]\\s*[\\w]+[ ]??\\(/,\r\n    end: /$/,\r\n    returnBegin: true,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        className: 'keyword',\r\n        begin: '('.concat(\r\n          KEYWORDS.keyword.toString().replace(/\\s/g, '|'\r\n          ), ')\\\\b'),\r\n        endsParent: true,\r\n        relevance: 0\r\n      },\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        endsParent: true\r\n      })\r\n    ]\r\n  };\r\n\r\n  const GENTLEMANS_SET = [\r\n    // STATIC_MEMBER,\r\n    PS_METHODS,\r\n    PS_COMMENT,\r\n    BACKTICK_ESCAPE,\r\n    hljs.NUMBER_MODE,\r\n    QUOTE_STRING,\r\n    APOS_STRING,\r\n    // PS_NEW_OBJECT_TYPE,\r\n    CMDLETS,\r\n    VAR,\r\n    LITERAL,\r\n    HASH_SIGNS\r\n  ];\r\n\r\n  const PS_TYPE = {\r\n    begin: /\\[/,\r\n    end: /\\]/,\r\n    excludeBegin: true,\r\n    excludeEnd: true,\r\n    relevance: 0,\r\n    contains: [].concat(\r\n      'self',\r\n      GENTLEMANS_SET,\r\n      {\r\n        begin: \"(\" + TYPES.join(\"|\") + \")\",\r\n        className: \"built_in\",\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'type',\r\n        begin: /[\\.\\w\\d]+/,\r\n        relevance: 0\r\n      }\r\n    )\r\n  };\r\n\r\n  PS_METHODS.contains.unshift(PS_TYPE);\r\n\r\n  return {\r\n    name: 'PowerShell',\r\n    aliases: [\r\n      \"ps\",\r\n      \"ps1\"\r\n    ],\r\n    case_insensitive: true,\r\n    keywords: KEYWORDS,\r\n    contains: GENTLEMANS_SET.concat(\r\n      PS_CLASS,\r\n      PS_FUNCTION,\r\n      PS_USING,\r\n      PS_ARGUMENTS,\r\n      PS_TYPE\r\n    )\r\n  };\r\n}\r\n\r\nmodule.exports = powershell;\r\n"],
  "mappings": "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",
  "names": []
}
