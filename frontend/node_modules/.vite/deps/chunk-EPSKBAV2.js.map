{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/moonscript.js"],
  "sourcesContent": ["/*\r\nLanguage: MoonScript\r\nAuthor: Billy Quith <chinbillybilbo@gmail.com>\r\nDescription: MoonScript is a programming language that transcompiles to Lua.\r\nOrigin: coffeescript.js\r\nWebsite: http://moonscript.org/\r\nCategory: scripting\r\n*/\r\n\r\nfunction moonscript(hljs) {\r\n  const KEYWORDS = {\r\n    keyword:\r\n      // Moonscript keywords\r\n      'if then not for in while do return else elseif break continue switch and or ' +\r\n      'unless when class extends super local import export from using',\r\n    literal:\r\n      'true false nil',\r\n    built_in:\r\n      '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load ' +\r\n      'loadfile loadstring module next pairs pcall print rawequal rawget rawset require ' +\r\n      'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug ' +\r\n      'io math os package string table'\r\n  };\r\n  const JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /#\\{/,\r\n    end: /\\}/,\r\n    keywords: KEYWORDS\r\n  };\r\n  const EXPRESSIONS = [\r\n    hljs.inherit(hljs.C_NUMBER_MODE,\r\n      {\r\n        starts: {\r\n          end: '(\\\\s*/)?',\r\n          relevance: 0\r\n        }\r\n      }), // a number tries to eat the following slash to prevent treating it as a regexp\r\n    {\r\n      className: 'string',\r\n      variants: [\r\n        {\r\n          begin: /'/,\r\n          end: /'/,\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: /\"/,\r\n          end: /\"/,\r\n          contains: [\r\n            hljs.BACKSLASH_ESCAPE,\r\n            SUBST\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'built_in',\r\n      begin: '@__' + hljs.IDENT_RE\r\n    },\r\n    {\r\n      begin: '@' + hljs.IDENT_RE // relevance booster on par with CoffeeScript\r\n    },\r\n    {\r\n      begin: hljs.IDENT_RE + '\\\\\\\\' + hljs.IDENT_RE // inst\\method\r\n    }\r\n  ];\r\n  SUBST.contains = EXPRESSIONS;\r\n\r\n  const TITLE = hljs.inherit(hljs.TITLE_MODE, {\r\n    begin: JS_IDENT_RE\r\n  });\r\n  const POSSIBLE_PARAMS_RE = '(\\\\(.*\\\\)\\\\s*)?\\\\B[-=]>';\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: '\\\\([^\\\\(]',\r\n    returnBegin: true,\r\n    /* We need another contained nameless mode to not have every nested\r\n    pair of parens to be called \"params\" */\r\n    contains: [\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        keywords: KEYWORDS,\r\n        contains: [ 'self' ].concat(EXPRESSIONS)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'MoonScript',\r\n    aliases: [ 'moon' ],\r\n    keywords: KEYWORDS,\r\n    illegal: /\\/\\*/,\r\n    contains: EXPRESSIONS.concat([\r\n      hljs.COMMENT('--', '$'),\r\n      {\r\n        className: 'function', // function: -> =>\r\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + POSSIBLE_PARAMS_RE,\r\n        end: '[-=]>',\r\n        returnBegin: true,\r\n        contains: [\r\n          TITLE,\r\n          PARAMS\r\n        ]\r\n      },\r\n      {\r\n        begin: /[\\(,:=]\\s*/, // anonymous function start\r\n        relevance: 0,\r\n        contains: [\r\n          {\r\n            className: 'function',\r\n            begin: POSSIBLE_PARAMS_RE,\r\n            end: '[-=]>',\r\n            returnBegin: true,\r\n            contains: [ PARAMS ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'class',\r\n        end: '$',\r\n        illegal: /[:=\"\\[\\]]/,\r\n        contains: [\r\n          {\r\n            beginKeywords: 'extends',\r\n            endsWithParent: true,\r\n            illegal: /[:=\"\\[\\]]/,\r\n            contains: [ TITLE ]\r\n          },\r\n          TITLE\r\n        ]\r\n      },\r\n      {\r\n        className: 'name', // table\r\n        begin: JS_IDENT_RE + ':',\r\n        end: ':',\r\n        returnBegin: true,\r\n        returnEnd: true,\r\n        relevance: 0\r\n      }\r\n    ])\r\n  };\r\n}\r\n\r\nmodule.exports = moonscript;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AASA,aAAS,WAAW,MAAM;AACxB,YAAM,WAAW;AAAA,QACf;AAAA;AAAA,UAEE;AAAA;AAAA,QAEF,SACE;AAAA,QACF,UACE;AAAA,MAIJ;AACA,YAAM,cAAc;AACpB,YAAM,QAAQ;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AACA,YAAM,cAAc;AAAA,QAClB,KAAK;AAAA,UAAQ,KAAK;AAAA,UAChB;AAAA,YACE,QAAQ;AAAA,cACN,KAAK;AAAA,cACL,WAAW;AAAA,YACb;AAAA,UACF;AAAA,QAAC;AAAA;AAAA,QACH;AAAA,UACE,WAAW;AAAA,UACX,UAAU;AAAA,YACR;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,cACL,UAAU,CAAE,KAAK,gBAAiB;AAAA,YACpC;AAAA,YACA;AAAA,cACE,OAAO;AAAA,cACP,KAAK;AAAA,cACL,UAAU;AAAA,gBACR,KAAK;AAAA,gBACL;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,WAAW;AAAA,UACX,OAAO,QAAQ,KAAK;AAAA,QACtB;AAAA,QACA;AAAA,UACE,OAAO,MAAM,KAAK;AAAA;AAAA,QACpB;AAAA,QACA;AAAA,UACE,OAAO,KAAK,WAAW,SAAS,KAAK;AAAA;AAAA,QACvC;AAAA,MACF;AACA,YAAM,WAAW;AAEjB,YAAM,QAAQ,KAAK,QAAQ,KAAK,YAAY;AAAA,QAC1C,OAAO;AAAA,MACT,CAAC;AACD,YAAM,qBAAqB;AAC3B,YAAM,SAAS;AAAA,QACb,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA;AAAA;AAAA,QAGb,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,YACV,UAAU,CAAE,MAAO,EAAE,OAAO,WAAW;AAAA,UACzC;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAE,MAAO;AAAA,QAClB,UAAU;AAAA,QACV,SAAS;AAAA,QACT,UAAU,YAAY,OAAO;AAAA,UAC3B,KAAK,QAAQ,MAAM,GAAG;AAAA,UACtB;AAAA,YACE,WAAW;AAAA;AAAA,YACX,OAAO,UAAU,cAAc,cAAc;AAAA,YAC7C,KAAK;AAAA,YACL,aAAa;AAAA,YACb,UAAU;AAAA,cACR;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,OAAO;AAAA;AAAA,YACP,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,aAAa;AAAA,gBACb,UAAU,CAAE,MAAO;AAAA,cACrB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,KAAK;AAAA,YACL,SAAS;AAAA,YACT,UAAU;AAAA,cACR;AAAA,gBACE,eAAe;AAAA,gBACf,gBAAgB;AAAA,gBAChB,SAAS;AAAA,gBACT,UAAU,CAAE,KAAM;AAAA,cACpB;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA;AAAA,YACX,OAAO,cAAc;AAAA,YACrB,KAAK;AAAA,YACL,aAAa;AAAA,YACb,WAAW;AAAA,YACX,WAAW;AAAA,UACb;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
