{
  "version": 3,
  "sources": ["../../refractor/lang/racket.js"],
  "sourcesContent": ["'use strict'\r\nvar refractorScheme = require('./scheme.js')\r\nmodule.exports = racket\r\nracket.displayName = 'racket'\r\nracket.aliases = ['rkt']\r\nfunction racket(Prism) {\r\n  Prism.register(refractorScheme)\r\n  Prism.languages.racket = Prism.languages.extend('scheme', {\r\n    'lambda-parameter': {\r\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\r\n      // this will just prevent false positives of the `function` pattern\r\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\r\n      lookbehind: true\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('racket', 'string', {\r\n    lang: {\r\n      pattern: /^#lang.+/m,\r\n      greedy: true,\r\n      alias: 'keyword'\r\n    }\r\n  })\r\n  Prism.languages.rkt = Prism.languages.racket\r\n}\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,kBAAkB;AACtB,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC,KAAK;AACvB,aAAS,OAAO,OAAO;AACrB,YAAM,SAAS,eAAe;AAC9B,YAAM,UAAU,SAAS,MAAM,UAAU,OAAO,UAAU;AAAA,QACxD,oBAAoB;AAAA;AAAA;AAAA,UAGlB,SAAS;AAAA,UACT,YAAY;AAAA,QACd;AAAA,MACF,CAAC;AACD,YAAM,UAAU,aAAa,UAAU,UAAU;AAAA,QAC/C,MAAM;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AACD,YAAM,UAAU,MAAM,MAAM,UAAU;AAAA,IACxC;AAAA;AAAA;",
  "names": []
}
