{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/dts.js"],
  "sourcesContent": ["/*\r\nLanguage: Device Tree\r\nDescription: *.dts files used in the Linux kernel\r\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\r\nWebsite: https://elinux.org/Device_Tree_Reference\r\nCategory: config\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction dts(hljs) {\r\n  const STRINGS = {\r\n    className: 'string',\r\n    variants: [\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        begin: '((u8?|U)|L)?\"'\r\n      }),\r\n      {\r\n        begin: '(u8?|U)?R\"',\r\n        end: '\"',\r\n        contains: [hljs.BACKSLASH_ESCAPE]\r\n      },\r\n      {\r\n        begin: '\\'\\\\\\\\?.',\r\n        end: '\\'',\r\n        illegal: '.'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const NUMBERS = {\r\n    className: 'number',\r\n    variants: [\r\n      {\r\n        begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\r\n      },\r\n      {\r\n        begin: hljs.C_NUMBER_RE\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const PREPROCESSOR = {\r\n    className: 'meta',\r\n    begin: '#',\r\n    end: '$',\r\n    keywords: {\r\n      'meta-keyword': 'if else elif endif define undef ifdef ifndef'\r\n    },\r\n    contains: [\r\n      {\r\n        begin: /\\\\\\n/,\r\n        relevance: 0\r\n      },\r\n      {\r\n        beginKeywords: 'include',\r\n        end: '$',\r\n        keywords: {\r\n          'meta-keyword': 'include'\r\n        },\r\n        contains: [\r\n          hljs.inherit(STRINGS, {\r\n            className: 'meta-string'\r\n          }),\r\n          {\r\n            className: 'meta-string',\r\n            begin: '<',\r\n            end: '>',\r\n            illegal: '\\\\n'\r\n          }\r\n        ]\r\n      },\r\n      STRINGS,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE\r\n    ]\r\n  };\r\n\r\n  const DTS_REFERENCE = {\r\n    className: 'variable',\r\n    begin: /&[a-z\\d_]*\\b/\r\n  };\r\n\r\n  const DTS_KEYWORD = {\r\n    className: 'meta-keyword',\r\n    begin: '/[a-z][a-z\\\\d-]*/'\r\n  };\r\n\r\n  const DTS_LABEL = {\r\n    className: 'symbol',\r\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\r\n  };\r\n\r\n  const DTS_CELL_PROPERTY = {\r\n    className: 'params',\r\n    begin: '<',\r\n    end: '>',\r\n    contains: [\r\n      NUMBERS,\r\n      DTS_REFERENCE\r\n    ]\r\n  };\r\n\r\n  const DTS_NODE = {\r\n    className: 'class',\r\n    begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s\\{/,\r\n    end: /[{;=]/,\r\n    returnBegin: true,\r\n    excludeEnd: true\r\n  };\r\n\r\n  const DTS_ROOT_NODE = {\r\n    className: 'class',\r\n    begin: '/\\\\s*\\\\{',\r\n    end: /\\};/,\r\n    relevance: 10,\r\n    contains: [\r\n      DTS_REFERENCE,\r\n      DTS_KEYWORD,\r\n      DTS_LABEL,\r\n      DTS_NODE,\r\n      DTS_CELL_PROPERTY,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      NUMBERS,\r\n      STRINGS\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'Device Tree',\r\n    keywords: \"\",\r\n    contains: [\r\n      DTS_ROOT_NODE,\r\n      DTS_REFERENCE,\r\n      DTS_KEYWORD,\r\n      DTS_LABEL,\r\n      DTS_NODE,\r\n      DTS_CELL_PROPERTY,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      NUMBERS,\r\n      STRINGS,\r\n      PREPROCESSOR,\r\n      {\r\n        begin: hljs.IDENT_RE + '::',\r\n        keywords: \"\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = dts;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AASA,aAAS,IAAI,MAAM;AACjB,YAAM,UAAU;AAAA,QACd,WAAW;AAAA,QACX,UAAU;AAAA,UACR,KAAK,QAAQ,KAAK,mBAAmB;AAAA,YACnC,OAAO;AAAA,UACT,CAAC;AAAA,UACD;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU,CAAC,KAAK,gBAAgB;AAAA,UAClC;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,SAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAEA,YAAM,UAAU;AAAA,QACd,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,OAAO,KAAK;AAAA,UACd;AAAA,QACF;AAAA,QACA,WAAW;AAAA,MACb;AAEA,YAAM,eAAe;AAAA,QACnB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR,gBAAgB;AAAA,QAClB;AAAA,QACA,UAAU;AAAA,UACR;AAAA,YACE,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UACA;AAAA,YACE,eAAe;AAAA,YACf,KAAK;AAAA,YACL,UAAU;AAAA,cACR,gBAAgB;AAAA,YAClB;AAAA,YACA,UAAU;AAAA,cACR,KAAK,QAAQ,SAAS;AAAA,gBACpB,WAAW;AAAA,cACb,CAAC;AAAA,cACD;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,SAAS;AAAA,cACX;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,QACP;AAAA,MACF;AAEA,YAAM,gBAAgB;AAAA,QACpB,WAAW;AAAA,QACX,OAAO;AAAA,MACT;AAEA,YAAM,cAAc;AAAA,QAClB,WAAW;AAAA,QACX,OAAO;AAAA,MACT;AAEA,YAAM,YAAY;AAAA,QAChB,WAAW;AAAA,QACX,OAAO;AAAA,MACT;AAEA,YAAM,oBAAoB;AAAA,QACxB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,YAAM,WAAW;AAAA,QACf,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,aAAa;AAAA,QACb,YAAY;AAAA,MACd;AAEA,YAAM,gBAAgB;AAAA,QACpB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,QACV,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,YACE,OAAO,KAAK,WAAW;AAAA,YACvB,UAAU;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
