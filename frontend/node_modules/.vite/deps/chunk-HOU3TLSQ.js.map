{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/xl.js"],
  "sourcesContent": ["/*\r\nLanguage: XL\r\nAuthor: Christophe de Dinechin <christophe@taodyne.com>\r\nDescription: An extensible programming language, based on parse tree rewriting\r\nWebsite: http://xlr.sf.net\r\n*/\r\n\r\nfunction xl(hljs) {\r\n  const BUILTIN_MODULES =\r\n    'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo ' +\r\n    'StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\r\n\r\n  const XL_KEYWORDS = {\r\n    $pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,\r\n    keyword:\r\n      'if then else do while until for loop import with is as where when by data constant ' +\r\n      'integer real text name boolean symbol infix prefix postfix block tree',\r\n    literal:\r\n      'true false nil',\r\n    built_in:\r\n      'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin ' +\r\n      'acos atan exp expm1 log log2 log10 log1p pi at text_length text_range ' +\r\n      'text_find text_replace contains page slide basic_slide title_slide ' +\r\n      'title subtitle fade_in fade_out fade_at clear_color color line_color ' +\r\n      'line_width texture_wrap texture_transform texture scale_?x scale_?y ' +\r\n      'scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y ' +\r\n      'rotate_?z? rectangle circle ellipse sphere path line_to move_to ' +\r\n      'quad_to curve_to theme background contents locally time mouse_?x ' +\r\n      'mouse_?y mouse_buttons ' +\r\n      BUILTIN_MODULES\r\n  };\r\n\r\n  const DOUBLE_QUOTE_TEXT = {\r\n    className: 'string',\r\n    begin: '\"',\r\n    end: '\"',\r\n    illegal: '\\\\n'\r\n  };\r\n  const SINGLE_QUOTE_TEXT = {\r\n    className: 'string',\r\n    begin: '\\'',\r\n    end: '\\'',\r\n    illegal: '\\\\n'\r\n  };\r\n  const LONG_TEXT = {\r\n    className: 'string',\r\n    begin: '<<',\r\n    end: '>>'\r\n  };\r\n  const BASED_NUMBER = {\r\n    className: 'number',\r\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'\r\n  };\r\n  const IMPORT = {\r\n    beginKeywords: 'import',\r\n    end: '$',\r\n    keywords: XL_KEYWORDS,\r\n    contains: [ DOUBLE_QUOTE_TEXT ]\r\n  };\r\n  const FUNCTION_DEFINITION = {\r\n    className: 'function',\r\n    begin: /[a-z][^\\n]*->/,\r\n    returnBegin: true,\r\n    end: /->/,\r\n    contains: [\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        starts: {\r\n          endsWithParent: true,\r\n          keywords: XL_KEYWORDS\r\n        }\r\n      })\r\n    ]\r\n  };\r\n  return {\r\n    name: 'XL',\r\n    aliases: [ 'tao' ],\r\n    keywords: XL_KEYWORDS,\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      DOUBLE_QUOTE_TEXT,\r\n      SINGLE_QUOTE_TEXT,\r\n      LONG_TEXT,\r\n      FUNCTION_DEFINITION,\r\n      IMPORT,\r\n      BASED_NUMBER,\r\n      hljs.NUMBER_MODE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = xl;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAOA,aAAS,GAAG,MAAM;AAChB,YAAM,kBACJ;AAGF,YAAM,cAAc;AAAA,QAClB,UAAU;AAAA,QACV,SACE;AAAA,QAEF,SACE;AAAA,QACF,UACE,yjBASA;AAAA,MACJ;AAEA,YAAM,oBAAoB;AAAA,QACxB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,MACX;AACA,YAAM,oBAAoB;AAAA,QACxB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,QACL,SAAS;AAAA,MACX;AACA,YAAM,YAAY;AAAA,QAChB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACP;AACA,YAAM,eAAe;AAAA,QACnB,WAAW;AAAA,QACX,OAAO;AAAA,MACT;AACA,YAAM,SAAS;AAAA,QACb,eAAe;AAAA,QACf,KAAK;AAAA,QACL,UAAU;AAAA,QACV,UAAU,CAAE,iBAAkB;AAAA,MAChC;AACA,YAAM,sBAAsB;AAAA,QAC1B,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA,QACb,KAAK;AAAA,QACL,UAAU;AAAA,UACR,KAAK,QAAQ,KAAK,YAAY;AAAA,YAC5B,QAAQ;AAAA,cACN,gBAAgB;AAAA,cAChB,UAAU;AAAA,YACZ;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AACA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAE,KAAM;AAAA,QACjB,UAAU;AAAA,QACV,UAAU;AAAA,UACR,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK;AAAA,QACP;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
