{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/verilog.js"],
  "sourcesContent": ["/*\r\nLanguage: Verilog\r\nAuthor: Jon Evans <jon@craftyjon.com>\r\nContributors: Boone Severson <boone.severson@gmail.com>\r\nDescription: Verilog is a hardware description language used in electronic design automation to describe digital and mixed-signal systems. This highlighter supports Verilog and SystemVerilog through IEEE 1800-2012.\r\nWebsite: http://www.verilog.com\r\n*/\r\n\r\nfunction verilog(hljs) {\r\n  const SV_KEYWORDS = {\r\n    $pattern: /[\\w\\$]+/,\r\n    keyword:\r\n      'accept_on alias always always_comb always_ff always_latch and assert assign ' +\r\n      'assume automatic before begin bind bins binsof bit break buf|0 bufif0 bufif1 ' +\r\n      'byte case casex casez cell chandle checker class clocking cmos config const ' +\r\n      'constraint context continue cover covergroup coverpoint cross deassign default ' +\r\n      'defparam design disable dist do edge else end endcase endchecker endclass ' +\r\n      'endclocking endconfig endfunction endgenerate endgroup endinterface endmodule ' +\r\n      'endpackage endprimitive endprogram endproperty endspecify endsequence endtable ' +\r\n      'endtask enum event eventually expect export extends extern final first_match for ' +\r\n      'force foreach forever fork forkjoin function generate|5 genvar global highz0 highz1 ' +\r\n      'if iff ifnone ignore_bins illegal_bins implements implies import incdir include ' +\r\n      'initial inout input inside instance int integer interconnect interface intersect ' +\r\n      'join join_any join_none large let liblist library local localparam logic longint ' +\r\n      'macromodule matches medium modport module nand negedge nettype new nexttime nmos ' +\r\n      'nor noshowcancelled not notif0 notif1 or output package packed parameter pmos ' +\r\n      'posedge primitive priority program property protected pull0 pull1 pulldown pullup ' +\r\n      'pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos ' +\r\n      'real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran ' +\r\n      'rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared ' +\r\n      'sequence shortint shortreal showcancelled signed small soft solve specify specparam ' +\r\n      'static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on ' +\r\n      'sync_reject_on table tagged task this throughout time timeprecision timeunit tran ' +\r\n      'tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 ' +\r\n      'unsigned until until_with untyped use uwire var vectored virtual void wait wait_order ' +\r\n      'wand weak weak0 weak1 while wildcard wire with within wor xnor xor',\r\n    literal:\r\n      'null',\r\n    built_in:\r\n      '$finish $stop $exit $fatal $error $warning $info $realtime $time $printtimescale ' +\r\n      '$bitstoreal $bitstoshortreal $itor $signed $cast $bits $stime $timeformat ' +\r\n      '$realtobits $shortrealtobits $rtoi $unsigned $asserton $assertkill $assertpasson ' +\r\n      '$assertfailon $assertnonvacuouson $assertoff $assertcontrol $assertpassoff ' +\r\n      '$assertfailoff $assertvacuousoff $isunbounded $sampled $fell $changed $past_gclk ' +\r\n      '$fell_gclk $changed_gclk $rising_gclk $steady_gclk $coverage_control ' +\r\n      '$coverage_get $coverage_save $set_coverage_db_name $rose $stable $past ' +\r\n      '$rose_gclk $stable_gclk $future_gclk $falling_gclk $changing_gclk $display ' +\r\n      '$coverage_get_max $coverage_merge $get_coverage $load_coverage_db $typename ' +\r\n      '$unpacked_dimensions $left $low $increment $clog2 $ln $log10 $exp $sqrt $pow ' +\r\n      '$floor $ceil $sin $cos $tan $countbits $onehot $isunknown $fatal $warning ' +\r\n      '$dimensions $right $high $size $asin $acos $atan $atan2 $hypot $sinh $cosh ' +\r\n      '$tanh $asinh $acosh $atanh $countones $onehot0 $error $info $random ' +\r\n      '$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson ' +\r\n      '$dist_t $dist_uniform $q_initialize $q_remove $q_exam $async$and$array ' +\r\n      '$async$nand$array $async$or$array $async$nor$array $sync$and$array ' +\r\n      '$sync$nand$array $sync$or$array $sync$nor$array $q_add $q_full $psprintf ' +\r\n      '$async$and$plane $async$nand$plane $async$or$plane $async$nor$plane ' +\r\n      '$sync$and$plane $sync$nand$plane $sync$or$plane $sync$nor$plane $system ' +\r\n      '$display $displayb $displayh $displayo $strobe $strobeb $strobeh $strobeo ' +\r\n      '$write $readmemb $readmemh $writememh $value$plusargs ' +\r\n      '$dumpvars $dumpon $dumplimit $dumpports $dumpportson $dumpportslimit ' +\r\n      '$writeb $writeh $writeo $monitor $monitorb $monitorh $monitoro $writememb ' +\r\n      '$dumpfile $dumpoff $dumpall $dumpflush $dumpportsoff $dumpportsall ' +\r\n      '$dumpportsflush $fclose $fdisplay $fdisplayb $fdisplayh $fdisplayo ' +\r\n      '$fstrobe $fstrobeb $fstrobeh $fstrobeo $swrite $swriteb $swriteh ' +\r\n      '$swriteo $fscanf $fread $fseek $fflush $feof $fopen $fwrite $fwriteb ' +\r\n      '$fwriteh $fwriteo $fmonitor $fmonitorb $fmonitorh $fmonitoro $sformat ' +\r\n      '$sformatf $fgetc $ungetc $fgets $sscanf $rewind $ftell $ferror'\r\n  };\r\n\r\n  return {\r\n    name: 'Verilog',\r\n    aliases: [\r\n      'v',\r\n      'sv',\r\n      'svh'\r\n    ],\r\n    case_insensitive: false,\r\n    keywords: SV_KEYWORDS,\r\n    contains: [\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'number',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ],\r\n        variants: [\r\n          {\r\n            begin: '\\\\b((\\\\d+\\'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)'\r\n          },\r\n          {\r\n            begin: '\\\\B((\\'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)'\r\n          },\r\n          {\r\n            begin: '\\\\b([0-9_])+',\r\n            relevance: 0\r\n          }\r\n        ]\r\n      },\r\n      /* parameters to instances */\r\n      {\r\n        className: 'variable',\r\n        variants: [\r\n          {\r\n            begin: '#\\\\((?!parameter).+\\\\)'\r\n          },\r\n          {\r\n            begin: '\\\\.\\\\w+',\r\n            relevance: 0\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: '`',\r\n        end: '$',\r\n        keywords: {\r\n          'meta-keyword':\r\n            'define __FILE__ ' +\r\n            '__LINE__ begin_keywords celldefine default_nettype define ' +\r\n            'else elsif end_keywords endcelldefine endif ifdef ifndef ' +\r\n            'include line nounconnected_drive pragma resetall timescale ' +\r\n            'unconnected_drive undef undefineall'\r\n        },\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = verilog;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,aAAS,QAAQ,MAAM;AACrB,YAAM,cAAc;AAAA,QAClB,UAAU;AAAA,QACV,SACE;AAAA,QAwBF,SACE;AAAA,QACF,UACE;AAAA,MA6BJ;AAEA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,UACP;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,QAClB,UAAU;AAAA,QACV,UAAU;AAAA,UACR,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,UAAU,CAAE,KAAK,gBAAiB;AAAA,YAClC,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,cACA;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,cACA;AAAA,gBACE,OAAO;AAAA,gBACP,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA;AAAA,UAEA;AAAA,YACE,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,cACA;AAAA,gBACE,OAAO;AAAA,gBACP,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACR,gBACE;AAAA,YAKJ;AAAA,YACA,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
