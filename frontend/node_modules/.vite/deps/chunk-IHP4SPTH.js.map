{
  "version": 3,
  "sources": ["../../refractor/lang/django.js"],
  "sourcesContent": ["'use strict'\r\nvar refractorMarkupTemplating = require('./markup-templating.js')\r\nmodule.exports = django\r\ndjango.displayName = 'django'\r\ndjango.aliases = ['jinja2']\r\nfunction django(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\r\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\r\n  ;(function (Prism) {\r\n    Prism.languages.django = {\r\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\r\n      tag: {\r\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      delimiter: {\r\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\r\n        alias: 'punctuation'\r\n      },\r\n      string: {\r\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n        greedy: true\r\n      },\r\n      filter: {\r\n        pattern: /(\\|)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      test: {\r\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\r\n      keyword:\r\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\r\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\r\n      variable: /\\b\\w+\\b/,\r\n      punctuation: /[{}[\\](),.:;]/\r\n    }\r\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\r\n    var markupTemplating = Prism.languages['markup-templating']\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      markupTemplating.tokenizePlaceholders(env, 'django')\r\n    }) // Add an Jinja2 alias\r\n    Prism.languages.jinja2 = Prism.languages.django\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\r\n    })\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,4BAA4B;AAChC,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC,QAAQ;AAC1B,aAAS,OAAO,OAAO;AACrB,YAAM,SAAS,yBAAyB;AAGvC,OAAC,SAAUA,QAAO;AACjB,QAAAA,OAAM,UAAU,SAAS;AAAA,UACvB,SAAS;AAAA,UACT,KAAK;AAAA,YACH,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,OAAO;AAAA,UACT;AAAA,UACA,WAAW;AAAA,YACT,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,QAAQ;AAAA,UACV;AAAA,UACA,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,OAAO;AAAA,UACT;AAAA,UACA,MAAM;AAAA,YACJ,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,OAAO;AAAA,UACT;AAAA,UACA,UAAU;AAAA,UACV,SACE;AAAA,UACF,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UACV,aAAa;AAAA,QACf;AACA,YAAI,UAAU;AACd,YAAI,mBAAmBA,OAAM,UAAU,mBAAmB;AAC1D,QAAAA,OAAM,MAAM,IAAI,mBAAmB,SAAU,KAAK;AAChD,2BAAiB,kBAAkB,KAAK,UAAU,OAAO;AAAA,QAC3D,CAAC;AACD,QAAAA,OAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,2BAAiB,qBAAqB,KAAK,QAAQ;AAAA,QACrD,CAAC;AACD,QAAAA,OAAM,UAAU,SAASA,OAAM,UAAU;AACzC,QAAAA,OAAM,MAAM,IAAI,mBAAmB,SAAU,KAAK;AAChD,2BAAiB,kBAAkB,KAAK,UAAU,OAAO;AAAA,QAC3D,CAAC;AACD,QAAAA,OAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,2BAAiB,qBAAqB,KAAK,QAAQ;AAAA,QACrD,CAAC;AAAA,MACH,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
