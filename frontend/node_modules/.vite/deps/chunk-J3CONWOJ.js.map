{
  "version": 3,
  "sources": ["../../refractor/lang/promql.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = promql\r\npromql.displayName = 'promql'\r\npromql.aliases = []\r\nfunction promql(Prism) {\r\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\r\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\r\n  ;(function (Prism) {\r\n    // PromQL Aggregation Operators\r\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\r\n    var aggregations = [\r\n      'sum',\r\n      'min',\r\n      'max',\r\n      'avg',\r\n      'group',\r\n      'stddev',\r\n      'stdvar',\r\n      'count',\r\n      'count_values',\r\n      'bottomk',\r\n      'topk',\r\n      'quantile'\r\n    ] // PromQL vector matching + the by and without clauses\r\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\r\n    var vectorMatching = [\r\n      'on',\r\n      'ignoring',\r\n      'group_right',\r\n      'group_left',\r\n      'by',\r\n      'without'\r\n    ] // PromQL offset modifier\r\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\r\n    var offsetModifier = ['offset']\r\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\r\n    Prism.languages.promql = {\r\n      comment: {\r\n        pattern: /(^[ \\t]*)#.*/m,\r\n        lookbehind: true\r\n      },\r\n      'vector-match': {\r\n        // Match the comma-separated label lists inside vector matching:\r\n        pattern: new RegExp(\r\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          'label-key': {\r\n            pattern: /\\b[^,]+\\b/,\r\n            alias: 'attr-name'\r\n          },\r\n          punctuation: /[(),]/\r\n        }\r\n      },\r\n      'context-labels': {\r\n        pattern: /\\{[^{}]*\\}/,\r\n        inside: {\r\n          'label-key': {\r\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\r\n            alias: 'attr-name'\r\n          },\r\n          'label-value': {\r\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n            greedy: true,\r\n            alias: 'attr-value'\r\n          },\r\n          punctuation: /\\{|\\}|=~?|![=~]|,/\r\n        }\r\n      },\r\n      'context-range': [\r\n        {\r\n          pattern: /\\[[\\w\\s:]+\\]/,\r\n          // [1m]\r\n          inside: {\r\n            punctuation: /\\[|\\]|:/,\r\n            'range-duration': {\r\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\r\n              alias: 'number'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern: /(\\boffset\\s+)\\w+/,\r\n          // offset 1m\r\n          lookbehind: true,\r\n          inside: {\r\n            'range-duration': {\r\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\r\n              alias: 'number'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\r\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n      number:\r\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\r\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\r\n      punctuation: /[{};()`,.[\\]]/\r\n    }\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC;AAClB,aAAS,OAAO,OAAO;AAGrB;AAAC,OAAC,SAAUA,QAAO;AAGjB,YAAI,eAAe;AAAA,UACjB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,iBAAiB;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,iBAAiB,CAAC,QAAQ;AAC9B,YAAI,WAAW,aAAa,OAAO,gBAAgB,cAAc;AACjE,QAAAA,OAAM,UAAU,SAAS;AAAA,UACvB,SAAS;AAAA,YACP,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,UACA,gBAAgB;AAAA;AAAA,YAEd,SAAS,IAAI;AAAA,cACX,SAAS,eAAe,KAAK,GAAG,IAAI;AAAA,YACtC;AAAA,YACA,YAAY;AAAA,YACZ,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,gBACT,OAAO;AAAA,cACT;AAAA,cACA,aAAa;AAAA,YACf;AAAA,UACF;AAAA,UACA,kBAAkB;AAAA,YAChB,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,gBACT,OAAO;AAAA,cACT;AAAA,cACA,eAAe;AAAA,gBACb,SAAS;AAAA,gBACT,QAAQ;AAAA,gBACR,OAAO;AAAA,cACT;AAAA,cACA,aAAa;AAAA,YACf;AAAA,UACF;AAAA,UACA,iBAAiB;AAAA,YACf;AAAA,cACE,SAAS;AAAA;AAAA,cAET,QAAQ;AAAA,gBACN,aAAa;AAAA,gBACb,kBAAkB;AAAA,kBAChB,SAAS;AAAA,kBACT,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,YACA;AAAA,cACE,SAAS;AAAA;AAAA,cAET,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,kBAAkB;AAAA,kBAChB,SAAS;AAAA,kBACT,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,UACA,SAAS,IAAI,OAAO,WAAW,SAAS,KAAK,GAAG,IAAI,QAAQ,GAAG;AAAA,UAC/D,UAAU;AAAA,UACV,QACE;AAAA,UACF,UAAU;AAAA,UACV,aAAa;AAAA,QACf;AAAA,MACF,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
