{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/sml.js"],
  "sourcesContent": ["/*\r\nLanguage: SML (Standard ML)\r\nAuthor: Edwin Dalorzo <edwin@dalorzo.org>\r\nDescription: SML language definition.\r\nWebsite: https://www.smlnj.org\r\nOrigin: ocaml.js\r\nCategory: functional\r\n*/\r\nfunction sml(hljs) {\r\n  return {\r\n    name: 'SML (Standard ML)',\r\n    aliases: [ 'ml' ],\r\n    keywords: {\r\n      $pattern: '[a-z_]\\\\w*!?',\r\n      keyword:\r\n        /* according to Definition of Standard ML 97  */\r\n        'abstype and andalso as case datatype do else end eqtype ' +\r\n        'exception fn fun functor handle if in include infix infixr ' +\r\n        'let local nonfix of op open orelse raise rec sharing sig ' +\r\n        'signature struct structure then type val with withtype where while',\r\n      built_in:\r\n        /* built-in types according to basis library */\r\n        'array bool char exn int list option order real ref string substring vector unit word',\r\n      literal:\r\n        'true false NONE SOME LESS EQUAL GREATER nil'\r\n    },\r\n    illegal: /\\/\\/|>>/,\r\n    contains: [\r\n      {\r\n        className: 'literal',\r\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\r\n        relevance: 0\r\n      },\r\n      hljs.COMMENT(\r\n        '\\\\(\\\\*',\r\n        '\\\\*\\\\)',\r\n        {\r\n          contains: [ 'self' ]\r\n        }\r\n      ),\r\n      { /* type variable */\r\n        className: 'symbol',\r\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\r\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\r\n      },\r\n      { /* polymorphic variant */\r\n        className: 'type',\r\n        begin: '`[A-Z][\\\\w\\']*'\r\n      },\r\n      { /* module or constructor */\r\n        className: 'type',\r\n        begin: '\\\\b[A-Z][\\\\w\\']*',\r\n        relevance: 0\r\n      },\r\n      { /* don't color identifiers, but safely catch all identifiers with ' */\r\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\r\n      },\r\n      hljs.inherit(hljs.APOS_STRING_MODE, {\r\n        className: 'string',\r\n        relevance: 0\r\n      }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        illegal: null\r\n      }),\r\n      {\r\n        className: 'number',\r\n        begin:\r\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\r\n          '0[oO][0-7_]+[Lln]?|' +\r\n          '0[bB][01_]+[Lln]?|' +\r\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: /[-=]>/ // relevance booster\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = sml;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,aAAS,IAAI,MAAM;AACjB,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAE,IAAK;AAAA,QAChB,UAAU;AAAA,UACR,UAAU;AAAA,UACV;AAAA;AAAA,YAEE;AAAA;AAAA,UAIF;AAAA;AAAA,YAEE;AAAA;AAAA,UACF,SACE;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UACA,KAAK;AAAA,YACH;AAAA,YACA;AAAA,YACA;AAAA,cACE,UAAU,CAAE,MAAO;AAAA,YACrB;AAAA,UACF;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA;AAAA,UAET;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UACA;AAAA;AAAA,YACE,OAAO;AAAA,UACT;AAAA,UACA,KAAK,QAAQ,KAAK,kBAAkB;AAAA,YAClC,WAAW;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,UACD,KAAK,QAAQ,KAAK,mBAAmB;AAAA,YACnC,SAAS;AAAA,UACX,CAAC;AAAA,UACD;AAAA,YACE,WAAW;AAAA,YACX,OACE;AAAA,YAIF,WAAW;AAAA,UACb;AAAA,UACA;AAAA,YACE,OAAO;AAAA;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
