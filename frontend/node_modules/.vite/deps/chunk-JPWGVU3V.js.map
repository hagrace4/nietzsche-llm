{
  "version": 3,
  "sources": ["../../refractor/lang/textile.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = textile\r\ntextile.displayName = 'textile'\r\ntextile.aliases = []\r\nfunction textile(Prism) {\r\n  ;(function (Prism) {\r\n    // We don't allow for pipes inside parentheses\r\n    // to not break table pattern |(. foo |). bar |\r\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\r\n    // This pattern is necessary to prevent exponential backtracking\r\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\r\n    /**\r\n     * @param {string} source\r\n     * @param {string} [flags]\r\n     */\r\n    function withModifier(source, flags) {\r\n      return RegExp(\r\n        source\r\n          .replace(/<MOD>/g, function () {\r\n            return '(?:' + modifierRegex + ')'\r\n          })\r\n          .replace(/<PAR>/g, function () {\r\n            return '(?:' + parenthesesRegex + ')'\r\n          }),\r\n        flags || ''\r\n      )\r\n    }\r\n    var modifierTokens = {\r\n      css: {\r\n        pattern: /\\{[^{}]+\\}/,\r\n        inside: {\r\n          rest: Prism.languages.css\r\n        }\r\n      },\r\n      'class-id': {\r\n        pattern: /(\\()[^()]+(?=\\))/,\r\n        lookbehind: true,\r\n        alias: 'attr-value'\r\n      },\r\n      lang: {\r\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\r\n        lookbehind: true,\r\n        alias: 'attr-value'\r\n      },\r\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\r\n      punctuation: /[\\\\\\/]\\d+|\\S/\r\n    }\r\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\r\n      phrase: {\r\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          // h1. Header 1\r\n          'block-tag': {\r\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\r\n            inside: {\r\n              modifier: {\r\n                pattern: withModifier(\r\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\r\n                ),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              tag: /^[a-z]\\w*/,\r\n              punctuation: /\\.$/\r\n            }\r\n          },\r\n          // # List item\r\n          // * List item\r\n          list: {\r\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\r\n            inside: {\r\n              modifier: {\r\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              punctuation: /^[*#]+/\r\n            }\r\n          },\r\n          // | cell | cell | cell |\r\n          table: {\r\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\r\n            // or the cell: |{color:red}.1|2|3|\r\n            pattern: withModifier(\r\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\r\n                .source,\r\n              'm'\r\n            ),\r\n            inside: {\r\n              modifier: {\r\n                // Modifiers for rows after the first one are\r\n                // preceded by a pipe and a line feed\r\n                pattern: withModifier(\r\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\r\n                    .source\r\n                ),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              punctuation: /\\||^\\./\r\n            }\r\n          },\r\n          inline: {\r\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n            pattern: withModifier(\r\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\r\n                .source\r\n            ),\r\n            lookbehind: true,\r\n            inside: {\r\n              // Note: superscripts and subscripts are not handled specifically\r\n              // *bold*, **bold**\r\n              bold: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\r\n                lookbehind: true\r\n              },\r\n              // _italic_, __italic__\r\n              italic: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\r\n                lookbehind: true\r\n              },\r\n              // ??cite??\r\n              cite: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\r\n                lookbehind: true,\r\n                alias: 'string'\r\n              },\r\n              // @code@\r\n              code: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\r\n                lookbehind: true,\r\n                alias: 'keyword'\r\n              },\r\n              // +inserted+\r\n              inserted: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\r\n                lookbehind: true\r\n              },\r\n              // -deleted-\r\n              deleted: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\r\n                lookbehind: true\r\n              },\r\n              // %span%\r\n              span: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\r\n                lookbehind: true\r\n              },\r\n              modifier: {\r\n                pattern: withModifier(\r\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\r\n                ),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              punctuation: /[*_%?@+\\-^~]+/\r\n            }\r\n          },\r\n          // [alias]http://example.com\r\n          'link-ref': {\r\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\r\n            inside: {\r\n              string: {\r\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\r\n                lookbehind: true\r\n              },\r\n              url: {\r\n                pattern: /(^\\])\\S+$/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[\\[\\]]/\r\n            }\r\n          },\r\n          // \"text\":http://example.com\r\n          // \"text\":link-ref\r\n          link: {\r\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n            pattern: withModifier(\r\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\r\n            ),\r\n            inside: {\r\n              text: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\r\n                lookbehind: true\r\n              },\r\n              modifier: {\r\n                pattern: withModifier(/(^\")<MOD>+/.source),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              url: {\r\n                pattern: /(:).+/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[\":]/\r\n            }\r\n          },\r\n          // !image.jpg!\r\n          // !image.jpg(Title)!:http://example.com\r\n          image: {\r\n            pattern: withModifier(\r\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\r\n                .source\r\n            ),\r\n            inside: {\r\n              source: {\r\n                pattern: withModifier(\r\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\r\n                    .source\r\n                ),\r\n                lookbehind: true,\r\n                alias: 'url'\r\n              },\r\n              modifier: {\r\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              url: {\r\n                pattern: /(:).+/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[!:]/\r\n            }\r\n          },\r\n          // Footnote[1]\r\n          footnote: {\r\n            pattern: /\\b\\[\\d+\\]/,\r\n            alias: 'comment',\r\n            inside: {\r\n              punctuation: /\\[|\\]/\r\n            }\r\n          },\r\n          // CSS(Cascading Style Sheet)\r\n          acronym: {\r\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\r\n            inside: {\r\n              comment: {\r\n                pattern: /(\\()[^()]+(?=\\))/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[()]/\r\n            }\r\n          },\r\n          // Prism(C)\r\n          mark: {\r\n            pattern: /\\b\\((?:C|R|TM)\\)/,\r\n            alias: 'comment',\r\n            inside: {\r\n              punctuation: /[()]/\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }))\r\n    var phraseInside = textile['phrase'].inside\r\n    var nestedPatterns = {\r\n      inline: phraseInside['inline'],\r\n      link: phraseInside['link'],\r\n      image: phraseInside['image'],\r\n      footnote: phraseInside['footnote'],\r\n      acronym: phraseInside['acronym'],\r\n      mark: phraseInside['mark']\r\n    } // Only allow alpha-numeric HTML tags, not XML tags\r\n    textile.tag.pattern =\r\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\r\n    var phraseInlineInside = phraseInside['inline'].inside\r\n    phraseInlineInside['bold'].inside = nestedPatterns\r\n    phraseInlineInside['italic'].inside = nestedPatterns\r\n    phraseInlineInside['inserted'].inside = nestedPatterns\r\n    phraseInlineInside['deleted'].inside = nestedPatterns\r\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\r\n    var phraseTableInside = phraseInside['table'].inside\r\n    phraseTableInside['inline'] = nestedPatterns['inline']\r\n    phraseTableInside['link'] = nestedPatterns['link']\r\n    phraseTableInside['image'] = nestedPatterns['image']\r\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\r\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\r\n    phraseTableInside['mark'] = nestedPatterns['mark']\r\n  })(Prism)\r\n}\r\n"],
  "mappings": "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",
  "names": ["Prism", "textile"]
}
