{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/http.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: HTTP\r\nDescription: HTTP request and response headers with automatic body highlighting\r\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nCategory: common, protocols\r\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\r\n*/\r\n\r\nfunction http(hljs) {\r\n  const VERSION = 'HTTP/(2|1\\\\.[01])';\r\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\r\n  const HEADER = {\r\n    className: 'attribute',\r\n    begin: concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\r\n    starts: {\r\n      contains: [\r\n        {\r\n          className: \"punctuation\",\r\n          begin: /: /,\r\n          relevance: 0,\r\n          starts: {\r\n            end: '$',\r\n            relevance: 0\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  const HEADERS_AND_BODY = [\r\n    HEADER,\r\n    {\r\n      begin: '\\\\n\\\\n',\r\n      starts: { subLanguage: [], endsWithParent: true }\r\n    }\r\n  ];\r\n\r\n  return {\r\n    name: 'HTTP',\r\n    aliases: ['https'],\r\n    illegal: /\\S/,\r\n    contains: [\r\n      // response\r\n      {\r\n        begin: '^(?=' + VERSION + \" \\\\d{3})\",\r\n        end: /$/,\r\n        contains: [\r\n          {\r\n            className: \"meta\",\r\n            begin: VERSION\r\n          },\r\n          {\r\n            className: 'number', begin: '\\\\b\\\\d{3}\\\\b'\r\n          }\r\n        ],\r\n        starts: {\r\n          end: /\\b\\B/,\r\n          illegal: /\\S/,\r\n          contains: HEADERS_AND_BODY\r\n        }\r\n      },\r\n      // request\r\n      {\r\n        begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\r\n        end: /$/,\r\n        contains: [\r\n          {\r\n            className: 'string',\r\n            begin: ' ',\r\n            end: ' ',\r\n            excludeBegin: true,\r\n            excludeEnd: true\r\n          },\r\n          {\r\n            className: \"meta\",\r\n            begin: VERSION\r\n          },\r\n          {\r\n            className: 'keyword',\r\n            begin: '[A-Z]+'\r\n          }\r\n        ],\r\n        starts: {\r\n          end: /\\b\\B/,\r\n          illegal: /\\S/,\r\n          contains: HEADERS_AND_BODY\r\n        }\r\n      },\r\n      // to allow headers to work even without a preamble\r\n      hljs.inherit(HEADER, {\r\n        relevance: 0\r\n      })\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = http;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AASA,aAAS,OAAO,IAAI;AAClB,UAAI,CAAC;AAAI,eAAO;AAChB,UAAI,OAAO,OAAO;AAAU,eAAO;AAEnC,aAAO,GAAG;AAAA,IACZ;AAMA,aAAS,UAAU,MAAM;AACvB,YAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE;AACjD,aAAO;AAAA,IACT;AAUA,aAAS,KAAK,MAAM;AAClB,YAAM,UAAU;AAChB,YAAM,cAAc;AACpB,YAAM,SAAS;AAAA,QACb,WAAW;AAAA,QACX,OAAO,OAAO,KAAK,aAAa,YAAY;AAAA,QAC5C,QAAQ;AAAA,UACN,UAAU;AAAA,YACR;AAAA,cACE,WAAW;AAAA,cACX,OAAO;AAAA,cACP,WAAW;AAAA,cACX,QAAQ;AAAA,gBACN,KAAK;AAAA,gBACL,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,YAAM,mBAAmB;AAAA,QACvB;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,QAAQ,EAAE,aAAa,CAAC,GAAG,gBAAgB,KAAK;AAAA,QAClD;AAAA,MACF;AAEA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAC,OAAO;AAAA,QACjB,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,UAER;AAAA,YACE,OAAO,SAAS,UAAU;AAAA,YAC1B,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,cACT;AAAA,cACA;AAAA,gBACE,WAAW;AAAA,gBAAU,OAAO;AAAA,cAC9B;AAAA,YACF;AAAA,YACA,QAAQ;AAAA,cACN,KAAK;AAAA,cACL,SAAS;AAAA,cACT,UAAU;AAAA,YACZ;AAAA,UACF;AAAA;AAAA,UAEA;AAAA,YACE,OAAO,sBAAsB,UAAU;AAAA,YACvC,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,cAAc;AAAA,gBACd,YAAY;AAAA,cACd;AAAA,cACA;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,cACT;AAAA,cACA;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,cACT;AAAA,YACF;AAAA,YACA,QAAQ;AAAA,cACN,KAAK;AAAA,cACL,SAAS;AAAA,cACT,UAAU;AAAA,YACZ;AAAA,UACF;AAAA;AAAA,UAEA,KAAK,QAAQ,QAAQ;AAAA,YACnB,WAAW;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
