{
  "version": 3,
  "sources": ["../../refractor/lang/jq.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = jq\r\njq.displayName = 'jq'\r\njq.aliases = []\r\nfunction jq(Prism) {\r\n  ;(function (Prism) {\r\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\r\n    var string = RegExp(\r\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\r\n        /__/g,\r\n        function () {\r\n          return interpolation\r\n        }\r\n      )\r\n    )\r\n    var stringInterpolation = {\r\n      interpolation: {\r\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\r\n        lookbehind: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\r\n            lookbehind: true,\r\n            inside: null // see below\r\n          },\r\n          punctuation: /^\\\\\\(|\\)$/\r\n        }\r\n      }\r\n    }\r\n    var jq = (Prism.languages.jq = {\r\n      comment: /#.*/,\r\n      property: {\r\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: stringInterpolation\r\n      },\r\n      string: {\r\n        pattern: string,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: stringInterpolation\r\n      },\r\n      function: {\r\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\r\n        lookbehind: true\r\n      },\r\n      variable: /\\B\\$\\w+/,\r\n      'property-literal': {\r\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\r\n        alias: 'property'\r\n      },\r\n      keyword:\r\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\r\n      operator: [\r\n        {\r\n          pattern: /\\|=?/,\r\n          alias: 'pipe'\r\n        },\r\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\r\n      ],\r\n      'c-style-function': {\r\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n        alias: 'function'\r\n      },\r\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\r\n      dot: {\r\n        pattern: /\\./,\r\n        alias: 'important'\r\n      }\r\n    })\r\n    stringInterpolation.interpolation.inside.content.inside = jq\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,OAAG,cAAc;AACjB,OAAG,UAAU,CAAC;AACd,aAAS,GAAG,OAAO;AACjB;AAAC,OAAC,SAAUA,QAAO;AACjB,YAAI,gBAAgB,8BAA8B;AAClD,YAAI,SAAS;AAAA,UACX,2CAA2C,OAAO;AAAA,YAChD;AAAA,YACA,WAAY;AACV,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AACA,YAAI,sBAAsB;AAAA,UACxB,eAAe;AAAA,YACb,SAAS,OAAO,0BAA0B,SAAS,aAAa;AAAA,YAChE,YAAY;AAAA,YACZ,QAAQ;AAAA,cACN,SAAS;AAAA,gBACP,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,QAAQ;AAAA;AAAA,cACV;AAAA,cACA,aAAa;AAAA,YACf;AAAA,UACF;AAAA,QACF;AACA,YAAIC,MAAMD,OAAM,UAAU,KAAK;AAAA,UAC7B,SAAS;AAAA,UACT,UAAU;AAAA,YACR,SAAS,OAAO,OAAO,SAAS,gBAAgB,MAAM;AAAA,YACtD,YAAY;AAAA,YACZ,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,UACA,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,UACA,UAAU;AAAA,YACR,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,UACA,UAAU;AAAA,UACV,oBAAoB;AAAA,YAClB,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA,SACE;AAAA,UACF,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,UAAU;AAAA,YACR;AAAA,cACE,SAAS;AAAA,cACT,OAAO;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,UACA,oBAAoB;AAAA,YAClB,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA,aAAa;AAAA,UACb,KAAK;AAAA,YACH,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,QACF;AACA,4BAAoB,cAAc,OAAO,QAAQ,SAASC;AAAA,MAC5D,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism", "jq"]
}
