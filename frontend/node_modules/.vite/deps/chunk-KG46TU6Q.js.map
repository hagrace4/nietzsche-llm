{
  "version": 3,
  "sources": ["../../refractor/lang/c.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = c\r\nc.displayName = 'c'\r\nc.aliases = []\r\nfunction c(Prism) {\r\n  Prism.languages.c = Prism.languages.extend('clike', {\r\n    comment: {\r\n      pattern:\r\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      // https://en.cppreference.com/w/c/language/string_literal\r\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    number:\r\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\r\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\r\n  })\r\n  Prism.languages.insertBefore('c', 'string', {\r\n    char: {\r\n      // https://en.cppreference.com/w/c/language/character_constant\r\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\r\n      greedy: true\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('c', 'string', {\r\n    macro: {\r\n      // allow for multiline macro definitions\r\n      // spaces after the # character compile fine with gcc\r\n      pattern:\r\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property',\r\n      inside: {\r\n        string: [\r\n          {\r\n            // highlight the path of the include statement as a string\r\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\r\n            lookbehind: true\r\n          },\r\n          Prism.languages.c['string']\r\n        ],\r\n        char: Prism.languages.c['char'],\r\n        comment: Prism.languages.c['comment'],\r\n        'macro-name': [\r\n          {\r\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\r\n            lookbehind: true\r\n          },\r\n          {\r\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\r\n            lookbehind: true,\r\n            alias: 'function'\r\n          }\r\n        ],\r\n        // highlight macro directives as keywords\r\n        directive: {\r\n          pattern: /^(#\\s*)[a-z]+/,\r\n          lookbehind: true,\r\n          alias: 'keyword'\r\n        },\r\n        'directive-hash': /^#/,\r\n        punctuation: /##|\\\\(?=[\\r\\n])/,\r\n        expression: {\r\n          pattern: /\\S[\\s\\S]*/,\r\n          inside: Prism.languages.c\r\n        }\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('c', 'function', {\r\n    // highlight predefined macros as constants\r\n    constant:\r\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\r\n  })\r\n  delete Prism.languages.c['boolean']\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,MAAE,cAAc;AAChB,MAAE,UAAU,CAAC;AACb,aAAS,EAAE,OAAO;AAChB,YAAM,UAAU,IAAI,MAAM,UAAU,OAAO,SAAS;AAAA,QAClD,SAAS;AAAA,UACP,SACE;AAAA,UACF,QAAQ;AAAA,QACV;AAAA,QACA,QAAQ;AAAA;AAAA,UAEN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,cAAc;AAAA,UACZ,SACE;AAAA,UACF,YAAY;AAAA,QACd;AAAA,QACA,SACE;AAAA,QACF,UAAU;AAAA,QACV,QACE;AAAA,QACF,UAAU;AAAA,MACZ,CAAC;AACD,YAAM,UAAU,aAAa,KAAK,UAAU;AAAA,QAC1C,MAAM;AAAA;AAAA,UAEJ,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,MACF,CAAC;AACD,YAAM,UAAU,aAAa,KAAK,UAAU;AAAA,QAC1C,OAAO;AAAA;AAAA;AAAA,UAGL,SACE;AAAA,UACF,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,QAAQ;AAAA,cACN;AAAA;AAAA,gBAEE,SAAS;AAAA,gBACT,YAAY;AAAA,cACd;AAAA,cACA,MAAM,UAAU,EAAE,QAAQ;AAAA,YAC5B;AAAA,YACA,MAAM,MAAM,UAAU,EAAE,MAAM;AAAA,YAC9B,SAAS,MAAM,UAAU,EAAE,SAAS;AAAA,YACpC,cAAc;AAAA,cACZ;AAAA,gBACE,SAAS;AAAA,gBACT,YAAY;AAAA,cACd;AAAA,cACA;AAAA,gBACE,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,OAAO;AAAA,cACT;AAAA,YACF;AAAA;AAAA,YAEA,WAAW;AAAA,cACT,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA,YACA,kBAAkB;AAAA,YAClB,aAAa;AAAA,YACb,YAAY;AAAA,cACV,SAAS;AAAA,cACT,QAAQ,MAAM,UAAU;AAAA,YAC1B;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AACD,YAAM,UAAU,aAAa,KAAK,YAAY;AAAA;AAAA,QAE5C,UACE;AAAA,MACJ,CAAC;AACD,aAAO,MAAM,UAAU,EAAE,SAAS;AAAA,IACpC;AAAA;AAAA;",
  "names": []
}
