{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/zephir.js"],
  "sourcesContent": ["/*\r\n Language: Zephir\r\n Description: Zephir, an open source, high-level language designed to ease the creation and maintainability of extensions for PHP with a focus on type and memory safety.\r\n Author: Oleg Efimov <efimovov@gmail.com>\r\n Website: https://zephir-lang.com/en\r\n Audit: 2020\r\n */\r\n\r\n/** @type LanguageFn */\r\nfunction zephir(hljs) {\r\n  const STRING = {\r\n    className: 'string',\r\n    contains: [ hljs.BACKSLASH_ESCAPE ],\r\n    variants: [\r\n      hljs.inherit(hljs.APOS_STRING_MODE, {\r\n        illegal: null\r\n      }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        illegal: null\r\n      })\r\n    ]\r\n  };\r\n  const TITLE_MODE = hljs.UNDERSCORE_TITLE_MODE;\r\n  const NUMBER = {\r\n    variants: [\r\n      hljs.BINARY_NUMBER_MODE,\r\n      hljs.C_NUMBER_MODE\r\n    ]\r\n  };\r\n  const KEYWORDS =\r\n    // classes and objects\r\n    'namespace class interface use extends ' +\r\n    'function return ' +\r\n    'abstract final public protected private static deprecated ' +\r\n    // error handling\r\n    'throw try catch Exception ' +\r\n    // keyword-ish things their website does NOT seem to highlight (in their own snippets)\r\n    // 'typeof fetch in ' +\r\n    // operators/helpers\r\n    'echo empty isset instanceof unset ' +\r\n    // assignment/variables\r\n    'let var new const self ' +\r\n    // control\r\n    'require ' +\r\n    'if else elseif switch case default ' +\r\n    'do while loop for continue break ' +\r\n    'likely unlikely ' +\r\n    // magic constants\r\n    // https://github.com/phalcon/zephir/blob/master/Library/Expression/Constants.php\r\n    '__LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ ' +\r\n    // types - https://docs.zephir-lang.com/0.12/en/types\r\n    'array boolean float double integer object resource string ' +\r\n    'char long unsigned bool int uint ulong uchar ' +\r\n    // built-ins\r\n    'true false null undefined';\r\n\r\n  return {\r\n    name: 'Zephir',\r\n    aliases: [ 'zep' ],\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.COMMENT(\r\n        /\\/\\*/,\r\n        /\\*\\//,\r\n        {\r\n          contains: [\r\n            {\r\n              className: 'doctag',\r\n              begin: /@[A-Za-z]+/\r\n            }\r\n          ]\r\n        }\r\n      ),\r\n      {\r\n        className: 'string',\r\n        begin: /<<<['\"]?\\w+['\"]?$/,\r\n        end: /^\\w+;/,\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        // swallow composed identifiers to avoid parsing them as keywords\r\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\r\n      },\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'function fn',\r\n        end: /[;{]/,\r\n        excludeEnd: true,\r\n        illegal: /\\$|\\[|%/,\r\n        contains: [\r\n          TITLE_MODE,\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            keywords: KEYWORDS,\r\n            contains: [\r\n              'self',\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRING,\r\n              NUMBER\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'class interface',\r\n        end: /\\{/,\r\n        excludeEnd: true,\r\n        illegal: /[:($\"]/,\r\n        contains: [\r\n          {\r\n            beginKeywords: 'extends implements'\r\n          },\r\n          TITLE_MODE\r\n        ]\r\n      },\r\n      {\r\n        beginKeywords: 'namespace',\r\n        end: /;/,\r\n        illegal: /[.']/,\r\n        contains: [ TITLE_MODE ]\r\n      },\r\n      {\r\n        beginKeywords: 'use',\r\n        end: /;/,\r\n        contains: [ TITLE_MODE ]\r\n      },\r\n      {\r\n        begin: /=>/ // No markup, just a relevance booster\r\n      },\r\n      STRING,\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = zephir;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AASA,aAAS,OAAO,MAAM;AACpB,YAAM,SAAS;AAAA,QACb,WAAW;AAAA,QACX,UAAU,CAAE,KAAK,gBAAiB;AAAA,QAClC,UAAU;AAAA,UACR,KAAK,QAAQ,KAAK,kBAAkB;AAAA,YAClC,SAAS;AAAA,UACX,CAAC;AAAA,UACD,KAAK,QAAQ,KAAK,mBAAmB;AAAA,YACnC,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAAA,MACF;AACA,YAAM,aAAa,KAAK;AACxB,YAAM,SAAS;AAAA,QACb,UAAU;AAAA,UACR,KAAK;AAAA,UACL,KAAK;AAAA,QACP;AAAA,MACF;AACA,YAAM;AAAA;AAAA,QAEJ;AAAA;AAyBF,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAE,KAAM;AAAA,QACjB,UAAU;AAAA,QACV,UAAU;AAAA,UACR,KAAK;AAAA,UACL,KAAK;AAAA,YACH;AAAA,YACA;AAAA,YACA;AAAA,cACE,UAAU;AAAA,gBACR;AAAA,kBACE,WAAW;AAAA,kBACX,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU,CAAE,KAAK,gBAAiB;AAAA,UACpC;AAAA,UACA;AAAA;AAAA,YAEE,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,KAAK;AAAA,YACL,YAAY;AAAA,YACZ,SAAS;AAAA,YACT,UAAU;AAAA,cACR;AAAA,cACA;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,UAAU;AAAA,gBACV,UAAU;AAAA,kBACR;AAAA,kBACA,KAAK;AAAA,kBACL;AAAA,kBACA;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,KAAK;AAAA,YACL,YAAY;AAAA,YACZ,SAAS;AAAA,YACT,UAAU;AAAA,cACR;AAAA,gBACE,eAAe;AAAA,cACjB;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,eAAe;AAAA,YACf,KAAK;AAAA,YACL,SAAS;AAAA,YACT,UAAU,CAAE,UAAW;AAAA,UACzB;AAAA,UACA;AAAA,YACE,eAAe;AAAA,YACf,KAAK;AAAA,YACL,UAAU,CAAE,UAAW;AAAA,UACzB;AAAA,UACA;AAAA,YACE,OAAO;AAAA;AAAA,UACT;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
