{
  "version": 3,
  "sources": ["../../refractor/lang/python.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = python\r\npython.displayName = 'python'\r\npython.aliases = ['py']\r\nfunction python(Prism) {\r\n  Prism.languages.python = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])#.*/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'string-interpolation': {\r\n      pattern:\r\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\r\n          pattern:\r\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'format-spec': {\r\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\r\n              lookbehind: true\r\n            },\r\n            'conversion-option': {\r\n              pattern: /![sra](?=[:}]$)/,\r\n              alias: 'punctuation'\r\n            },\r\n            rest: null\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    'triple-quoted-string': {\r\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    string: {\r\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\r\n      greedy: true\r\n    },\r\n    function: {\r\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\r\n      lookbehind: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(\\bclass\\s+)\\w+/i,\r\n      lookbehind: true\r\n    },\r\n    decorator: {\r\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\r\n      lookbehind: true,\r\n      alias: ['annotation', 'punctuation'],\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\r\n    builtin:\r\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\r\n    boolean: /\\b(?:False|None|True)\\b/,\r\n    number:\r\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\r\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n  Prism.languages.python['string-interpolation'].inside[\r\n    'interpolation'\r\n  ].inside.rest = Prism.languages.python\r\n  Prism.languages.py = Prism.languages.python\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC,IAAI;AACtB,aAAS,OAAO,OAAO;AACrB,YAAM,UAAU,SAAS;AAAA,QACvB,SAAS;AAAA,UACP,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACV;AAAA,QACA,wBAAwB;AAAA,UACtB,SACE;AAAA,UACF,QAAQ;AAAA,UACR,QAAQ;AAAA,YACN,eAAe;AAAA;AAAA,cAEb,SACE;AAAA,cACF,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,eAAe;AAAA,kBACb,SAAS;AAAA,kBACT,YAAY;AAAA,gBACd;AAAA,gBACA,qBAAqB;AAAA,kBACnB,SAAS;AAAA,kBACT,OAAO;AAAA,gBACT;AAAA,gBACA,MAAM;AAAA,cACR;AAAA,YACF;AAAA,YACA,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,UAAU;AAAA,UACR,SAAS;AAAA,UACT,YAAY;AAAA,QACd;AAAA,QACA,cAAc;AAAA,UACZ,SAAS;AAAA,UACT,YAAY;AAAA,QACd;AAAA,QACA,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO,CAAC,cAAc,aAAa;AAAA,UACnC,QAAQ;AAAA,YACN,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,SACE;AAAA,QACF,SACE;AAAA,QACF,SAAS;AAAA,QACT,QACE;AAAA,QACF,UAAU;AAAA,QACV,aAAa;AAAA,MACf;AACA,YAAM,UAAU,OAAO,sBAAsB,EAAE,OAC7C,eACF,EAAE,OAAO,OAAO,MAAM,UAAU;AAChC,YAAM,UAAU,KAAK,MAAM,UAAU;AAAA,IACvC;AAAA;AAAA;",
  "names": []
}
