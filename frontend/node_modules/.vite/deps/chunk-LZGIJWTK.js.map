{
  "version": 3,
  "sources": ["../../refractor/lang/batch.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = batch\r\nbatch.displayName = 'batch'\r\nbatch.aliases = []\r\nfunction batch(Prism) {\r\n  ;(function (Prism) {\r\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\r\n    var parameter = {\r\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\r\n      alias: 'attr-name',\r\n      inside: {\r\n        punctuation: /:/\r\n      }\r\n    }\r\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\r\n    var number = /(?:\\b|-)\\d+\\b/\r\n    Prism.languages.batch = {\r\n      comment: [\r\n        /^::.*/m,\r\n        {\r\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      label: {\r\n        pattern: /^:.*/m,\r\n        alias: 'property'\r\n      },\r\n      command: [\r\n        {\r\n          // FOR command\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: variable,\r\n            number: number,\r\n            punctuation: /[()',]/\r\n          }\r\n        },\r\n        {\r\n          // IF command\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword:\r\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: variable,\r\n            number: number,\r\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\r\n          }\r\n        },\r\n        {\r\n          // ELSE command\r\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^else\\b/i\r\n          }\r\n        },\r\n        {\r\n          // SET command\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^set\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\r\n            number: number,\r\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\r\n            punctuation: /[()',]/\r\n          }\r\n        },\r\n        {\r\n          // Other commands\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^\\w+\\b/,\r\n            string: string,\r\n            parameter: parameter,\r\n            label: {\r\n              pattern: /(^\\s*):\\S+/m,\r\n              lookbehind: true,\r\n              alias: 'property'\r\n            },\r\n            variable: variable,\r\n            number: number,\r\n            operator: /\\^/\r\n          }\r\n        }\r\n      ],\r\n      operator: /[&@]/,\r\n      punctuation: /[()']/\r\n    }\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,UAAM,cAAc;AACpB,UAAM,UAAU,CAAC;AACjB,aAAS,MAAM,OAAO;AACpB;AAAC,OAAC,SAAUA,QAAO;AACjB,YAAI,WAAW;AACf,YAAI,YAAY;AAAA,UACd,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,aAAa;AAAA,UACf;AAAA,QACF;AACA,YAAI,SAAS;AACb,YAAI,SAAS;AACb,QAAAA,OAAM,UAAU,QAAQ;AAAA,UACtB,SAAS;AAAA,YACP;AAAA,YACA;AAAA,cACE,SAAS;AAAA,cACT,YAAY;AAAA,YACd;AAAA,UACF;AAAA,UACA,OAAO;AAAA,YACL,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA,SAAS;AAAA,YACP;AAAA;AAAA,cAEE,SACE;AAAA,cACF,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,SAAS;AAAA,gBACT;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,aAAa;AAAA,cACf;AAAA,YACF;AAAA,YACA;AAAA;AAAA,cAEE,SACE;AAAA,cACF,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,SACE;AAAA,gBACF;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,UAAU;AAAA,cACZ;AAAA,YACF;AAAA,YACA;AAAA;AAAA,cAEE,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,SAAS;AAAA,cACX;AAAA,YACF;AAAA,YACA;AAAA;AAAA,cAEE,SACE;AAAA,cACF,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,SAAS;AAAA,gBACT;AAAA,gBACA;AAAA,gBACA,UAAU,CAAC,UAAU,iCAAiC;AAAA,gBACtD;AAAA,gBACA,UAAU;AAAA,gBACV,aAAa;AAAA,cACf;AAAA,YACF;AAAA,YACA;AAAA;AAAA,cAEE,SACE;AAAA,cACF,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,SAAS;AAAA,gBACT;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,kBACL,SAAS;AAAA,kBACT,YAAY;AAAA,kBACZ,OAAO;AAAA,gBACT;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,UAAU;AAAA,cACZ;AAAA,YACF;AAAA,UACF;AAAA,UACA,UAAU;AAAA,UACV,aAAa;AAAA,QACf;AAAA,MACF,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
