{
  "version": 3,
  "sources": ["../../refractor/lang/ada.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = ada\r\nada.displayName = 'ada'\r\nada.aliases = []\r\nfunction ada(Prism) {\r\n  Prism.languages.ada = {\r\n    comment: /--.*/,\r\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\r\n    number: [\r\n      {\r\n        pattern:\r\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\r\n      },\r\n      {\r\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\r\n      }\r\n    ],\r\n    'attr-name': /\\b'\\w+/,\r\n    keyword:\r\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\r\n    punctuation: /\\.\\.?|[,;():]/,\r\n    char: /'.'/,\r\n    variable: /\\b[a-z](?:\\w)*\\b/i\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,QAAI,cAAc;AAClB,QAAI,UAAU,CAAC;AACf,aAAS,IAAI,OAAO;AAClB,YAAM,UAAU,MAAM;AAAA,QACpB,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN;AAAA,YACE,SACE;AAAA,UACJ;AAAA,UACA;AAAA,YACE,SAAS;AAAA,UACX;AAAA,QACF;AAAA,QACA,aAAa;AAAA,QACb,SACE;AAAA,QACF,SAAS;AAAA,QACT,UAAU;AAAA,QACV,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
