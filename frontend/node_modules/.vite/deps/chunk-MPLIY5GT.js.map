{
  "version": 3,
  "sources": ["../../refractor/lang/birb.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = birb\r\nbirb.displayName = 'birb'\r\nbirb.aliases = []\r\nfunction birb(Prism) {\r\n  Prism.languages.birb = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\r\n      greedy: true\r\n    },\r\n    'class-name': [\r\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\r\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\r\n    ],\r\n    keyword:\r\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\r\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\r\n    variable: /\\b[a-z_]\\w*\\b/\r\n  })\r\n  Prism.languages.insertBefore('birb', 'function', {\r\n    metadata: {\r\n      pattern: /<\\w+>/,\r\n      greedy: true,\r\n      alias: 'symbol'\r\n    }\r\n  })\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,SAAK,cAAc;AACnB,SAAK,UAAU,CAAC;AAChB,aAAS,KAAK,OAAO;AACnB,YAAM,UAAU,OAAO,MAAM,UAAU,OAAO,SAAS;AAAA,QACrD,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,cAAc;AAAA,UACZ;AAAA;AAAA,UACA;AAAA,QACF;AAAA,QACA,SACE;AAAA,QACF,UAAU;AAAA,QACV,UAAU;AAAA,MACZ,CAAC;AACD,YAAM,UAAU,aAAa,QAAQ,YAAY;AAAA,QAC/C,UAAU;AAAA,UACR,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;",
  "names": []
}
