{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/rust.js"],
  "sourcesContent": ["/*\r\nLanguage: Rust\r\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\r\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\r\nWebsite: https://www.rust-lang.org\r\nCategory: common, system\r\n*/\r\n\r\nfunction rust(hljs) {\r\n  const NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\r\n  const KEYWORDS =\r\n    'abstract as async await become box break const continue crate do dyn ' +\r\n    'else enum extern false final fn for if impl in let loop macro match mod ' +\r\n    'move mut override priv pub ref return self Self static struct super ' +\r\n    'trait true try type typeof unsafe unsized use virtual where while yield';\r\n  const BUILTINS =\r\n    // functions\r\n    'drop ' +\r\n    // types\r\n    'i8 i16 i32 i64 i128 isize ' +\r\n    'u8 u16 u32 u64 u128 usize ' +\r\n    'f32 f64 ' +\r\n    'str char bool ' +\r\n    'Box Option Result String Vec ' +\r\n    // traits\r\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\r\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\r\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\r\n    'SliceConcatExt ToString ' +\r\n    // macros\r\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\r\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\r\n    'include_bin! include_str! line! local_data_key! module_path! ' +\r\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\r\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\r\n  return {\r\n    name: 'Rust',\r\n    aliases: [ 'rs' ],\r\n    keywords: {\r\n      $pattern: hljs.IDENT_RE + '!?',\r\n      keyword:\r\n        KEYWORDS,\r\n      literal:\r\n        'true false Some None Ok Err',\r\n      built_in:\r\n        BUILTINS\r\n    },\r\n    illegal: '</',\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\r\n        contains: [ 'self' ]\r\n      }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        begin: /b?\"/,\r\n        illegal: null\r\n      }),\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          {\r\n            begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\r\n          },\r\n          {\r\n            begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\r\n      },\r\n      {\r\n        className: 'number',\r\n        variants: [\r\n          {\r\n            begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\r\n          },\r\n          {\r\n            begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\r\n          },\r\n          {\r\n            begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\r\n          },\r\n          {\r\n            begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\r\n                   NUM_SUFFIX\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'fn',\r\n        end: '(\\\\(|<)',\r\n        excludeEnd: true,\r\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\r\n      },\r\n      {\r\n        className: 'meta',\r\n        begin: '#!?\\\\[',\r\n        end: '\\\\]',\r\n        contains: [\r\n          {\r\n            className: 'meta-string',\r\n            begin: /\"/,\r\n            end: /\"/\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'type',\r\n        end: ';',\r\n        contains: [\r\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\r\n            endsParent: true\r\n          })\r\n        ],\r\n        illegal: '\\\\S'\r\n      },\r\n      {\r\n        className: 'class',\r\n        beginKeywords: 'trait enum struct union',\r\n        end: /\\{/,\r\n        contains: [\r\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\r\n            endsParent: true\r\n          })\r\n        ],\r\n        illegal: '[\\\\w\\\\d]'\r\n      },\r\n      {\r\n        begin: hljs.IDENT_RE + '::',\r\n        keywords: {\r\n          built_in: BUILTINS\r\n        }\r\n      },\r\n      {\r\n        begin: '->'\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = rust;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,aAAS,KAAK,MAAM;AAClB,YAAM,aAAa;AACnB,YAAM,WACJ;AAIF,YAAM;AAAA;AAAA,QAEJ;AAAA;AAkBF,aAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS,CAAE,IAAK;AAAA,QAChB,UAAU;AAAA,UACR,UAAU,KAAK,WAAW;AAAA,UAC1B,SACE;AAAA,UACF,SACE;AAAA,UACF,UACE;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,UACR,KAAK;AAAA,UACL,KAAK,QAAQ,QAAQ,QAAQ;AAAA,YAC3B,UAAU,CAAE,MAAO;AAAA,UACrB,CAAC;AAAA,UACD,KAAK,QAAQ,KAAK,mBAAmB;AAAA,YACnC,OAAO;AAAA,YACP,SAAS;AAAA,UACX,CAAC;AAAA,UACD;AAAA,YACE,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,cACA;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,UAAU;AAAA,cACR;AAAA,gBACE,OAAO,kBAAkB;AAAA,cAC3B;AAAA,cACA;AAAA,gBACE,OAAO,mBAAmB;AAAA,cAC5B;AAAA,cACA;AAAA,gBACE,OAAO,yBAAyB;AAAA,cAClC;AAAA,cACA;AAAA,gBACE,OAAO,oDACA;AAAA,cACT;AAAA,YACF;AAAA,YACA,WAAW;AAAA,UACb;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,KAAK;AAAA,YACL,YAAY;AAAA,YACZ,UAAU,CAAE,KAAK,qBAAsB;AAAA,UACzC;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,UAAU;AAAA,cACR;AAAA,gBACE,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,KAAK;AAAA,cACP;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,KAAK;AAAA,YACL,UAAU;AAAA,cACR,KAAK,QAAQ,KAAK,uBAAuB;AAAA,gBACvC,YAAY;AAAA,cACd,CAAC;AAAA,YACH;AAAA,YACA,SAAS;AAAA,UACX;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,KAAK;AAAA,YACL,UAAU;AAAA,cACR,KAAK,QAAQ,KAAK,uBAAuB;AAAA,gBACvC,YAAY;AAAA,cACd,CAAC;AAAA,YACH;AAAA,YACA,SAAS;AAAA,UACX;AAAA,UACA;AAAA,YACE,OAAO,KAAK,WAAW;AAAA,YACvB,UAAU;AAAA,cACR,UAAU;AAAA,YACZ;AAAA,UACF;AAAA,UACA;AAAA,YACE,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
