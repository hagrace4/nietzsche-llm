{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/asciidoc.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: AsciiDoc\r\nRequires: xml.js\r\nAuthor: Dan Allen <dan.j.allen@gmail.com>\r\nWebsite: http://asciidoc.org\r\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\r\nCategory: markup\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction asciidoc(hljs) {\r\n  const HORIZONTAL_RULE = {\r\n    begin: '^\\'{3,}[ \\\\t]*$',\r\n    relevance: 10\r\n  };\r\n  const ESCAPED_FORMATTING = [\r\n    // escaped constrained formatting marks (i.e., \\* \\_ or \\`)\r\n    {\r\n      begin: /\\\\[*_`]/\r\n    },\r\n    // escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\r\n    // must ignore until the next formatting marks\r\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\r\n    {\r\n      begin: /\\\\\\\\\\*{2}[^\\n]*?\\*{2}/\r\n    },\r\n    {\r\n      begin: /\\\\\\\\_{2}[^\\n]*_{2}/\r\n    },\r\n    {\r\n      begin: /\\\\\\\\`{2}[^\\n]*`{2}/\r\n    },\r\n    // guard: constrained formatting mark may not be preceded by \":\", \";\" or\r\n    // \"}\". match these so the constrained rule doesn't see them\r\n    {\r\n      begin: /[:;}][*_`](?![*_`])/\r\n    }\r\n  ];\r\n  const STRONG = [\r\n    // inline unconstrained strong (single line)\r\n    {\r\n      className: 'strong',\r\n      begin: /\\*{2}([^\\n]+?)\\*{2}/\r\n    },\r\n    // inline unconstrained strong (multi-line)\r\n    {\r\n      className: 'strong',\r\n      begin: concat(\r\n        /\\*\\*/,\r\n        /((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,\r\n        /(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,\r\n        /\\*\\*/\r\n      ),\r\n      relevance: 0\r\n    },\r\n    // inline constrained strong (single line)\r\n    {\r\n      className: 'strong',\r\n      // must not precede or follow a word character\r\n      begin: /\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/\r\n    },\r\n    // inline constrained strong (multi-line)\r\n    {\r\n      className: 'strong',\r\n      // must not precede or follow a word character\r\n      begin: /\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/\r\n    }\r\n  ];\r\n  const EMPHASIS = [\r\n    // inline unconstrained emphasis (single line)\r\n    {\r\n      className: 'emphasis',\r\n      begin: /_{2}([^\\n]+?)_{2}/\r\n    },\r\n    // inline unconstrained emphasis (multi-line)\r\n    {\r\n      className: 'emphasis',\r\n      begin: concat(\r\n        /__/,\r\n        /((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,\r\n        /(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,\r\n        /__/\r\n      ),\r\n      relevance: 0\r\n    },\r\n    // inline constrained emphasis (single line)\r\n    {\r\n      className: 'emphasis',\r\n      // must not precede or follow a word character\r\n      begin: /\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/\r\n    },\r\n    // inline constrained emphasis (multi-line)\r\n    {\r\n      className: 'emphasis',\r\n      // must not precede or follow a word character\r\n      begin: /_[^\\s]([^\\n]+\\n)+([^\\n]+)_/\r\n    },\r\n    // inline constrained emphasis using single quote (legacy)\r\n    {\r\n      className: 'emphasis',\r\n      // must not follow a word character or be followed by a single quote or space\r\n      begin: '\\\\B\\'(?![\\'\\\\s])',\r\n      end: '(\\\\n{2}|\\')',\r\n      // allow escaped single quote followed by word char\r\n      contains: [{\r\n        begin: '\\\\\\\\\\'\\\\w',\r\n        relevance: 0\r\n      }],\r\n      relevance: 0\r\n    }\r\n  ];\r\n  const ADMONITION = {\r\n    className: 'symbol',\r\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\r\n    relevance: 10\r\n  };\r\n  const BULLET_LIST = {\r\n    className: 'bullet',\r\n    begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\r\n  };\r\n\r\n  return {\r\n    name: 'AsciiDoc',\r\n    aliases: ['adoc'],\r\n    contains: [\r\n      // block comment\r\n      hljs.COMMENT(\r\n        '^/{4,}\\\\n',\r\n        '\\\\n/{4,}$',\r\n        // can also be done as...\r\n        // '^/{4,}$',\r\n        // '^/{4,}$',\r\n        {\r\n          relevance: 10\r\n        }\r\n      ),\r\n      // line comment\r\n      hljs.COMMENT(\r\n        '^//',\r\n        '$',\r\n        {\r\n          relevance: 0\r\n        }\r\n      ),\r\n      // title\r\n      {\r\n        className: 'title',\r\n        begin: '^\\\\.\\\\w.*$'\r\n      },\r\n      // example, admonition & sidebar blocks\r\n      {\r\n        begin: '^[=\\\\*]{4,}\\\\n',\r\n        end: '\\\\n^[=\\\\*]{4,}$',\r\n        relevance: 10\r\n      },\r\n      // headings\r\n      {\r\n        className: 'section',\r\n        relevance: 10,\r\n        variants: [\r\n          {\r\n            begin: '^(={1,6})[ \\t].+?([ \\t]\\\\1)?$'\r\n          },\r\n          {\r\n            begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\r\n          }\r\n        ]\r\n      },\r\n      // document attributes\r\n      {\r\n        className: 'meta',\r\n        begin: '^:.+?:',\r\n        end: '\\\\s',\r\n        excludeEnd: true,\r\n        relevance: 10\r\n      },\r\n      // block attributes\r\n      {\r\n        className: 'meta',\r\n        begin: '^\\\\[.+?\\\\]$',\r\n        relevance: 0\r\n      },\r\n      // quoteblocks\r\n      {\r\n        className: 'quote',\r\n        begin: '^_{4,}\\\\n',\r\n        end: '\\\\n_{4,}$',\r\n        relevance: 10\r\n      },\r\n      // listing and literal blocks\r\n      {\r\n        className: 'code',\r\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\r\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\r\n        relevance: 10\r\n      },\r\n      // passthrough blocks\r\n      {\r\n        begin: '^\\\\+{4,}\\\\n',\r\n        end: '\\\\n\\\\+{4,}$',\r\n        contains: [{\r\n          begin: '<',\r\n          end: '>',\r\n          subLanguage: 'xml',\r\n          relevance: 0\r\n        }],\r\n        relevance: 10\r\n      },\r\n\r\n      BULLET_LIST,\r\n      ADMONITION,\r\n      ...ESCAPED_FORMATTING,\r\n      ...STRONG,\r\n      ...EMPHASIS,\r\n\r\n      // inline smart quotes\r\n      {\r\n        className: 'string',\r\n        variants: [\r\n          {\r\n            begin: \"``.+?''\"\r\n          },\r\n          {\r\n            begin: \"`.+?'\"\r\n          }\r\n        ]\r\n      },\r\n      // inline unconstrained emphasis\r\n      {\r\n        className: 'code',\r\n        begin: /`{2}/,\r\n        end: /(\\n{2}|`{2})/\r\n      },\r\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\r\n      {\r\n        className: 'code',\r\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\r\n        relevance: 0\r\n      },\r\n      // indented literal block\r\n      {\r\n        className: 'code',\r\n        begin: '^[ \\\\t]',\r\n        end: '$',\r\n        relevance: 0\r\n      },\r\n      HORIZONTAL_RULE,\r\n      // images and links\r\n      {\r\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\r\n        returnBegin: true,\r\n        contains: [\r\n          {\r\n            begin: '(link|image:?):',\r\n            relevance: 0\r\n          },\r\n          {\r\n            className: 'link',\r\n            begin: '\\\\w',\r\n            end: '[^\\\\[]+',\r\n            relevance: 0\r\n          },\r\n          {\r\n            className: 'string',\r\n            begin: '\\\\[',\r\n            end: '\\\\]',\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            relevance: 0\r\n          }\r\n        ],\r\n        relevance: 10\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = asciidoc;\r\n"],
  "mappings": "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",
  "names": []
}
