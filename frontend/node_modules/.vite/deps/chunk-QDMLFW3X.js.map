{
  "version": 3,
  "sources": ["../../refractor/lang/chaiscript.js"],
  "sourcesContent": ["'use strict'\r\nvar refractorCpp = require('./cpp.js')\r\nmodule.exports = chaiscript\r\nchaiscript.displayName = 'chaiscript'\r\nchaiscript.aliases = []\r\nfunction chaiscript(Prism) {\r\n  Prism.register(refractorCpp)\r\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'class-name': [\r\n      {\r\n        // e.g. class Rectangle { ... }\r\n        pattern: /(\\bclass\\s+)\\w+/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\r\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    keyword:\r\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\r\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\r\n    operator:\r\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\r\n  })\r\n  Prism.languages.insertBefore('chaiscript', 'operator', {\r\n    'parameter-type': {\r\n      // e.g. def foo(int x, Vector y) {...}\r\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\r\n      lookbehind: true,\r\n      alias: 'class-name'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('chaiscript', 'string', {\r\n    'string-interpolation': {\r\n      pattern:\r\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'interpolation-expression': {\r\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\r\n              lookbehind: true,\r\n              inside: Prism.languages.chaiscript\r\n            },\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{|\\}$/,\r\n              alias: 'punctuation'\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n}\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,eAAe;AACnB,WAAO,UAAU;AACjB,eAAW,cAAc;AACzB,eAAW,UAAU,CAAC;AACtB,aAAS,WAAW,OAAO;AACzB,YAAM,SAAS,YAAY;AAC3B,YAAM,UAAU,aAAa,MAAM,UAAU,OAAO,SAAS;AAAA,QAC3D,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACV;AAAA,QACA,cAAc;AAAA,UACZ;AAAA;AAAA,YAEE,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,UACA;AAAA;AAAA,YAEE,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,SACE;AAAA,QACF,QAAQ,CAAC,MAAM,UAAU,IAAI,QAAQ,sBAAsB;AAAA,QAC3D,UACE;AAAA,MACJ,CAAC;AACD,YAAM,UAAU,aAAa,cAAc,YAAY;AAAA,QACrD,kBAAkB;AAAA;AAAA,UAEhB,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AACD,YAAM,UAAU,aAAa,cAAc,UAAU;AAAA,QACnD,wBAAwB;AAAA,UACtB,SACE;AAAA,UACF,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,QAAQ;AAAA,YACN,eAAe;AAAA,cACb,SACE;AAAA,cACF,YAAY;AAAA,cACZ,QAAQ;AAAA,gBACN,4BAA4B;AAAA,kBAC1B,SAAS;AAAA,kBACT,YAAY;AAAA,kBACZ,QAAQ,MAAM,UAAU;AAAA,gBAC1B;AAAA,gBACA,6BAA6B;AAAA,kBAC3B,SAAS;AAAA,kBACT,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,YACA,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;",
  "names": []
}
