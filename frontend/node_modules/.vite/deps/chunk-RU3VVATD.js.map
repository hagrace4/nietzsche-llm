{
  "version": 3,
  "sources": ["../../refractor/lang/purebasic.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = purebasic\r\npurebasic.displayName = 'purebasic'\r\npurebasic.aliases = []\r\nfunction purebasic(Prism) {\r\n  /*\r\nOriginal Code by Bas Groothedde\r\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\r\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\r\nslightly changed to pass all tests\r\n*/\r\n  // PureBasic support, steal stuff from ansi-c\r\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\r\n    comment: /;.*/,\r\n    keyword:\r\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\r\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\r\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\r\n    operator:\r\n      /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\r\n  })\r\n  Prism.languages.insertBefore('purebasic', 'keyword', {\r\n    tag: /#\\w+\\$?/,\r\n    asm: {\r\n      pattern: /(^[\\t ]*)!.*/m,\r\n      lookbehind: true,\r\n      alias: 'tag',\r\n      inside: {\r\n        comment: /;.*/,\r\n        string: {\r\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n          greedy: true\r\n        },\r\n        // Anonymous label references, i.e.: jmp @b\r\n        'label-reference-anonymous': {\r\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\r\n          lookbehind: true,\r\n          alias: 'fasm-label'\r\n        },\r\n        // Named label reference, i.e.: jne label1\r\n        'label-reference-addressed': {\r\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\r\n          lookbehind: true,\r\n          alias: 'fasm-label'\r\n        },\r\n        keyword: [\r\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\r\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\r\n        ],\r\n        function: {\r\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\r\n          lookbehind: true\r\n        },\r\n        'function-inline': {\r\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\r\n          lookbehind: true,\r\n          alias: 'function'\r\n        },\r\n        label: {\r\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\r\n          lookbehind: true,\r\n          alias: 'fasm-label'\r\n        },\r\n        register:\r\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\r\n        number:\r\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\r\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\r\n      }\r\n    }\r\n  })\r\n  delete Prism.languages.purebasic['class-name']\r\n  delete Prism.languages.purebasic['boolean']\r\n  Prism.languages.pbfasm = Prism.languages['purebasic']\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,cAAU,cAAc;AACxB,cAAU,UAAU,CAAC;AACrB,aAAS,UAAU,OAAO;AAQxB,YAAM,UAAU,YAAY,MAAM,UAAU,OAAO,SAAS;AAAA,QAC1D,SAAS;AAAA,QACT,SACE;AAAA,QACF,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UACE;AAAA,MACJ,CAAC;AACD,YAAM,UAAU,aAAa,aAAa,WAAW;AAAA,QACnD,KAAK;AAAA,QACL,KAAK;AAAA,UACH,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,SAAS;AAAA,cACT,QAAQ;AAAA,YACV;AAAA;AAAA,YAEA,6BAA6B;AAAA,cAC3B,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA;AAAA,YAEA,6BAA6B;AAAA,cAC3B,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA,YACA,SAAS;AAAA,cACP;AAAA,cACA;AAAA,YACF;AAAA,YACA,UAAU;AAAA,cACR,SAAS;AAAA,cACT,YAAY;AAAA,YACd;AAAA,YACA,mBAAmB;AAAA,cACjB,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA,YACA,OAAO;AAAA,cACL,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA,YACA,UACE;AAAA,YACF,QACE;AAAA,YACF,UAAU;AAAA,UACZ;AAAA,QACF;AAAA,MACF,CAAC;AACD,aAAO,MAAM,UAAU,UAAU,YAAY;AAC7C,aAAO,MAAM,UAAU,UAAU,SAAS;AAC1C,YAAM,UAAU,SAAS,MAAM,UAAU,WAAW;AAAA,IACtD;AAAA;AAAA;",
  "names": []
}
