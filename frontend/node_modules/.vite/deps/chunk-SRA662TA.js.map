{
  "version": 3,
  "sources": ["../../refractor/lang/xeora.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = xeora\r\nxeora.displayName = 'xeora'\r\nxeora.aliases = ['xeoracube']\r\nfunction xeora(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.xeora = Prism.languages.extend('markup', {\r\n      constant: {\r\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /\\$/\r\n          }\r\n        }\r\n      },\r\n      variable: {\r\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[$.]/\r\n          },\r\n          operator: {\r\n            pattern: /#+|[-+*~=^@]/\r\n          }\r\n        }\r\n      },\r\n      'function-inline': {\r\n        pattern:\r\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\r\n        inside: {\r\n          variable: {\r\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\r\n            inside: {\r\n              punctuation: {\r\n                pattern: /[,.|]/\r\n              },\r\n              operator: {\r\n                pattern: /#+|[-+*~=^@]/\r\n              }\r\n            }\r\n          },\r\n          punctuation: {\r\n            pattern: /\\$\\w:|[$:?.,|]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'function-block': {\r\n        pattern:\r\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[$:{}?.,|]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-inline': {\r\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\r\n            inside: {\r\n              tag: {\r\n                pattern: /#\\d/\r\n              }\r\n            }\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-block-open': {\r\n        pattern:\r\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\r\n            inside: {\r\n              tag: {\r\n                pattern: /#\\d/\r\n              }\r\n            }\r\n          },\r\n          attribute: {\r\n            pattern: /![A-Z]+$/,\r\n            inside: {\r\n              punctuation: {\r\n                pattern: /!/\r\n              }\r\n            },\r\n            alias: 'keyword'\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-block-separator': {\r\n        pattern: /\\}:[-\\w.]+:\\{/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[:{}]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-block-close': {\r\n        pattern: /\\}:[-\\w.]+\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[:{}$]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'punctuation',\r\n      {\r\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\r\n      },\r\n      Prism.languages.xeora['function-block']\r\n    )\r\n    Prism.languages.xeoracube = Prism.languages.xeora\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,UAAM,cAAc;AACpB,UAAM,UAAU,CAAC,WAAW;AAC5B,aAAS,MAAM,OAAO;AACpB;AAAC,OAAC,SAAUA,QAAO;AACjB,QAAAA,OAAM,UAAU,QAAQA,OAAM,UAAU,OAAO,UAAU;AAAA,UACvD,UAAU;AAAA,YACR,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,cACX;AAAA,YACF;AAAA,UACF;AAAA,UACA,UAAU;AAAA,YACR,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,cACX;AAAA,cACA,UAAU;AAAA,gBACR,SAAS;AAAA,cACX;AAAA,YACF;AAAA,UACF;AAAA,UACA,mBAAmB;AAAA,YACjB,SACE;AAAA,YACF,QAAQ;AAAA,cACN,UAAU;AAAA,gBACR,SAAS;AAAA,gBACT,QAAQ;AAAA,kBACN,aAAa;AAAA,oBACX,SAAS;AAAA,kBACX;AAAA,kBACA,UAAU;AAAA,oBACR,SAAS;AAAA,kBACX;AAAA,gBACF;AAAA,cACF;AAAA,cACA,aAAa;AAAA,gBACX,SAAS;AAAA,cACX;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,UACA,kBAAkB;AAAA,YAChB,SACE;AAAA,YACF,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,cACX;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,UACA,oBAAoB;AAAA,YAClB,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,gBACT,QAAQ;AAAA,kBACN,KAAK;AAAA,oBACH,SAAS;AAAA,kBACX;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,UACA,wBAAwB;AAAA,YACtB,SACE;AAAA,YACF,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,gBACT,QAAQ;AAAA,kBACN,KAAK;AAAA,oBACH,SAAS;AAAA,kBACX;AAAA,gBACF;AAAA,cACF;AAAA,cACA,WAAW;AAAA,gBACT,SAAS;AAAA,gBACT,QAAQ;AAAA,kBACN,aAAa;AAAA,oBACX,SAAS;AAAA,kBACX;AAAA,gBACF;AAAA,gBACA,OAAO;AAAA,cACT;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,UACA,6BAA6B;AAAA,YAC3B,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,cACX;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,UACA,yBAAyB;AAAA,YACvB,SAAS;AAAA,YACT,QAAQ;AAAA,cACN,aAAa;AAAA,gBACX,SAAS;AAAA,cACX;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,QACF,CAAC;AACD,QAAAA,OAAM,UAAU;AAAA,UACd;AAAA,UACA;AAAA,UACA;AAAA,YACE,UAAUA,OAAM,UAAU,MAAM,iBAAiB,EAAE,OAAO,UAAU;AAAA,UACtE;AAAA,UACAA,OAAM,UAAU,MAAM,gBAAgB;AAAA,QACxC;AACA,QAAAA,OAAM,UAAU,YAAYA,OAAM,UAAU;AAAA,MAC9C,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
