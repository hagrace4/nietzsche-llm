{
  "version": 3,
  "sources": ["../../refractor/lang/icu-message-format.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = icuMessageFormat\r\nicuMessageFormat.displayName = 'icuMessageFormat'\r\nicuMessageFormat.aliases = []\r\nfunction icuMessageFormat(Prism) {\r\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\r\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\r\n  ;(function (Prism) {\r\n    /**\r\n     * @param {string} source\r\n     * @param {number} level\r\n     * @returns {string}\r\n     */\r\n    function nested(source, level) {\r\n      if (level <= 0) {\r\n        return /[]/.source\r\n      } else {\r\n        return source.replace(/<SELF>/g, function () {\r\n          return nested(source, level - 1)\r\n        })\r\n      }\r\n    }\r\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\r\n    var escape = {\r\n      pattern: /''/,\r\n      greedy: true,\r\n      alias: 'operator'\r\n    }\r\n    var string = {\r\n      pattern: stringPattern,\r\n      greedy: true,\r\n      inside: {\r\n        escape: escape\r\n      }\r\n    }\r\n    var argumentSource = nested(\r\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\r\n        /<STR>/g,\r\n        function () {\r\n          return stringPattern.source\r\n        }\r\n      ),\r\n      8\r\n    )\r\n    var nestedMessage = {\r\n      pattern: RegExp(argumentSource),\r\n      inside: {\r\n        message: {\r\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        },\r\n        'message-delimiter': {\r\n          pattern: /./,\r\n          alias: 'punctuation'\r\n        }\r\n      }\r\n    }\r\n    Prism.languages['icu-message-format'] = {\r\n      argument: {\r\n        pattern: RegExp(argumentSource),\r\n        greedy: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\r\n            lookbehind: true,\r\n            inside: {\r\n              'argument-name': {\r\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\r\n                lookbehind: true\r\n              },\r\n              'choice-style': {\r\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\r\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\r\n                lookbehind: true,\r\n                inside: {\r\n                  punctuation: /\\|/,\r\n                  range: {\r\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\r\n                    lookbehind: true,\r\n                    inside: {\r\n                      operator: /[<#\\u2264]/,\r\n                      number: /\\S+/\r\n                    }\r\n                  },\r\n                  rest: null // see below\r\n                }\r\n              },\r\n              'plural-style': {\r\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\r\n                pattern:\r\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\r\n                lookbehind: true,\r\n                inside: {\r\n                  offset: /^offset:\\s*\\d+/,\r\n                  'nested-message': nestedMessage,\r\n                  selector: {\r\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\r\n                    inside: {\r\n                      keyword: /^(?:few|many|one|other|two|zero)$/\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              'select-style': {\r\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\r\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\r\n                lookbehind: true,\r\n                inside: {\r\n                  'nested-message': nestedMessage,\r\n                  selector: {\r\n                    pattern: /[^{}:=,\\s]+/,\r\n                    inside: {\r\n                      keyword: /^other$/\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\r\n              'arg-type': {\r\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\r\n                alias: 'keyword'\r\n              },\r\n              'arg-skeleton': {\r\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\r\n                lookbehind: true\r\n              },\r\n              'arg-style': {\r\n                pattern:\r\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\r\n                lookbehind: true\r\n              },\r\n              'arg-style-text': {\r\n                pattern: RegExp(\r\n                  /(^\\s*,\\s*(?=\\S))/.source +\r\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\r\n                    '$'\r\n                ),\r\n                lookbehind: true,\r\n                alias: 'string'\r\n              },\r\n              punctuation: /,/\r\n            }\r\n          },\r\n          'argument-delimiter': {\r\n            pattern: /./,\r\n            alias: 'operator'\r\n          }\r\n        }\r\n      },\r\n      escape: escape,\r\n      string: string\r\n    }\r\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\r\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\r\n      'choice-style'\r\n    ].inside.rest = Prism.languages['icu-message-format']\r\n  })(Prism)\r\n}\r\n"],
  "mappings": "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",
  "names": ["Prism"]
}
