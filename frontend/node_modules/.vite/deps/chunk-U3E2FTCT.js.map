{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/latex.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * Any of the passed expresssions may match\r\n *\r\n * Creates a huge this | this | that | that match\r\n * @param {(RegExp | string)[] } args\r\n * @returns {string}\r\n */\r\nfunction either(...args) {\r\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: LaTeX\r\nAuthor: Benedikt Wilde <bwilde@posteo.de>\r\nWebsite: https://www.latex-project.org\r\nCategory: markup\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction latex(hljs) {\r\n  const KNOWN_CONTROL_WORDS = either(...[\r\n      '(?:NeedsTeXFormat|RequirePackage|GetIdInfo)',\r\n      'Provides(?:Expl)?(?:Package|Class|File)',\r\n      '(?:DeclareOption|ProcessOptions)',\r\n      '(?:documentclass|usepackage|input|include)',\r\n      'makeat(?:letter|other)',\r\n      'ExplSyntax(?:On|Off)',\r\n      '(?:new|renew|provide)?command',\r\n      '(?:re)newenvironment',\r\n      '(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand',\r\n      '(?:New|Renew|Provide|Declare)DocumentEnvironment',\r\n      '(?:(?:e|g|x)?def|let)',\r\n      '(?:begin|end)',\r\n      '(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)',\r\n      'caption',\r\n      '(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)',\r\n      '(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)',\r\n      '(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)',\r\n      '(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)',\r\n      '(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)',\r\n      '(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)'\r\n    ].map(word => word + '(?![a-zA-Z@:_])'));\r\n  const L3_REGEX = new RegExp([\r\n      // A function \\module_function_name:signature or \\__module_function_name:signature,\r\n      // where both module and function_name need at least two characters and\r\n      // function_name may contain single underscores.\r\n      '(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*',\r\n      // A variable \\scope_module_and_name_type or \\scope__module_ane_name_type,\r\n      // where scope is one of l, g or c, type needs at least two characters\r\n      // and module_and_name may contain single underscores.\r\n      '[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}',\r\n      // A quark \\q_the_name or \\q__the_name or\r\n      // scan mark \\s_the_name or \\s__vthe_name,\r\n      // where variable_name needs at least two characters and\r\n      // may contain single underscores.\r\n      '[qs]__?[a-zA-Z](?:_?[a-zA-Z])+',\r\n      // Other LaTeX3 macro names that are not covered by the three rules above.\r\n      'use(?:_i)?:[a-zA-Z]*',\r\n      '(?:else|fi|or):',\r\n      '(?:if|cs|exp):w',\r\n      '(?:hbox|vbox):n',\r\n      '::[a-zA-Z]_unbraced',\r\n      '::[a-zA-Z:]'\r\n    ].map(pattern => pattern + '(?![a-zA-Z:_])').join('|'));\r\n  const L2_VARIANTS = [\r\n    {begin: /[a-zA-Z@]+/}, // control word\r\n    {begin: /[^a-zA-Z@]?/} // control symbol\r\n  ];\r\n  const DOUBLE_CARET_VARIANTS = [\r\n    {begin: /\\^{6}[0-9a-f]{6}/},\r\n    {begin: /\\^{5}[0-9a-f]{5}/},\r\n    {begin: /\\^{4}[0-9a-f]{4}/},\r\n    {begin: /\\^{3}[0-9a-f]{3}/},\r\n    {begin: /\\^{2}[0-9a-f]{2}/},\r\n    {begin: /\\^{2}[\\u0000-\\u007f]/}\r\n  ];\r\n  const CONTROL_SEQUENCE = {\r\n    className: 'keyword',\r\n    begin: /\\\\/,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        endsParent: true,\r\n        begin: KNOWN_CONTROL_WORDS\r\n      },\r\n      {\r\n        endsParent: true,\r\n        begin: L3_REGEX\r\n      },\r\n      {\r\n        endsParent: true,\r\n        variants: DOUBLE_CARET_VARIANTS\r\n      },\r\n      {\r\n        endsParent: true,\r\n        relevance: 0,\r\n        variants: L2_VARIANTS\r\n      }\r\n    ]\r\n  };\r\n  const MACRO_PARAM = {\r\n    className: 'params',\r\n    relevance: 0,\r\n    begin: /#+\\d?/\r\n  };\r\n  const DOUBLE_CARET_CHAR = {\r\n    // relevance: 1\r\n    variants: DOUBLE_CARET_VARIANTS\r\n  };\r\n  const SPECIAL_CATCODE = {\r\n    className: 'built_in',\r\n    relevance: 0,\r\n    begin: /[$&^_]/\r\n  };\r\n  const MAGIC_COMMENT = {\r\n    className: 'meta',\r\n    begin: '% !TeX',\r\n    end: '$',\r\n    relevance: 10\r\n  };\r\n  const COMMENT = hljs.COMMENT(\r\n    '%',\r\n    '$',\r\n    {\r\n      relevance: 0\r\n    }\r\n  );\r\n  const EVERYTHING_BUT_VERBATIM = [\r\n    CONTROL_SEQUENCE,\r\n    MACRO_PARAM,\r\n    DOUBLE_CARET_CHAR,\r\n    SPECIAL_CATCODE,\r\n    MAGIC_COMMENT,\r\n    COMMENT\r\n  ];\r\n  const BRACE_GROUP_NO_VERBATIM = {\r\n    begin: /\\{/, end: /\\}/,\r\n    relevance: 0,\r\n    contains: ['self', ...EVERYTHING_BUT_VERBATIM]\r\n  };\r\n  const ARGUMENT_BRACES = hljs.inherit(\r\n    BRACE_GROUP_NO_VERBATIM,\r\n    {\r\n      relevance: 0,\r\n      endsParent: true,\r\n      contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\r\n    }\r\n  );\r\n  const ARGUMENT_BRACKETS = {\r\n    begin: /\\[/,\r\n      end: /\\]/,\r\n    endsParent: true,\r\n    relevance: 0,\r\n    contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\r\n  };\r\n  const SPACE_GOBBLER = {\r\n    begin: /\\s+/,\r\n    relevance: 0\r\n  };\r\n  const ARGUMENT_M = [ARGUMENT_BRACES];\r\n  const ARGUMENT_O = [ARGUMENT_BRACKETS];\r\n  const ARGUMENT_AND_THEN = function(arg, starts_mode) {\r\n    return {\r\n      contains: [SPACE_GOBBLER],\r\n      starts: {\r\n        relevance: 0,\r\n        contains: arg,\r\n        starts: starts_mode\r\n      }\r\n    };\r\n  };\r\n  const CSNAME = function(csname, starts_mode) {\r\n    return {\r\n        begin: '\\\\\\\\' + csname + '(?![a-zA-Z@:_])',\r\n        keywords: {$pattern: /\\\\[a-zA-Z]+/, keyword: '\\\\' + csname},\r\n        relevance: 0,\r\n        contains: [SPACE_GOBBLER],\r\n        starts: starts_mode\r\n      };\r\n  };\r\n  const BEGIN_ENV = function(envname, starts_mode) {\r\n    return hljs.inherit(\r\n      {\r\n        begin: '\\\\\\\\begin(?=[ \\t]*(\\\\r?\\\\n[ \\t]*)?\\\\{' + envname + '\\\\})',\r\n        keywords: {$pattern: /\\\\[a-zA-Z]+/, keyword: '\\\\begin'},\r\n        relevance: 0,\r\n      },\r\n      ARGUMENT_AND_THEN(ARGUMENT_M, starts_mode)\r\n    );\r\n  };\r\n  const VERBATIM_DELIMITED_EQUAL = (innerName = \"string\") => {\r\n    return hljs.END_SAME_AS_BEGIN({\r\n      className: innerName,\r\n      begin: /(.|\\r?\\n)/,\r\n      end: /(.|\\r?\\n)/,\r\n      excludeBegin: true,\r\n      excludeEnd: true,\r\n      endsParent: true\r\n    });\r\n  };\r\n  const VERBATIM_DELIMITED_ENV = function(envname) {\r\n    return {\r\n      className: 'string',\r\n      end: '(?=\\\\\\\\end\\\\{' + envname + '\\\\})'\r\n    };\r\n  };\r\n\r\n  const VERBATIM_DELIMITED_BRACES = (innerName = \"string\") => {\r\n    return {\r\n      relevance: 0,\r\n      begin: /\\{/,\r\n      starts: {\r\n        endsParent: true,\r\n        contains: [\r\n          {\r\n            className: innerName,\r\n            end: /(?=\\})/,\r\n            endsParent:true,\r\n            contains: [\r\n              {\r\n                begin: /\\{/,\r\n                end: /\\}/,\r\n                relevance: 0,\r\n                contains: [\"self\"]\r\n              }\r\n            ],\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  };\r\n  const VERBATIM = [\r\n    ...['verb', 'lstinline'].map(csname => CSNAME(csname, {contains: [VERBATIM_DELIMITED_EQUAL()]})),\r\n    CSNAME('mint', ARGUMENT_AND_THEN(ARGUMENT_M, {contains: [VERBATIM_DELIMITED_EQUAL()]})),\r\n    CSNAME('mintinline', ARGUMENT_AND_THEN(ARGUMENT_M, {contains: [VERBATIM_DELIMITED_BRACES(), VERBATIM_DELIMITED_EQUAL()]})),\r\n    CSNAME('url', {contains: [VERBATIM_DELIMITED_BRACES(\"link\"), VERBATIM_DELIMITED_BRACES(\"link\")]}),\r\n    CSNAME('hyperref', {contains: [VERBATIM_DELIMITED_BRACES(\"link\")]}),\r\n    CSNAME('href', ARGUMENT_AND_THEN(ARGUMENT_O, {contains: [VERBATIM_DELIMITED_BRACES(\"link\")]})),\r\n    ...[].concat(...['', '\\\\*'].map(suffix => [\r\n      BEGIN_ENV('verbatim' + suffix, VERBATIM_DELIMITED_ENV('verbatim' + suffix)),\r\n      BEGIN_ENV('filecontents' + suffix,  ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('filecontents' + suffix))),\r\n      ...['', 'B', 'L'].map(prefix =>\r\n        BEGIN_ENV(prefix + 'Verbatim' + suffix, ARGUMENT_AND_THEN(ARGUMENT_O, VERBATIM_DELIMITED_ENV(prefix + 'Verbatim' + suffix)))\r\n      )\r\n    ])),\r\n    BEGIN_ENV('minted', ARGUMENT_AND_THEN(ARGUMENT_O, ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('minted')))),\r\n  ];\r\n\r\n  return {\r\n    name: 'LaTeX',\r\n    aliases: ['tex'],\r\n    contains: [\r\n      ...VERBATIM,\r\n      ...EVERYTHING_BUT_VERBATIM\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = latex;\r\n"],
  "mappings": "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",
  "names": []
}
