{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/irpf90.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: IRPF90\r\nAuthor: Anthony Scemama <scemama@irsamc.ups-tlse.fr>\r\nDescription: IRPF90 is an open-source Fortran code generator\r\nWebsite: http://irpf90.ups-tlse.fr\r\nCategory: scientific\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction irpf90(hljs) {\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: '\\\\(',\r\n    end: '\\\\)'\r\n  };\r\n\r\n  // regex in both fortran and irpf90 should match\r\n  const OPTIONAL_NUMBER_SUFFIX = /(_[a-z_\\d]+)?/;\r\n  const OPTIONAL_NUMBER_EXP = /([de][+-]?\\d+)?/;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      {\r\n        begin: concat(/\\b\\d+/, /\\.(\\d*)/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\r\n      },\r\n      {\r\n        begin: concat(/\\b\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\r\n      },\r\n      {\r\n        begin: concat(/\\.\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const F_KEYWORDS = {\r\n    literal: '.False. .True.',\r\n    keyword: 'kind do while private call intrinsic where elsewhere ' +\r\n      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +\r\n      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\r\n      'goto save else use module select case ' +\r\n      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\r\n      'continue format pause cycle exit ' +\r\n      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\r\n      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\r\n      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\r\n      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\r\n      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\r\n      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\r\n      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\r\n      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\r\n      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\r\n      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +\r\n      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure ' +\r\n      'integer real character complex logical dimension allocatable|10 parameter ' +\r\n      'external implicit|10 none double precision assign intent optional pointer ' +\r\n      'target in out common equivalence data ' +\r\n      // IRPF90 special keywords\r\n      'begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch ' +\r\n      'soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read',\r\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\r\n      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\r\n      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\r\n      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\r\n      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\r\n      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\r\n      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\r\n      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\r\n      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\r\n      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\r\n      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\r\n      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\r\n      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\r\n      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of ' +\r\n      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\r\n      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\r\n      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\r\n      'num_images parity popcnt poppar shifta shiftl shiftr this_image ' +\r\n      // IRPF90 special built_ins\r\n      'IRP_ALIGN irp_here'\r\n  };\r\n  return {\r\n    name: 'IRPF90',\r\n    case_insensitive: true,\r\n    keywords: F_KEYWORDS,\r\n    illegal: /\\/\\*/,\r\n    contains: [\r\n      hljs.inherit(hljs.APOS_STRING_MODE, {\r\n        className: 'string',\r\n        relevance: 0\r\n      }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n        className: 'string',\r\n        relevance: 0\r\n      }),\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'subroutine function program',\r\n        illegal: '[${=\\\\n]',\r\n        contains: [\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          PARAMS\r\n        ]\r\n      },\r\n      hljs.COMMENT('!', '$', {\r\n        relevance: 0\r\n      }),\r\n      hljs.COMMENT('begin_doc', 'end_doc', {\r\n        relevance: 10\r\n      }),\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = irpf90;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AASA,aAAS,OAAO,IAAI;AAClB,UAAI,CAAC;AAAI,eAAO;AAChB,UAAI,OAAO,OAAO;AAAU,eAAO;AAEnC,aAAO,GAAG;AAAA,IACZ;AAMA,aAAS,UAAU,MAAM;AACvB,YAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE;AACjD,aAAO;AAAA,IACT;AAWA,aAAS,OAAO,MAAM;AACpB,YAAM,SAAS;AAAA,QACb,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACP;AAGA,YAAM,yBAAyB;AAC/B,YAAM,sBAAsB;AAC5B,YAAM,SAAS;AAAA,QACb,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAO,OAAO,SAAS,WAAW,qBAAqB,sBAAsB;AAAA,UAC/E;AAAA,UACA;AAAA,YACE,OAAO,OAAO,SAAS,qBAAqB,sBAAsB;AAAA,UACpE;AAAA,UACA;AAAA,YACE,OAAO,OAAO,SAAS,qBAAqB,sBAAsB;AAAA,UACpE;AAAA,QACF;AAAA,QACA,WAAW;AAAA,MACb;AAEA,YAAM,aAAa;AAAA,QACjB,SAAS;AAAA,QACT,SAAS;AAAA,QAuBT,UAAU;AAAA,MAoBZ;AACA,aAAO;AAAA,QACL,MAAM;AAAA,QACN,kBAAkB;AAAA,QAClB,UAAU;AAAA,QACV,SAAS;AAAA,QACT,UAAU;AAAA,UACR,KAAK,QAAQ,KAAK,kBAAkB;AAAA,YAClC,WAAW;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,UACD,KAAK,QAAQ,KAAK,mBAAmB;AAAA,YACnC,WAAW;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,UACD;AAAA,YACE,WAAW;AAAA,YACX,eAAe;AAAA,YACf,SAAS;AAAA,YACT,UAAU;AAAA,cACR,KAAK;AAAA,cACL;AAAA,YACF;AAAA,UACF;AAAA,UACA,KAAK,QAAQ,KAAK,KAAK;AAAA,YACrB,WAAW;AAAA,UACb,CAAC;AAAA,UACD,KAAK,QAAQ,aAAa,WAAW;AAAA,YACnC,WAAW;AAAA,UACb,CAAC;AAAA,UACD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
