{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/qml.js"],
  "sourcesContent": ["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: QML\r\nRequires: javascript.js, xml.js\r\nAuthor: John Foster <jfoster@esri.com>\r\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\r\n             the JavaScript parser.\r\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\r\nCategory: scripting\r\n*/\r\n\r\nfunction qml(hljs) {\r\n  const KEYWORDS = {\r\n    keyword:\r\n      'in of on if for while finally var new function do return void else break catch ' +\r\n      'instanceof with throw case default try this switch continue typeof delete ' +\r\n      'let yield const export super debugger as async await import',\r\n    literal:\r\n      'true false null undefined NaN Infinity',\r\n    built_in:\r\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\r\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\r\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\r\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\r\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\r\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\r\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\r\n      'Behavior bool color coordinate date double enumeration font geocircle georectangle ' +\r\n      'geoshape int list matrix4x4 parent point quaternion real rect ' +\r\n      'size string url variant vector2d vector3d vector4d ' +\r\n      'Promise'\r\n  };\r\n\r\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*';\r\n\r\n  // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\r\n  // Use property class.\r\n  const PROPERTY = {\r\n    className: 'keyword',\r\n    begin: '\\\\bproperty\\\\b',\r\n    starts: {\r\n      className: 'string',\r\n      end: '(:|=|;|,|//|/\\\\*|$)',\r\n      returnEnd: true\r\n    }\r\n  };\r\n\r\n  // Isolate signal statements. Ends at a ) a comment or end of line.\r\n  // Use property class.\r\n  const SIGNAL = {\r\n    className: 'keyword',\r\n    begin: '\\\\bsignal\\\\b',\r\n    starts: {\r\n      className: 'string',\r\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\r\n      returnEnd: true\r\n    }\r\n  };\r\n\r\n  // id: is special in QML. When we see id: we want to mark the id: as attribute and\r\n  // emphasize the token following.\r\n  const ID_ID = {\r\n    className: 'attribute',\r\n    begin: '\\\\bid\\\\s*:',\r\n    starts: {\r\n      className: 'string',\r\n      end: QML_IDENT_RE,\r\n      returnEnd: false\r\n    }\r\n  };\r\n\r\n  // Find QML object attribute. An attribute is a QML identifier followed by :.\r\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\r\n  // objects, object definitions, or javascript. The true end is either when the parent\r\n  // ends or the next attribute is detected.\r\n  const QML_ATTRIBUTE = {\r\n    begin: QML_IDENT_RE + '\\\\s*:',\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        className: 'attribute',\r\n        begin: QML_IDENT_RE,\r\n        end: '\\\\s*:',\r\n        excludeEnd: true,\r\n        relevance: 0\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\r\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\r\n  const QML_OBJECT = {\r\n    begin: concat(QML_IDENT_RE, /\\s*\\{/),\r\n    end: /\\{/,\r\n    returnBegin: true,\r\n    relevance: 0,\r\n    contains: [\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        begin: QML_IDENT_RE\r\n      })\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'QML',\r\n    aliases: [ 'qt' ],\r\n    case_insensitive: false,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      {\r\n        className: 'meta',\r\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      { // template string\r\n        className: 'string',\r\n        begin: '`',\r\n        end: '`',\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          {\r\n            className: 'subst',\r\n            begin: '\\\\$\\\\{',\r\n            end: '\\\\}'\r\n          }\r\n        ]\r\n      },\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: 'number',\r\n        variants: [\r\n          {\r\n            begin: '\\\\b(0[bB][01]+)'\r\n          },\r\n          {\r\n            begin: '\\\\b(0[oO][0-7]+)'\r\n          },\r\n          {\r\n            begin: hljs.C_NUMBER_RE\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      { // \"value\" container\r\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\r\n        keywords: 'return throw case',\r\n        contains: [\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          hljs.REGEXP_MODE,\r\n          { // E4X / JSX\r\n            begin: /</,\r\n            end: />\\s*[);\\]]/,\r\n            relevance: 0,\r\n            subLanguage: 'xml'\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      SIGNAL,\r\n      PROPERTY,\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'function',\r\n        end: /\\{/,\r\n        excludeEnd: true,\r\n        contains: [\r\n          hljs.inherit(hljs.TITLE_MODE, {\r\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/\r\n          }),\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            contains: [\r\n              hljs.C_LINE_COMMENT_MODE,\r\n              hljs.C_BLOCK_COMMENT_MODE\r\n            ]\r\n          }\r\n        ],\r\n        illegal: /\\[|%/\r\n      },\r\n      {\r\n        // hack: prevents detection of keywords after dots\r\n        begin: '\\\\.' + hljs.IDENT_RE,\r\n        relevance: 0\r\n      },\r\n      ID_ID,\r\n      QML_ATTRIBUTE,\r\n      QML_OBJECT\r\n    ],\r\n    illegal: /#/\r\n  };\r\n}\r\n\r\nmodule.exports = qml;\r\n"],
  "mappings": "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",
  "names": []
}
