{
  "version": 3,
  "sources": ["../../refractor/lang/regex.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = regex\r\nregex.displayName = 'regex'\r\nregex.aliases = []\r\nfunction regex(Prism) {\r\n  ;(function (Prism) {\r\n    var specialEscape = {\r\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\r\n      alias: 'escape'\r\n    }\r\n    var escape =\r\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\r\n    var charSet = {\r\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\r\n      alias: 'class-name'\r\n    }\r\n    var charSetWithoutDot = {\r\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\r\n      alias: 'class-name'\r\n    }\r\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\r\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\r\n    var groupName = {\r\n      pattern: /(<|')[^<>']+(?=[>']$)/,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    }\r\n    Prism.languages.regex = {\r\n      'char-class': {\r\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'char-class-negation': {\r\n            pattern: /(^\\[)\\^/,\r\n            lookbehind: true,\r\n            alias: 'operator'\r\n          },\r\n          'char-class-punctuation': {\r\n            pattern: /^\\[|\\]$/,\r\n            alias: 'punctuation'\r\n          },\r\n          range: {\r\n            pattern: range,\r\n            inside: {\r\n              escape: escape,\r\n              'range-punctuation': {\r\n                pattern: /-/,\r\n                alias: 'operator'\r\n              }\r\n            }\r\n          },\r\n          'special-escape': specialEscape,\r\n          'char-set': charSetWithoutDot,\r\n          escape: escape\r\n        }\r\n      },\r\n      'special-escape': specialEscape,\r\n      'char-set': charSet,\r\n      backreference: [\r\n        {\r\n          // a backreference which is not an octal escape\r\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\r\n          alias: 'keyword'\r\n        },\r\n        {\r\n          pattern: /\\\\k<[^<>']+>/,\r\n          alias: 'keyword',\r\n          inside: {\r\n            'group-name': groupName\r\n          }\r\n        }\r\n      ],\r\n      anchor: {\r\n        pattern: /[$^]|\\\\[ABbGZz]/,\r\n        alias: 'function'\r\n      },\r\n      escape: escape,\r\n      group: [\r\n        {\r\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\r\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\r\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\r\n          pattern:\r\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\r\n          alias: 'punctuation',\r\n          inside: {\r\n            'group-name': groupName\r\n          }\r\n        },\r\n        {\r\n          pattern: /\\)/,\r\n          alias: 'punctuation'\r\n        }\r\n      ],\r\n      quantifier: {\r\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\r\n        alias: 'number'\r\n      },\r\n      alternation: {\r\n        pattern: /\\|/,\r\n        alias: 'keyword'\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,UAAM,cAAc;AACpB,UAAM,UAAU,CAAC;AACjB,aAAS,MAAM,OAAO;AACpB;AAAC,OAAC,SAAUA,QAAO;AACjB,YAAI,gBAAgB;AAAA,UAClB,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AACA,YAAI,SACF;AACF,YAAI,UAAU;AAAA,UACZ,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AACA,YAAI,oBAAoB;AAAA,UACtB,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AACA,YAAI,YAAY,iBAAiB,OAAO,SAAS;AACjD,YAAI,QAAQ,OAAO,YAAY,MAAM,SAAS;AAC9C,YAAI,YAAY;AAAA,UACd,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AACA,QAAAA,OAAM,UAAU,QAAQ;AAAA,UACtB,cAAc;AAAA,YACZ,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,QAAQ;AAAA,cACN,uBAAuB;AAAA,gBACrB,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,OAAO;AAAA,cACT;AAAA,cACA,0BAA0B;AAAA,gBACxB,SAAS;AAAA,gBACT,OAAO;AAAA,cACT;AAAA,cACA,OAAO;AAAA,gBACL,SAAS;AAAA,gBACT,QAAQ;AAAA,kBACN;AAAA,kBACA,qBAAqB;AAAA,oBACnB,SAAS;AAAA,oBACT,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,cACA,kBAAkB;AAAA,cAClB,YAAY;AAAA,cACZ;AAAA,YACF;AAAA,UACF;AAAA,UACA,kBAAkB;AAAA,UAClB,YAAY;AAAA,UACZ,eAAe;AAAA,YACb;AAAA;AAAA,cAEE,SAAS;AAAA,cACT,OAAO;AAAA,YACT;AAAA,YACA;AAAA,cACE,SAAS;AAAA,cACT,OAAO;AAAA,cACP,QAAQ;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,YACF;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA;AAAA,UACA,OAAO;AAAA,YACL;AAAA;AAAA;AAAA;AAAA,cAIE,SACE;AAAA,cACF,OAAO;AAAA,cACP,QAAQ;AAAA,gBACN,cAAc;AAAA,cAChB;AAAA,YACF;AAAA,YACA;AAAA,cACE,SAAS;AAAA,cACT,OAAO;AAAA,YACT;AAAA,UACF;AAAA,UACA,YAAY;AAAA,YACV,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA,aAAa;AAAA,YACX,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
