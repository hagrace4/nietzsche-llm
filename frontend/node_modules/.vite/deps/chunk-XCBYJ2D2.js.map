{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/cos.js"],
  "sourcesContent": ["/*\r\nLanguage: Caché Object Script\r\nAuthor: Nikita Savchenko <zitros.lab@gmail.com>\r\nCategory: enterprise, scripting\r\nWebsite: https://cedocs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction cos(hljs) {\r\n  const STRINGS = {\r\n    className: 'string',\r\n    variants: [{\r\n      begin: '\"',\r\n      end: '\"',\r\n      contains: [{ // escaped\r\n        begin: \"\\\"\\\"\",\r\n        relevance: 0\r\n      }]\r\n    }]\r\n  };\r\n\r\n  const NUMBERS = {\r\n    className: \"number\",\r\n    begin: \"\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)\",\r\n    relevance: 0\r\n  };\r\n\r\n  const COS_KEYWORDS =\r\n    'property parameter class classmethod clientmethod extends as break ' +\r\n    'catch close continue do d|0 else elseif for goto halt hang h|0 if job ' +\r\n    'j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 ' +\r\n    'tcommit throw trollback try tstart use view while write w|0 xecute x|0 ' +\r\n    'zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert ' +\r\n    'zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit ' +\r\n    'zsync ascii';\r\n\r\n  // registered function - no need in them due to all functions are highlighted,\r\n  // but I'll just leave this here.\r\n\r\n  // \"$bit\", \"$bitcount\",\r\n  // \"$bitfind\", \"$bitlogic\", \"$case\", \"$char\", \"$classmethod\", \"$classname\",\r\n  // \"$compile\", \"$data\", \"$decimal\", \"$double\", \"$extract\", \"$factor\",\r\n  // \"$find\", \"$fnumber\", \"$get\", \"$increment\", \"$inumber\", \"$isobject\",\r\n  // \"$isvaliddouble\", \"$isvalidnum\", \"$justify\", \"$length\", \"$list\",\r\n  // \"$listbuild\", \"$listdata\", \"$listfind\", \"$listfromstring\", \"$listget\",\r\n  // \"$listlength\", \"$listnext\", \"$listsame\", \"$listtostring\", \"$listvalid\",\r\n  // \"$locate\", \"$match\", \"$method\", \"$name\", \"$nconvert\", \"$next\",\r\n  // \"$normalize\", \"$now\", \"$number\", \"$order\", \"$parameter\", \"$piece\",\r\n  // \"$prefetchoff\", \"$prefetchon\", \"$property\", \"$qlength\", \"$qsubscript\",\r\n  // \"$query\", \"$random\", \"$replace\", \"$reverse\", \"$sconvert\", \"$select\",\r\n  // \"$sortbegin\", \"$sortend\", \"$stack\", \"$text\", \"$translate\", \"$view\",\r\n  // \"$wascii\", \"$wchar\", \"$wextract\", \"$wfind\", \"$wiswide\", \"$wlength\",\r\n  // \"$wreverse\", \"$xecute\", \"$zabs\", \"$zarccos\", \"$zarcsin\", \"$zarctan\",\r\n  // \"$zcos\", \"$zcot\", \"$zcsc\", \"$zdate\", \"$zdateh\", \"$zdatetime\",\r\n  // \"$zdatetimeh\", \"$zexp\", \"$zhex\", \"$zln\", \"$zlog\", \"$zpower\", \"$zsec\",\r\n  // \"$zsin\", \"$zsqr\", \"$ztan\", \"$ztime\", \"$ztimeh\", \"$zboolean\",\r\n  // \"$zconvert\", \"$zcrc\", \"$zcyc\", \"$zdascii\", \"$zdchar\", \"$zf\",\r\n  // \"$ziswide\", \"$zlascii\", \"$zlchar\", \"$zname\", \"$zposition\", \"$zqascii\",\r\n  // \"$zqchar\", \"$zsearch\", \"$zseek\", \"$zstrip\", \"$zwascii\", \"$zwchar\",\r\n  // \"$zwidth\", \"$zwpack\", \"$zwbpack\", \"$zwunpack\", \"$zwbunpack\", \"$zzenkaku\",\r\n  // \"$change\", \"$mv\", \"$mvat\", \"$mvfmt\", \"$mvfmts\", \"$mviconv\",\r\n  // \"$mviconvs\", \"$mvinmat\", \"$mvlover\", \"$mvoconv\", \"$mvoconvs\", \"$mvraise\",\r\n  // \"$mvtrans\", \"$mvv\", \"$mvname\", \"$zbitand\", \"$zbitcount\", \"$zbitfind\",\r\n  // \"$zbitget\", \"$zbitlen\", \"$zbitnot\", \"$zbitor\", \"$zbitset\", \"$zbitstr\",\r\n  // \"$zbitxor\", \"$zincrement\", \"$znext\", \"$zorder\", \"$zprevious\", \"$zsort\",\r\n  // \"device\", \"$ecode\", \"$estack\", \"$etrap\", \"$halt\", \"$horolog\",\r\n  // \"$io\", \"$job\", \"$key\", \"$namespace\", \"$principal\", \"$quit\", \"$roles\",\r\n  // \"$storage\", \"$system\", \"$test\", \"$this\", \"$tlevel\", \"$username\",\r\n  // \"$x\", \"$y\", \"$za\", \"$zb\", \"$zchild\", \"$zeof\", \"$zeos\", \"$zerror\",\r\n  // \"$zhorolog\", \"$zio\", \"$zjob\", \"$zmode\", \"$znspace\", \"$zparent\", \"$zpi\",\r\n  // \"$zpos\", \"$zreference\", \"$zstorage\", \"$ztimestamp\", \"$ztimezone\",\r\n  // \"$ztrap\", \"$zversion\"\r\n\r\n  return {\r\n    name: 'Caché Object Script',\r\n    case_insensitive: true,\r\n    aliases: [\r\n      \"cls\"\r\n    ],\r\n    keywords: COS_KEYWORDS,\r\n    contains: [\r\n      NUMBERS,\r\n      STRINGS,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: \"comment\",\r\n        begin: /;/,\r\n        end: \"$\",\r\n        relevance: 0\r\n      },\r\n      { // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)\r\n        className: \"built_in\",\r\n        begin: /(?:\\$\\$?|\\.\\.)\\^?[a-zA-Z]+/\r\n      },\r\n      { // Macro command: quit $$$OK\r\n        className: \"built_in\",\r\n        begin: /\\$\\$\\$[a-zA-Z]+/\r\n      },\r\n      { // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer\r\n        className: \"built_in\",\r\n        begin: /%[a-z]+(?:\\.[a-z]+)*/\r\n      },\r\n      { // Global variable: set ^globalName = 12 write ^globalName\r\n        className: \"symbol\",\r\n        begin: /\\^%?[a-zA-Z][\\w]*/\r\n      },\r\n      { // Some control constructions: do ##class(Package.ClassName).Method(), ##super()\r\n        className: \"keyword\",\r\n        begin: /##class|##super|#define|#dim/\r\n      },\r\n      // sub-languages: are not fully supported by hljs by 11/15/2015\r\n      // left for the future implementation.\r\n      {\r\n        begin: /&sql\\(/,\r\n        end: /\\)/,\r\n        excludeBegin: true,\r\n        excludeEnd: true,\r\n        subLanguage: \"sql\"\r\n      },\r\n      {\r\n        begin: /&(js|jscript|javascript)</,\r\n        end: />/,\r\n        excludeBegin: true,\r\n        excludeEnd: true,\r\n        subLanguage: \"javascript\"\r\n      },\r\n      {\r\n        // this brakes first and last tag, but this is the only way to embed a valid html\r\n        begin: /&html<\\s*</,\r\n        end: />\\s*>/,\r\n        subLanguage: \"xml\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = cos;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,aAAS,IAAI,MAAM;AACjB,YAAM,UAAU;AAAA,QACd,WAAW;AAAA,QACX,UAAU,CAAC;AAAA,UACT,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAU,CAAC;AAAA;AAAA,YACT,OAAO;AAAA,YACP,WAAW;AAAA,UACb,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,YAAM,UAAU;AAAA,QACd,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAEA,YAAM,eACJ;AA6CF,aAAO;AAAA,QACL,MAAM;AAAA,QACN,kBAAkB;AAAA,QAClB,SAAS;AAAA,UACP;AAAA,QACF;AAAA,QACA,UAAU;AAAA,QACV,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,WAAW;AAAA,UACb;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA;AAAA;AAAA,UAGA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,YACZ,aAAa;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA,YACZ,aAAa;AAAA,UACf;AAAA,UACA;AAAA;AAAA,YAEE,OAAO;AAAA,YACP,KAAK;AAAA,YACL,aAAa;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
