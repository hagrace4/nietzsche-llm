{
  "version": 3,
  "sources": ["../../refractor/lang/log.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = log\r\nlog.displayName = 'log'\r\nlog.aliases = []\r\nfunction log(Prism) {\r\n  // This is a language definition for generic log files.\r\n  // Since there is no one log format, this language definition has to support all formats to some degree.\r\n  //\r\n  // Based on https://github.com/MTDL9/vim-log-highlighting\r\n  Prism.languages.log = {\r\n    string: {\r\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\r\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\r\n      greedy: true\r\n    },\r\n    exception: {\r\n      pattern:\r\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: ['javastacktrace', 'language-javastacktrace'],\r\n      inside: Prism.languages['javastacktrace'] || {\r\n        keyword: /\\bat\\b/,\r\n        function: /[a-z_][\\w$]*(?=\\()/,\r\n        punctuation: /[.:()]/\r\n      }\r\n    },\r\n    level: [\r\n      {\r\n        pattern:\r\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\r\n        alias: ['error', 'important']\r\n      },\r\n      {\r\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\r\n        alias: ['warning', 'important']\r\n      },\r\n      {\r\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\r\n        alias: ['info', 'keyword']\r\n      },\r\n      {\r\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\r\n        alias: ['debug', 'keyword']\r\n      },\r\n      {\r\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\r\n        alias: ['trace', 'comment']\r\n      }\r\n    ],\r\n    property: {\r\n      pattern:\r\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\r\n      lookbehind: true\r\n    },\r\n    separator: {\r\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\r\n      lookbehind: true,\r\n      alias: 'comment'\r\n    },\r\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\r\n    email: {\r\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\r\n      lookbehind: true,\r\n      alias: 'url'\r\n    },\r\n    'ip-address': {\r\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\r\n      alias: 'constant'\r\n    },\r\n    'mac-address': {\r\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    domain: {\r\n      pattern:\r\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\r\n      lookbehind: true,\r\n      alias: 'constant'\r\n    },\r\n    uuid: {\r\n      pattern:\r\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    hash: {\r\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    'file-path': {\r\n      pattern:\r\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    date: {\r\n      pattern: RegExp(\r\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\r\n          '|' +\r\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\r\n            .source +\r\n          '|' +\r\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\r\n            .source,\r\n        'i'\r\n      ),\r\n      alias: 'number'\r\n    },\r\n    time: {\r\n      pattern:\r\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\r\n      alias: 'number'\r\n    },\r\n    boolean: /\\b(?:false|null|true)\\b/i,\r\n    number: {\r\n      pattern:\r\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\r\n      lookbehind: true\r\n    },\r\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\r\n    punctuation: /[\\[\\].,]/\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,QAAI,cAAc;AAClB,QAAI,UAAU,CAAC;AACf,aAAS,IAAI,OAAO;AAKlB,YAAM,UAAU,MAAM;AAAA,QACpB,QAAQ;AAAA;AAAA,UAEN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,WAAW;AAAA,UACT,SACE;AAAA,UACF,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,OAAO,CAAC,kBAAkB,yBAAyB;AAAA,UACnD,QAAQ,MAAM,UAAU,gBAAgB,KAAK;AAAA,YAC3C,SAAS;AAAA,YACT,UAAU;AAAA,YACV,aAAa;AAAA,UACf;AAAA,QACF;AAAA,QACA,OAAO;AAAA,UACL;AAAA,YACE,SACE;AAAA,YACF,OAAO,CAAC,SAAS,WAAW;AAAA,UAC9B;AAAA,UACA;AAAA,YACE,SAAS;AAAA,YACT,OAAO,CAAC,WAAW,WAAW;AAAA,UAChC;AAAA,UACA;AAAA,YACE,SAAS;AAAA,YACT,OAAO,CAAC,QAAQ,SAAS;AAAA,UAC3B;AAAA,UACA;AAAA,YACE,SAAS;AAAA,YACT,OAAO,CAAC,SAAS,SAAS;AAAA,UAC5B;AAAA,UACA;AAAA,YACE,SAAS;AAAA,YACT,OAAO,CAAC,SAAS,SAAS;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR,SACE;AAAA,UACF,YAAY;AAAA,QACd;AAAA,QACA,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,QACA,KAAK;AAAA,QACL,OAAO;AAAA,UACL,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,QACA,cAAc;AAAA,UACZ,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,eAAe;AAAA,UACb,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,UACN,SACE;AAAA,UACF,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,QACA,MAAM;AAAA,UACJ,SACE;AAAA,UACF,OAAO;AAAA,QACT;AAAA,QACA,MAAM;AAAA,UACJ,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,aAAa;AAAA,UACX,SACE;AAAA,UACF,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,QACA,MAAM;AAAA,UACJ,SAAS;AAAA,YACP,4DAA4D,SAC1D,MACA,4FACG,SACH,MACA,uKACG;AAAA,YACL;AAAA,UACF;AAAA,UACA,OAAO;AAAA,QACT;AAAA,QACA,MAAM;AAAA,UACJ,SACE;AAAA,UACF,OAAO;AAAA,QACT;AAAA,QACA,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,SACE;AAAA,UACF,YAAY;AAAA,QACd;AAAA,QACA,UAAU;AAAA,QACV,aAAa;AAAA,MACf;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
