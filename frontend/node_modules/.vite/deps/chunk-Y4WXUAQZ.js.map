{
  "version": 3,
  "sources": ["../../refractor/lang/xml-doc.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = xmlDoc\r\nxmlDoc.displayName = 'xmlDoc'\r\nxmlDoc.aliases = []\r\nfunction xmlDoc(Prism) {\r\n  ;(function (Prism) {\r\n    /**\r\n     * If the given language is present, it will insert the given doc comment grammar token into it.\r\n     *\r\n     * @param {string} lang\r\n     * @param {any} docComment\r\n     */\r\n    function insertDocComment(lang, docComment) {\r\n      if (Prism.languages[lang]) {\r\n        Prism.languages.insertBefore(lang, 'comment', {\r\n          'doc-comment': docComment\r\n        })\r\n      }\r\n    }\r\n    var tag = Prism.languages.markup.tag\r\n    var slashDocComment = {\r\n      pattern: /\\/\\/\\/.*/,\r\n      greedy: true,\r\n      alias: 'comment',\r\n      inside: {\r\n        tag: tag\r\n      }\r\n    }\r\n    var tickDocComment = {\r\n      pattern: /'''.*/,\r\n      greedy: true,\r\n      alias: 'comment',\r\n      inside: {\r\n        tag: tag\r\n      }\r\n    }\r\n    insertDocComment('csharp', slashDocComment)\r\n    insertDocComment('fsharp', slashDocComment)\r\n    insertDocComment('vbnet', tickDocComment)\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC;AAClB,aAAS,OAAO,OAAO;AACrB;AAAC,OAAC,SAAUA,QAAO;AAOjB,iBAAS,iBAAiB,MAAM,YAAY;AAC1C,cAAIA,OAAM,UAAU,IAAI,GAAG;AACzB,YAAAA,OAAM,UAAU,aAAa,MAAM,WAAW;AAAA,cAC5C,eAAe;AAAA,YACjB,CAAC;AAAA,UACH;AAAA,QACF;AACA,YAAI,MAAMA,OAAM,UAAU,OAAO;AACjC,YAAI,kBAAkB;AAAA,UACpB,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF;AACA,YAAI,iBAAiB;AAAA,UACnB,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF;AACA,yBAAiB,UAAU,eAAe;AAC1C,yBAAiB,UAAU,eAAe;AAC1C,yBAAiB,SAAS,cAAc;AAAA,MAC1C,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
