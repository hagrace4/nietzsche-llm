{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/yaml.js"],
  "sourcesContent": ["/*\r\nLanguage: YAML\r\nDescription: Yet Another Markdown Language\r\nAuthor: Stefan Wienert <stwienert@gmail.com>\r\nContributors: Carl Baxter <carl@cbax.tech>\r\nRequires: ruby.js\r\nWebsite: https://yaml.org\r\nCategory: common, config\r\n*/\r\nfunction yaml(hljs) {\r\n  var LITERALS = 'true false yes no null';\r\n\r\n  // YAML spec allows non-reserved URI characters in tags.\r\n  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\r\n\r\n  // Define keys as starting with a word character\r\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\r\n  // ...and ending with a colon followed immediately by a space, tab or newline.\r\n  // The YAML spec allows for much more than this, but this covers most use-cases.\r\n  var KEY = {\r\n    className: 'attr',\r\n    variants: [\r\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\r\n      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, // double quoted keys\r\n      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } // single quoted keys\r\n    ]\r\n  };\r\n\r\n  var TEMPLATE_VARIABLES = {\r\n    className: 'template-variable',\r\n    variants: [\r\n      { begin: /\\{\\{/, end: /\\}\\}/ }, // jinja templates Ansible\r\n      { begin: /%\\{/, end: /\\}/ } // Ruby i18n\r\n    ]\r\n  };\r\n  var STRING = {\r\n    className: 'string',\r\n    relevance: 0,\r\n    variants: [\r\n      { begin: /'/, end: /'/ },\r\n      { begin: /\"/, end: /\"/ },\r\n      { begin: /\\S+/ }\r\n    ],\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      TEMPLATE_VARIABLES\r\n    ]\r\n  };\r\n\r\n  // Strings inside of value containers (objects) can't contain braces,\r\n  // brackets, or commas\r\n  var CONTAINER_STRING = hljs.inherit(STRING, {\r\n    variants: [\r\n      { begin: /'/, end: /'/ },\r\n      { begin: /\"/, end: /\"/ },\r\n      { begin: /[^\\s,{}[\\]]+/ }\r\n    ]\r\n  });\r\n\r\n  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\r\n  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\r\n  var FRACTION_RE = '(\\\\.[0-9]*)?';\r\n  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\r\n  var TIMESTAMP = {\r\n    className: 'number',\r\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\r\n  };\r\n\r\n  var VALUE_CONTAINER = {\r\n    end: ',',\r\n    endsWithParent: true,\r\n    excludeEnd: true,\r\n    keywords: LITERALS,\r\n    relevance: 0\r\n  };\r\n  var OBJECT = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: [VALUE_CONTAINER],\r\n    illegal: '\\\\n',\r\n    relevance: 0\r\n  };\r\n  var ARRAY = {\r\n    begin: '\\\\[',\r\n    end: '\\\\]',\r\n    contains: [VALUE_CONTAINER],\r\n    illegal: '\\\\n',\r\n    relevance: 0\r\n  };\r\n\r\n  var MODES = [\r\n    KEY,\r\n    {\r\n      className: 'meta',\r\n      begin: '^---\\\\s*$',\r\n      relevance: 10\r\n    },\r\n    { // multi line string\r\n      // Blocks start with a | or > followed by a newline\r\n      //\r\n      // Indentation of subsequent lines must be the same to\r\n      // be considered part of the block\r\n      className: 'string',\r\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\r\n    },\r\n    { // Ruby/Rails erb\r\n      begin: '<%[%=-]?',\r\n      end: '[%-]?%>',\r\n      subLanguage: 'ruby',\r\n      excludeBegin: true,\r\n      excludeEnd: true,\r\n      relevance: 0\r\n    },\r\n    { // named tags\r\n      className: 'type',\r\n      begin: '!\\\\w+!' + URI_CHARACTERS\r\n    },\r\n    // https://yaml.org/spec/1.2/spec.html#id2784064\r\n    { // verbatim tags\r\n      className: 'type',\r\n      begin: '!<' + URI_CHARACTERS + \">\"\r\n    },\r\n    { // primary tags\r\n      className: 'type',\r\n      begin: '!' + URI_CHARACTERS\r\n    },\r\n    { // secondary tags\r\n      className: 'type',\r\n      begin: '!!' + URI_CHARACTERS\r\n    },\r\n    { // fragment id &ref\r\n      className: 'meta',\r\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\r\n    },\r\n    { // fragment reference *ref\r\n      className: 'meta',\r\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\r\n    },\r\n    { // array listing\r\n      className: 'bullet',\r\n      // TODO: remove |$ hack when we have proper look-ahead support\r\n      begin: '-(?=[ ]|$)',\r\n      relevance: 0\r\n    },\r\n    hljs.HASH_COMMENT_MODE,\r\n    {\r\n      beginKeywords: LITERALS,\r\n      keywords: { literal: LITERALS }\r\n    },\r\n    TIMESTAMP,\r\n    // numbers are any valid C-style number that\r\n    // sit isolated from other words\r\n    {\r\n      className: 'number',\r\n      begin: hljs.C_NUMBER_RE + '\\\\b',\r\n      relevance: 0\r\n    },\r\n    OBJECT,\r\n    ARRAY,\r\n    STRING\r\n  ];\r\n\r\n  var VALUE_MODES = [...MODES];\r\n  VALUE_MODES.pop();\r\n  VALUE_MODES.push(CONTAINER_STRING);\r\n  VALUE_CONTAINER.contains = VALUE_MODES;\r\n\r\n  return {\r\n    name: 'YAML',\r\n    case_insensitive: true,\r\n    aliases: [ 'yml' ],\r\n    contains: MODES\r\n  };\r\n}\r\n\r\nmodule.exports = yaml;\r\n"],
  "mappings": "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",
  "names": []
}
