{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/vhdl.js"],
  "sourcesContent": ["/*\r\nLanguage: VHDL\r\nAuthor: Igor Kalnitsky <igor@kalnitsky.org>\r\nContributors: Daniel C.K. Kho <daniel.kho@tauhop.com>, Guillaume Savaton <guillaume.savaton@eseo.fr>\r\nDescription: VHDL is a hardware description language used in electronic design automation to describe digital and mixed-signal systems.\r\nWebsite: https://en.wikipedia.org/wiki/VHDL\r\n*/\r\n\r\nfunction vhdl(hljs) {\r\n  // Regular expression for VHDL numeric literals.\r\n\r\n  // Decimal literal:\r\n  const INTEGER_RE = '\\\\d(_|\\\\d)*';\r\n  const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\r\n  const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\r\n  // Based literal:\r\n  const BASED_INTEGER_RE = '\\\\w+';\r\n  const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\r\n\r\n  const NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\r\n\r\n  return {\r\n    name: 'VHDL',\r\n    case_insensitive: true,\r\n    keywords: {\r\n      keyword:\r\n        'abs access after alias all and architecture array assert assume assume_guarantee attribute ' +\r\n        'begin block body buffer bus case component configuration constant context cover disconnect ' +\r\n        'downto default else elsif end entity exit fairness file for force function generate ' +\r\n        'generic group guarded if impure in inertial inout is label library linkage literal ' +\r\n        'loop map mod nand new next nor not null of on open or others out package parameter port ' +\r\n        'postponed procedure process property protected pure range record register reject ' +\r\n        'release rem report restrict restrict_guarantee return rol ror select sequence ' +\r\n        'severity shared signal sla sll sra srl strong subtype then to transport type ' +\r\n        'unaffected units until use variable view vmode vprop vunit wait when while with xnor xor',\r\n      built_in:\r\n        'boolean bit character ' +\r\n        'integer time delay_length natural positive ' +\r\n        'string bit_vector file_open_kind file_open_status ' +\r\n        'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +\r\n        'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed ' +\r\n        'real_vector time_vector',\r\n      literal:\r\n        'false true note warning error failure ' + // severity_level\r\n        'line text side width' // textio\r\n    },\r\n    illegal: /\\{/,\r\n    contains: [\r\n      hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.\r\n      hljs.COMMENT('--', '$'),\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        className: 'number',\r\n        begin: NUMBER_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        className: 'string',\r\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      {\r\n        className: 'symbol',\r\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = vhdl;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,aAAS,KAAK,MAAM;AAIlB,YAAM,aAAa;AACnB,YAAM,cAAc,cAAc;AAClC,YAAM,qBAAqB,aAAa,SAAS,aAAa,QAAa,cAAc;AAEzF,YAAM,mBAAmB;AACzB,YAAM,mBAAmB,aAAa,MAAM,mBAAmB,SAAS,mBAAmB,SAAmB,cAAc;AAE5H,YAAM,YAAY,SAAS,mBAAmB,MAAM,qBAAqB;AAEzE,aAAO;AAAA,QACL,MAAM;AAAA,QACN,kBAAkB;AAAA,QAClB,UAAU;AAAA,UACR,SACE;AAAA,UASF,UACE;AAAA,UAMF,SACE;AAAA;AAAA,QAEJ;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,UACR,KAAK;AAAA;AAAA,UACL,KAAK,QAAQ,MAAM,GAAG;AAAA,UACtB,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,UAAU,CAAE,KAAK,gBAAiB;AAAA,UACpC;AAAA,UACA;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,UAAU,CAAE,KAAK,gBAAiB;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
