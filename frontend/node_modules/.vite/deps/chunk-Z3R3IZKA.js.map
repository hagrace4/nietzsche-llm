{
  "version": 3,
  "sources": ["../../refractor/lang/robotframework.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = robotframework\r\nrobotframework.displayName = 'robotframework'\r\nrobotframework.aliases = []\r\nfunction robotframework(Prism) {\r\n  ;(function (Prism) {\r\n    var comment = {\r\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\r\n      lookbehind: true,\r\n      greedy: true\r\n    }\r\n    var variable = {\r\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /^[$@&%]\\{|\\}$/\r\n      }\r\n    }\r\n    function createSection(name, inside) {\r\n      var extendecInside = {}\r\n      extendecInside['section-header'] = {\r\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\r\n        alias: 'keyword'\r\n      } // copy inside tokens\r\n      for (var token in inside) {\r\n        extendecInside[token] = inside[token]\r\n      }\r\n      extendecInside['tag'] = {\r\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\[|\\]/\r\n        }\r\n      }\r\n      extendecInside['variable'] = variable\r\n      extendecInside['comment'] = comment\r\n      return {\r\n        pattern: RegExp(\r\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\r\n            /<name>/g,\r\n            function () {\r\n              return name\r\n            }\r\n          ),\r\n          'im'\r\n        ),\r\n        alias: 'section',\r\n        inside: extendecInside\r\n      }\r\n    }\r\n    var docTag = {\r\n      pattern:\r\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\r\n      lookbehind: true,\r\n      alias: 'string'\r\n    }\r\n    var testNameLike = {\r\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\r\n      lookbehind: true,\r\n      alias: 'function',\r\n      inside: {\r\n        variable: variable\r\n      }\r\n    }\r\n    var testPropertyLike = {\r\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\r\n      lookbehind: true,\r\n      inside: {\r\n        variable: variable\r\n      }\r\n    }\r\n    Prism.languages['robotframework'] = {\r\n      settings: createSection('Settings', {\r\n        documentation: {\r\n          pattern:\r\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\r\n          lookbehind: true,\r\n          alias: 'string'\r\n        },\r\n        property: {\r\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\r\n          lookbehind: true\r\n        }\r\n      }),\r\n      variables: createSection('Variables'),\r\n      'test-cases': createSection('Test Cases', {\r\n        'test-name': testNameLike,\r\n        documentation: docTag,\r\n        property: testPropertyLike\r\n      }),\r\n      keywords: createSection('Keywords', {\r\n        'keyword-name': testNameLike,\r\n        documentation: docTag,\r\n        property: testPropertyLike\r\n      }),\r\n      tasks: createSection('Tasks', {\r\n        'task-name': testNameLike,\r\n        documentation: docTag,\r\n        property: testPropertyLike\r\n      }),\r\n      comment: comment\r\n    }\r\n    Prism.languages.robot = Prism.languages['robotframework']\r\n  })(Prism)\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,mBAAe,cAAc;AAC7B,mBAAe,UAAU,CAAC;AAC1B,aAAS,eAAe,OAAO;AAC7B;AAAC,OAAC,SAAUA,QAAO;AACjB,YAAI,UAAU;AAAA,UACZ,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACV;AACA,YAAI,WAAW;AAAA,UACb,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,aAAa;AAAA,UACf;AAAA,QACF;AACA,iBAAS,cAAc,MAAM,QAAQ;AACnC,cAAI,iBAAiB,CAAC;AACtB,yBAAe,gBAAgB,IAAI;AAAA,YACjC,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AACA,mBAAS,SAAS,QAAQ;AACxB,2BAAe,KAAK,IAAI,OAAO,KAAK;AAAA,UACtC;AACA,yBAAe,KAAK,IAAI;AAAA,YACtB,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,QAAQ;AAAA,cACN,aAAa;AAAA,YACf;AAAA,UACF;AACA,yBAAe,UAAU,IAAI;AAC7B,yBAAe,SAAS,IAAI;AAC5B,iBAAO;AAAA,YACL,SAAS;AAAA,cACP,wDAAwD,OAAO;AAAA,gBAC7D;AAAA,gBACA,WAAY;AACV,yBAAO;AAAA,gBACT;AAAA,cACF;AAAA,cACA;AAAA,YACF;AAAA,YACA,OAAO;AAAA,YACP,QAAQ;AAAA,UACV;AAAA,QACF;AACA,YAAI,SAAS;AAAA,UACX,SACE;AAAA,UACF,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AACA,YAAI,eAAe;AAAA,UACjB,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF;AACA,YAAI,mBAAmB;AAAA,UACrB,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF;AACA,QAAAA,OAAM,UAAU,gBAAgB,IAAI;AAAA,UAClC,UAAU,cAAc,YAAY;AAAA,YAClC,eAAe;AAAA,cACb,SACE;AAAA,cACF,YAAY;AAAA,cACZ,OAAO;AAAA,YACT;AAAA,YACA,UAAU;AAAA,cACR,SAAS;AAAA,cACT,YAAY;AAAA,YACd;AAAA,UACF,CAAC;AAAA,UACD,WAAW,cAAc,WAAW;AAAA,UACpC,cAAc,cAAc,cAAc;AAAA,YACxC,aAAa;AAAA,YACb,eAAe;AAAA,YACf,UAAU;AAAA,UACZ,CAAC;AAAA,UACD,UAAU,cAAc,YAAY;AAAA,YAClC,gBAAgB;AAAA,YAChB,eAAe;AAAA,YACf,UAAU;AAAA,UACZ,CAAC;AAAA,UACD,OAAO,cAAc,SAAS;AAAA,YAC5B,aAAa;AAAA,YACb,eAAe;AAAA,YACf,UAAU;AAAA,UACZ,CAAC;AAAA,UACD;AAAA,QACF;AACA,QAAAA,OAAM,UAAU,QAAQA,OAAM,UAAU,gBAAgB;AAAA,MAC1D,GAAG,KAAK;AAAA,IACV;AAAA;AAAA;",
  "names": ["Prism"]
}
