{
  "version": 3,
  "sources": ["../../refractor/lang/lua.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = lua\r\nlua.displayName = 'lua'\r\nlua.aliases = []\r\nfunction lua(Prism) {\r\n  Prism.languages.lua = {\r\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\r\n    // \\z may be used to skip the following space\r\n    string: {\r\n      pattern:\r\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\r\n      greedy: true\r\n    },\r\n    number:\r\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\r\n    keyword:\r\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\r\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\r\n    operator: [\r\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\r\n      {\r\n        // Match \"..\" but don't break \"...\"\r\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,QAAI,cAAc;AAClB,QAAI,UAAU,CAAC;AACf,aAAS,IAAI,OAAO;AAClB,YAAM,UAAU,MAAM;AAAA,QACpB,SAAS;AAAA;AAAA,QAET,QAAQ;AAAA,UACN,SACE;AAAA,UACF,QAAQ;AAAA,QACV;AAAA,QACA,QACE;AAAA,QACF,SACE;AAAA,QACF,UAAU;AAAA,QACV,UAAU;AAAA,UACR;AAAA,UACA;AAAA;AAAA,YAEE,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,aAAa;AAAA,MACf;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
