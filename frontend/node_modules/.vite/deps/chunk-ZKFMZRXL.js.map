{
  "version": 3,
  "sources": ["../../highlight.js/lib/languages/basic.js"],
  "sourcesContent": ["/*\r\nLanguage: BASIC\r\nAuthor: Raphaël Assénat <raph@raphnet.net>\r\nDescription: Based on the BASIC reference from the Tandy 1000 guide\r\nWebsite: https://en.wikipedia.org/wiki/Tandy_1000\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction basic(hljs) {\r\n  return {\r\n    name: 'BASIC',\r\n    case_insensitive: true,\r\n    illegal: '^\\.',\r\n    // Support explicitly typed variables that end with $%! or #.\r\n    keywords: {\r\n      $pattern: '[a-zA-Z][a-zA-Z0-9_$%!#]*',\r\n      keyword:\r\n        'ABS ASC AND ATN AUTO|0 BEEP BLOAD|10 BSAVE|10 CALL CALLS CDBL CHAIN CHDIR CHR$|10 CINT CIRCLE ' +\r\n        'CLEAR CLOSE CLS COLOR COM COMMON CONT COS CSNG CSRLIN CVD CVI CVS DATA DATE$ ' +\r\n        'DEFDBL DEFINT DEFSNG DEFSTR DEF|0 SEG USR DELETE DIM DRAW EDIT END ENVIRON ENVIRON$ ' +\r\n        'EOF EQV ERASE ERDEV ERDEV$ ERL ERR ERROR EXP FIELD FILES FIX FOR|0 FRE GET GOSUB|10 GOTO ' +\r\n        'HEX$ IF THEN ELSE|0 INKEY$ INP INPUT INPUT# INPUT$ INSTR IMP INT IOCTL IOCTL$ KEY ON ' +\r\n        'OFF LIST KILL LEFT$ LEN LET LINE LLIST LOAD LOC LOCATE LOF LOG LPRINT USING LSET ' +\r\n        'MERGE MID$ MKDIR MKD$ MKI$ MKS$ MOD NAME NEW NEXT NOISE NOT OCT$ ON OR PEN PLAY STRIG OPEN OPTION ' +\r\n        'BASE OUT PAINT PALETTE PCOPY PEEK PMAP POINT POKE POS PRINT PRINT] PSET PRESET ' +\r\n        'PUT RANDOMIZE READ REM RENUM RESET|0 RESTORE RESUME RETURN|0 RIGHT$ RMDIR RND RSET ' +\r\n        'RUN SAVE SCREEN SGN SHELL SIN SOUND SPACE$ SPC SQR STEP STICK STOP STR$ STRING$ SWAP ' +\r\n        'SYSTEM TAB TAN TIME$ TIMER TROFF TRON TO USR VAL VARPTR VARPTR$ VIEW WAIT WHILE ' +\r\n        'WEND WIDTH WINDOW WRITE XOR'\r\n    },\r\n    contains: [\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.COMMENT('REM', '$', {\r\n        relevance: 10\r\n      }),\r\n      hljs.COMMENT('\\'', '$', {\r\n        relevance: 0\r\n      }),\r\n      {\r\n        // Match line numbers\r\n        className: 'symbol',\r\n        begin: '^[0-9]+ ',\r\n        relevance: 10\r\n      },\r\n      {\r\n        // Match typed numeric constants (1000, 12.34!, 1.2e5, 1.5#, 1.2D2)\r\n        className: 'number',\r\n        begin: '\\\\b\\\\d+(\\\\.\\\\d+)?([edED]\\\\d+)?[#\\!]?',\r\n        relevance: 0\r\n      },\r\n      {\r\n        // Match hexadecimal numbers (&Hxxxx)\r\n        className: 'number',\r\n        begin: '(&[hH][0-9a-fA-F]{1,4})'\r\n      },\r\n      {\r\n        // Match octal numbers (&Oxxxxxx)\r\n        className: 'number',\r\n        begin: '(&[oO][0-7]{1,6})'\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = basic;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAQA,aAAS,MAAM,MAAM;AACnB,aAAO;AAAA,QACL,MAAM;AAAA,QACN,kBAAkB;AAAA,QAClB,SAAS;AAAA;AAAA,QAET,UAAU;AAAA,UACR,UAAU;AAAA,UACV,SACE;AAAA,QAYJ;AAAA,QACA,UAAU;AAAA,UACR,KAAK;AAAA,UACL,KAAK,QAAQ,OAAO,KAAK;AAAA,YACvB,WAAW;AAAA,UACb,CAAC;AAAA,UACD,KAAK,QAAQ,KAAM,KAAK;AAAA,YACtB,WAAW;AAAA,UACb,CAAC;AAAA,UACD;AAAA;AAAA,YAEE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UACA;AAAA;AAAA,YAEE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,UACb;AAAA,UACA;AAAA;AAAA,YAEE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,UACA;AAAA;AAAA,YAEE,WAAW;AAAA,YACX,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
