{
  "version": 3,
  "sources": ["../../refractor/lang/oz.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = oz\r\noz.displayName = 'oz'\r\noz.aliases = []\r\nfunction oz(Prism) {\r\n  Prism.languages.oz = {\r\n    comment: {\r\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\r\n      greedy: true\r\n    },\r\n    atom: {\r\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n      greedy: true,\r\n      alias: 'builtin'\r\n    },\r\n    keyword:\r\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\r\n    function: [\r\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\r\n      {\r\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    number:\r\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\r\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\r\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\r\n    operator:\r\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\r\n    punctuation: /[\\[\\](){}.:;?]/\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,UAAU;AACjB,OAAG,cAAc;AACjB,OAAG,UAAU,CAAC;AACd,aAAS,GAAG,OAAO;AACjB,YAAM,UAAU,KAAK;AAAA,QACnB,SAAS;AAAA,UACP,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,QACV;AAAA,QACA,MAAM;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,QACA,SACE;AAAA,QACF,UAAU;AAAA,UACR;AAAA,UACA;AAAA,YACE,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,QACE;AAAA,QACF,UAAU;AAAA,QACV,aAAa;AAAA,QACb,UACE;AAAA,QACF,aAAa;AAAA,MACf;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
