{
  "version": 3,
  "sources": ["../../refractor/lang/aspnet.js"],
  "sourcesContent": ["'use strict'\r\nvar refractorCsharp = require('./csharp.js')\r\nmodule.exports = aspnet\r\naspnet.displayName = 'aspnet'\r\naspnet.aliases = []\r\nfunction aspnet(Prism) {\r\n  Prism.register(refractorCsharp)\r\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\r\n    'page-directive': {\r\n      pattern: /<%\\s*@.*%>/,\r\n      alias: 'tag',\r\n      inside: {\r\n        'page-directive': {\r\n          pattern:\r\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\r\n          alias: 'tag'\r\n        },\r\n        rest: Prism.languages.markup.tag.inside\r\n      }\r\n    },\r\n    directive: {\r\n      pattern: /<%.*%>/,\r\n      alias: 'tag',\r\n      inside: {\r\n        directive: {\r\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\r\n          alias: 'tag'\r\n        },\r\n        rest: Prism.languages.csharp\r\n      }\r\n    }\r\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\r\n  Prism.languages.aspnet.tag.pattern =\r\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\r\n  Prism.languages.insertBefore(\r\n    'inside',\r\n    'punctuation',\r\n    {\r\n      directive: Prism.languages.aspnet['directive']\r\n    },\r\n    Prism.languages.aspnet.tag.inside['attr-value']\r\n  )\r\n  Prism.languages.insertBefore('aspnet', 'comment', {\r\n    'asp-comment': {\r\n      pattern: /<%--[\\s\\S]*?--%>/,\r\n      alias: ['asp', 'comment']\r\n    }\r\n  }) // script runat=\"server\" contains csharp, not javascript\r\n  Prism.languages.insertBefore(\r\n    'aspnet',\r\n    Prism.languages.javascript ? 'script' : 'tag',\r\n    {\r\n      'asp-script': {\r\n        pattern:\r\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\r\n        lookbehind: true,\r\n        alias: ['asp', 'script'],\r\n        inside: Prism.languages.csharp || {}\r\n      }\r\n    }\r\n  )\r\n}\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,QAAI,kBAAkB;AACtB,WAAO,UAAU;AACjB,WAAO,cAAc;AACrB,WAAO,UAAU,CAAC;AAClB,aAAS,OAAO,OAAO;AACrB,YAAM,SAAS,eAAe;AAC9B,YAAM,UAAU,SAAS,MAAM,UAAU,OAAO,UAAU;AAAA,QACxD,kBAAkB;AAAA,UAChB,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,kBAAkB;AAAA,cAChB,SACE;AAAA,cACF,OAAO;AAAA,YACT;AAAA,YACA,MAAM,MAAM,UAAU,OAAO,IAAI;AAAA,UACnC;AAAA,QACF;AAAA,QACA,WAAW;AAAA,UACT,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,YACN,WAAW;AAAA,cACT,SAAS;AAAA,cACT,OAAO;AAAA,YACT;AAAA,YACA,MAAM,MAAM,UAAU;AAAA,UACxB;AAAA,QACF;AAAA,MACF,CAAC;AACD,YAAM,UAAU,OAAO,IAAI,UACzB;AACF,YAAM,UAAU;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,UACE,WAAW,MAAM,UAAU,OAAO,WAAW;AAAA,QAC/C;AAAA,QACA,MAAM,UAAU,OAAO,IAAI,OAAO,YAAY;AAAA,MAChD;AACA,YAAM,UAAU,aAAa,UAAU,WAAW;AAAA,QAChD,eAAe;AAAA,UACb,SAAS;AAAA,UACT,OAAO,CAAC,OAAO,SAAS;AAAA,QAC1B;AAAA,MACF,CAAC;AACD,YAAM,UAAU;AAAA,QACd;AAAA,QACA,MAAM,UAAU,aAAa,WAAW;AAAA,QACxC;AAAA,UACE,cAAc;AAAA,YACZ,SACE;AAAA,YACF,YAAY;AAAA,YACZ,OAAO,CAAC,OAAO,QAAQ;AAAA,YACvB,QAAQ,MAAM,UAAU,UAAU,CAAC;AAAA,UACrC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
